From cb665f755da0e6640693df87ef135556e09c3b7a Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Wed, 17 Feb 2016 16:45:45 -0800
Subject: [PATCH 01/24] Add a body-level class when the panels_ipe TabsView is
 open.

---
 panels_ipe/js/views/TabsView.js | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/panels_ipe/js/views/TabsView.js b/panels_ipe/js/views/TabsView.js
index 4221b43..41d7b3e 100644
--- a/panels_ipe/js/views/TabsView.js
+++ b/panels_ipe/js/views/TabsView.js
@@ -168,7 +168,12 @@
     closeTabContent: function () {
       // Close the tab, then re-render.
       var self = this;
-      this.$('.ipe-tabs-content')['slideUp']('fast', function () { self.render(); });
+      this.$('.ipe-tabs-content')['slideUp']('fast', function () {
+        self.render();
+      });
+
+      // Add a top-level body class.
+      $('body').removeClass('panels-ipe-tabs-open');
     },
 
     /**
@@ -179,6 +184,9 @@
       this.render();
       this.$('.ipe-tabs-content').hide();
       this.$('.ipe-tabs-content')['slideDown']('fast');
+
+      // Add a top-level body class.
+      $('body').addClass('panels-ipe-tabs-open');
     }
 
   });

From 5ce395123633dfd3c2d4d8a9fbcc055cd27a06a5 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Fri, 19 Feb 2016 09:41:43 -0800
Subject: [PATCH 02/24] Added a body class when the IPE is active.

---
 panels_ipe/js/views/AppView.js  | 6 ++++++
 panels_ipe/js/views/TabsView.js | 2 +-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/panels_ipe/js/views/AppView.js b/panels_ipe/js/views/AppView.js
index 6f9f823..1a04740 100644
--- a/panels_ipe/js/views/AppView.js
+++ b/panels_ipe/js/views/AppView.js
@@ -110,6 +110,9 @@
       this.model.get('layout').set({active: true});
 
       this.$el.addClass('active');
+
+      // Add a top-level body class.
+      $('body').addClass('panels-ipe-active');
     },
 
     /**
@@ -128,6 +131,9 @@
       this.model.get('layout').set({active: false});
 
       this.$el.removeClass('active');
+
+      // Remove our top-level body class.
+      $('body').removeClass('panels-ipe-active');
     },
 
     /**
diff --git a/panels_ipe/js/views/TabsView.js b/panels_ipe/js/views/TabsView.js
index 41d7b3e..d5a5f7c 100644
--- a/panels_ipe/js/views/TabsView.js
+++ b/panels_ipe/js/views/TabsView.js
@@ -172,7 +172,7 @@
         self.render();
       });
 
-      // Add a top-level body class.
+      // Remove our top-level body class.
       $('body').removeClass('panels-ipe-tabs-open');
     },
 

From 8640d023614620ecc9728fb858bb64505b185e47 Mon Sep 17 00:00:00 2001
From: Jakob Perry <japerry@45640.no-reply.drupal.org>
Date: Tue, 23 Feb 2016 11:28:11 -0800
Subject: [PATCH 03/24] Issue #2659614 by legolasbo, muschpusch, japerry:
 Remove 'flexible' layout and convert remaining D7 layout plugins to D8

---
 layouts/onecol/onecol.css                          |    3 +
 layouts/onecol/onecol.png                          |  Bin 0 -> 122 bytes
 layouts/onecol/panels-onecol.html.twig             |   19 +
 .../panels-threecol-25-50-25.html.twig             |   29 +
 layouts/threecol_25_50_25/threecol_25_50_25.css    |   12 +
 layouts/threecol_25_50_25/threecol_25_50_25.png    |  Bin 0 -> 200 bytes
 .../panels-threecol-25-50-25-stacked.html.twig     |   44 +
 .../threecol_25_50_25_stacked.css                  |   17 +
 .../threecol_25_50_25_stacked.png                  |  Bin 0 -> 208 bytes
 .../panels-threecol-33-34-33.html.twig             |   29 +
 layouts/threecol_33_34_33/threecol_33_34_33.css    |    9 +
 layouts/threecol_33_34_33/threecol_33_34_33.png    |  Bin 0 -> 196 bytes
 .../panels-threecol-33-34-33-stacked.html.twig     |   44 +
 .../threecol_33_34_33_stacked.css                  |   13 +
 .../threecol_33_34_33_stacked.png                  |  Bin 0 -> 208 bytes
 layouts/twocol/panels-twocol.html.twig             |   25 +
 layouts/twocol/twocol.css                          |    9 +
 layouts/twocol/twocol.png                          |  Bin 0 -> 193 bytes
 .../twocol_bricks/panels-twocol-bricks.html.twig   |   50 +
 layouts/twocol_bricks/twocol_bricks.css            |   13 +
 layouts/twocol_bricks/twocol_bricks.png            |  Bin 0 -> 277 bytes
 .../twocol_stacked/panels-twocol-stacked.html.twig |   36 +
 layouts/twocol_stacked/twocol_stacked.css          |   13 +
 layouts/twocol_stacked/twocol_stacked.png          |  Bin 0 -> 202 bytes
 panels.layouts.yml                                 |  112 +-
 plugins/layouts/flexible/flexible-admin.css        |   87 -
 plugins/layouts/flexible/flexible-admin.js         |  421 -----
 plugins/layouts/flexible/flexible.css              |    4 -
 plugins/layouts/flexible/flexible.inc              | 1802 --------------------
 plugins/layouts/flexible/flexible.png              |  Bin 208 -> 0 bytes
 plugins/layouts/flexible/grippie-vertical.png      |  Bin 265 -> 0 bytes
 plugins/layouts/onecol/onecol.css                  |   22 -
 plugins/layouts/onecol/onecol.inc                  |   14 -
 plugins/layouts/onecol/onecol.png                  |  Bin 122 -> 0 bytes
 plugins/layouts/onecol/panels-onecol.html.twig     |   19 -
 .../panels-threecol-25-50-25.tpl.php               |   29 -
 .../threecol_25_50_25/threecol_25_50_25.css        |   35 -
 .../threecol_25_50_25/threecol_25_50_25.inc        |   20 -
 .../threecol_25_50_25/threecol_25_50_25.png        |  Bin 200 -> 0 bytes
 .../panels-threecol-25-50-25-stacked.tpl.php       |   46 -
 .../threecol_25_50_25_stacked.css                  |   45 -
 .../threecol_25_50_25_stacked.inc                  |   17 -
 .../threecol_25_50_25_stacked.png                  |  Bin 208 -> 0 bytes
 .../panels-threecol-33-34-33.tpl.php               |   31 -
 .../threecol_33_34_33/threecol_33_34_33.css        |   35 -
 .../threecol_33_34_33/threecol_33_34_33.inc        |   15 -
 .../threecol_33_34_33/threecol_33_34_33.png        |  Bin 196 -> 0 bytes
 .../panels-threecol-33-34-33-stacked.tpl.php       |   46 -
 .../threecol_33_34_33_stacked.css                  |   45 -
 .../threecol_33_34_33_stacked.inc                  |   17 -
 .../threecol_33_34_33_stacked.png                  |  Bin 208 -> 0 bytes
 plugins/layouts/twocol/panels-twocol.html.twig     |   25 -
 plugins/layouts/twocol/twocol.css                  |   37 -
 plugins/layouts/twocol/twocol.inc                  |   14 -
 plugins/layouts/twocol/twocol.png                  |  Bin 193 -> 0 bytes
 .../twocol_bricks/panels-twocol-bricks.tpl.php     |   53 -
 plugins/layouts/twocol_bricks/twocol_bricks.css    |   46 -
 plugins/layouts/twocol_bricks/twocol_bricks.inc    |   25 -
 plugins/layouts/twocol_bricks/twocol_bricks.png    |  Bin 277 -> 0 bytes
 .../twocol_stacked/panels-twocol-stacked.tpl.php   |   40 -
 plugins/layouts/twocol_stacked/twocol_stacked.css  |   41 -
 plugins/layouts/twocol_stacked/twocol_stacked.inc  |   16 -
 plugins/layouts/twocol_stacked/twocol_stacked.png  |  Bin 202 -> 0 bytes
 63 files changed, 475 insertions(+), 3049 deletions(-)
 create mode 100644 layouts/onecol/onecol.css
 create mode 100644 layouts/onecol/onecol.png
 create mode 100644 layouts/onecol/panels-onecol.html.twig
 create mode 100644 layouts/threecol_25_50_25/panels-threecol-25-50-25.html.twig
 create mode 100644 layouts/threecol_25_50_25/threecol_25_50_25.css
 create mode 100644 layouts/threecol_25_50_25/threecol_25_50_25.png
 create mode 100644 layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.html.twig
 create mode 100644 layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css
 create mode 100644 layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.png
 create mode 100644 layouts/threecol_33_34_33/panels-threecol-33-34-33.html.twig
 create mode 100644 layouts/threecol_33_34_33/threecol_33_34_33.css
 create mode 100644 layouts/threecol_33_34_33/threecol_33_34_33.png
 create mode 100644 layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.html.twig
 create mode 100644 layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css
 create mode 100644 layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.png
 create mode 100644 layouts/twocol/panels-twocol.html.twig
 create mode 100644 layouts/twocol/twocol.css
 create mode 100644 layouts/twocol/twocol.png
 create mode 100644 layouts/twocol_bricks/panels-twocol-bricks.html.twig
 create mode 100644 layouts/twocol_bricks/twocol_bricks.css
 create mode 100644 layouts/twocol_bricks/twocol_bricks.png
 create mode 100644 layouts/twocol_stacked/panels-twocol-stacked.html.twig
 create mode 100644 layouts/twocol_stacked/twocol_stacked.css
 create mode 100644 layouts/twocol_stacked/twocol_stacked.png
 delete mode 100644 plugins/layouts/flexible/flexible-admin.css
 delete mode 100644 plugins/layouts/flexible/flexible-admin.js
 delete mode 100644 plugins/layouts/flexible/flexible.css
 delete mode 100644 plugins/layouts/flexible/flexible.inc
 delete mode 100644 plugins/layouts/flexible/flexible.png
 delete mode 100644 plugins/layouts/flexible/grippie-vertical.png
 delete mode 100644 plugins/layouts/onecol/onecol.css
 delete mode 100644 plugins/layouts/onecol/onecol.inc
 delete mode 100644 plugins/layouts/onecol/onecol.png
 delete mode 100644 plugins/layouts/onecol/panels-onecol.html.twig
 delete mode 100644 plugins/layouts/threecol_25_50_25/panels-threecol-25-50-25.tpl.php
 delete mode 100644 plugins/layouts/threecol_25_50_25/threecol_25_50_25.css
 delete mode 100644 plugins/layouts/threecol_25_50_25/threecol_25_50_25.inc
 delete mode 100644 plugins/layouts/threecol_25_50_25/threecol_25_50_25.png
 delete mode 100644 plugins/layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.tpl.php
 delete mode 100644 plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css
 delete mode 100644 plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.inc
 delete mode 100644 plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.png
 delete mode 100644 plugins/layouts/threecol_33_34_33/panels-threecol-33-34-33.tpl.php
 delete mode 100644 plugins/layouts/threecol_33_34_33/threecol_33_34_33.css
 delete mode 100644 plugins/layouts/threecol_33_34_33/threecol_33_34_33.inc
 delete mode 100644 plugins/layouts/threecol_33_34_33/threecol_33_34_33.png
 delete mode 100644 plugins/layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.tpl.php
 delete mode 100644 plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css
 delete mode 100644 plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.inc
 delete mode 100644 plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.png
 delete mode 100644 plugins/layouts/twocol/panels-twocol.html.twig
 delete mode 100644 plugins/layouts/twocol/twocol.css
 delete mode 100644 plugins/layouts/twocol/twocol.inc
 delete mode 100644 plugins/layouts/twocol/twocol.png
 delete mode 100644 plugins/layouts/twocol_bricks/panels-twocol-bricks.tpl.php
 delete mode 100644 plugins/layouts/twocol_bricks/twocol_bricks.css
 delete mode 100644 plugins/layouts/twocol_bricks/twocol_bricks.inc
 delete mode 100644 plugins/layouts/twocol_bricks/twocol_bricks.png
 delete mode 100644 plugins/layouts/twocol_stacked/panels-twocol-stacked.tpl.php
 delete mode 100644 plugins/layouts/twocol_stacked/twocol_stacked.css
 delete mode 100644 plugins/layouts/twocol_stacked/twocol_stacked.inc
 delete mode 100644 plugins/layouts/twocol_stacked/twocol_stacked.png

diff --git a/layouts/onecol/onecol.css b/layouts/onecol/onecol.css
new file mode 100644
index 0000000..743f22f
--- /dev/null
+++ b/layouts/onecol/onecol.css
@@ -0,0 +1,3 @@
+.panel-1col .panel-panel{
+  width: 100%;
+}
diff --git a/layouts/onecol/onecol.png b/layouts/onecol/onecol.png
new file mode 100644
index 0000000000000000000000000000000000000000..176ed69e7f59d6705471a00705b143131cdc03a4
GIT binary patch
literal 122
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%0VEj2E4x#Gl%uDMV~9uR+v^*7859H#JJ=_M
zrzPD=Z)<RQ`bB+dsp(5Mof!dw8EPAtH?HgRR1xZQQJUxhq@GL+Ies)eKIjWW&s(;s
T5!s8vK!$p{`njxgN@xNA`cx+W

literal 0
HcmV?d00001

diff --git a/layouts/onecol/panels-onecol.html.twig b/layouts/onecol/panels-onecol.html.twig
new file mode 100644
index 0000000..0e898ef
--- /dev/null
+++ b/layouts/onecol/panels-onecol.html.twig
@@ -0,0 +1,19 @@
+{#
+/**
+ * @file
+ * Template for a one column panel layout.
+ *
+ * This template provides a very simple "one column" panel display layout.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - content.middle: The only panel in the layout.
+ */
+#}
+<div class="panel-1col" {% if css_id %}{{ css_id }}{% endif %}>
+  <div class="panel-panel">
+    {{ content.middle }}
+  </div>
+</div>
diff --git a/layouts/threecol_25_50_25/panels-threecol-25-50-25.html.twig b/layouts/threecol_25_50_25/panels-threecol-25-50-25.html.twig
new file mode 100644
index 0000000..d3c9e2c
--- /dev/null
+++ b/layouts/threecol_25_50_25/panels-threecol-25-50-25.html.twig
@@ -0,0 +1,29 @@
+{#
+/**
+ * @file
+ * Template for a 3 column panel layout.
+ *
+ * This template provides a three column 25%-50%-25% panel display layout.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - content.left: Content in the left column.
+ *   - content.middle: Content in the middle column.
+ *   - content.right: Content in the right column.
+ */
+#}
+<div class="panel-3col" {% if css_id %}{{ css_id }}{% endif %}>
+  <div class="panel-panel">
+    {{ content.left }}
+  </div>
+
+  <div class="panel-panel panel-col-middle">
+    {{ content.middle }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right }}
+  </div>
+</div>
diff --git a/layouts/threecol_25_50_25/threecol_25_50_25.css b/layouts/threecol_25_50_25/threecol_25_50_25.css
new file mode 100644
index 0000000..5da1dfc
--- /dev/null
+++ b/layouts/threecol_25_50_25/threecol_25_50_25.css
@@ -0,0 +1,12 @@
+.panel-3col {
+  display: flex;
+  justify-content: space-between;
+}
+
+.panel-3col > .panel-panel {
+  flex: 0 1 25%;
+}
+
+.panel-3col > .panel-col-middle {
+  flex: 0 1 50%;
+}
diff --git a/layouts/threecol_25_50_25/threecol_25_50_25.png b/layouts/threecol_25_50_25/threecol_25_50_25.png
new file mode 100644
index 0000000000000000000000000000000000000000..ad6832a7b0cc3329880cfb2ea54b474d83c10924
GIT binary patch
literal 200
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYym
z^>lFzskrs#`bJ&`1s>*u5B|2hIdxd1YApD<KIRFVM^9OyYssd_&$C^Vmd`Q$$;-mj
q=%66L0ix_C{yYBtf#_T&9)?99+2T(<I+zDEkipZ{&t;ucLK6U;5<-;#

literal 0
HcmV?d00001

diff --git a/layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.html.twig b/layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.html.twig
new file mode 100644
index 0000000..8f77316
--- /dev/null
+++ b/layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.html.twig
@@ -0,0 +1,44 @@
+{#
+/**
+ * @file
+ * Template for a 3 column panel layout.
+ *
+ * This template provides a three column 25%-50%-25% panel display layout, with
+ * additional areas for the top and the bottom.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - content.top: Content in the top row.
+ *   - content.left: Content in the left column.
+ *   - content.middle: Content in the middle column.
+ *   - content.right: Content in the right column.
+ *   - content.bottom: Content in the bottom row.
+ */
+#}
+<div class="panel-3col-stacked" {% if css_id %}{{ css_id }}{% endif %}>
+  {% if content.top %}
+    <div class="panel-panel panel-full-width">
+      {{ content.top }}
+    </div>
+  {% endif %}
+
+  <div class="panel-panel">
+    {{ content.left }}
+  </div>
+
+  <div class="panel-panel panel-col-middle">
+    {{ content.middle }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right }}
+  </div>
+
+  {% if content.bottom %}
+    <div class="panel-panel panel-full-width">
+      {{ content.bottom }}
+    </div>
+  {% endif %}
+</div>
diff --git a/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css b/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css
new file mode 100644
index 0000000..ff0bcd7
--- /dev/null
+++ b/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css
@@ -0,0 +1,17 @@
+.panel-3col-stacked {
+  display: flex;
+  flex-wrap: wrap;
+  justify-content: space-between;
+}
+
+.panel-3col-stacked > .panel-panel {
+  flex: 0 1 25%;
+}
+
+.panel-3col-stacked > .panel-full-width {
+  flex: 0 1 100%;
+}
+
+.panel-3col-stacked > .panel-col-middle {
+  flex: 0 1 50%;
+}
diff --git a/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.png b/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.png
new file mode 100644
index 0000000000000000000000000000000000000000..14b4779a0b4f7d3516092e6790310aa559c96fe9
GIT binary patch
literal 208
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIY!6
z^>lFzskrs#nj#;A0*~{>b>Hnxn3`v5ux$R56(=^SYt^F{T^6U*xR_?TeL7@wb(3vG
ztnS^~)6b<jSeP0e6ejSi+&AE<IMKs6KaJCX;g|?Jf2GGtC!oO$p00i_>zopr0DMqF
A?EnA(

literal 0
HcmV?d00001

diff --git a/layouts/threecol_33_34_33/panels-threecol-33-34-33.html.twig b/layouts/threecol_33_34_33/panels-threecol-33-34-33.html.twig
new file mode 100644
index 0000000..e54ad03
--- /dev/null
+++ b/layouts/threecol_33_34_33/panels-threecol-33-34-33.html.twig
@@ -0,0 +1,29 @@
+{#
+/**
+ * @file
+ * Template for a 3 column panel layout.
+ *
+ * This template provides a three column 33%-34%-33% panel display layout.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - content.left: Content in the left column.
+ *   - content.middle: Content in the middle column.
+ *   - content.right: Content in the right column.
+ */
+#}
+<div class="panel-3col-33" {% if css_id %}{{ css_id }}{% endif %}>
+  <div class="panel-panel">
+    {{ content.left }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.middle }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right }}
+  </div>
+</div>
diff --git a/layouts/threecol_33_34_33/threecol_33_34_33.css b/layouts/threecol_33_34_33/threecol_33_34_33.css
new file mode 100644
index 0000000..898c9ec
--- /dev/null
+++ b/layouts/threecol_33_34_33/threecol_33_34_33.css
@@ -0,0 +1,9 @@
+.panel-3col-33 {
+  display: flex;
+  flex-wrap: wrap;
+  justify-content: space-between;
+}
+
+.panel-3col-33 > .panel-panel {
+  flex: 1 33%;
+}
diff --git a/layouts/threecol_33_34_33/threecol_33_34_33.png b/layouts/threecol_33_34_33/threecol_33_34_33.png
new file mode 100644
index 0000000000000000000000000000000000000000..468f8bbe84d91eaeebcce79226896c259157d362
GIT binary patch
literal 196
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYym
z^mK6yskrs#`a(el1s>)Dm;Sc9C1_{}B-rWg{LLuz)}qjLQ_9NQ1|B{qqqZ|T3a~)X
jPq%aO_nWnEu}Uy3`p6bP@lo{`pkWN2u6{1-oD!M<1|~jJ

literal 0
HcmV?d00001

diff --git a/layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.html.twig b/layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.html.twig
new file mode 100644
index 0000000..2848756
--- /dev/null
+++ b/layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.html.twig
@@ -0,0 +1,44 @@
+{#
+/**
+ * @file
+ * Template for a 3 column panel layout.
+ *
+ * This template provides a three column 33%-34%-33% panel display layout, with
+ * additional areas for the top and the bottom.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - content.top: Content in the top row.
+ *   - content.left: Content in the left column.
+ *   - content.middle: Content in the middle column.
+ *   - content.right: Content in the right column.
+ *   - content.bottom: Content in the bottom row.
+ */
+#}
+<div class="panel-3col-33-stacked" {% if css_id %}{{ css_id }}{% endif %}>
+  {% if content.top %}
+    <div class="panel-panel panel-full-width">
+      {{ content.top }}
+    </div>
+  {% endif %}
+
+  <div class="panel-panel">
+    {{ content.left }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.middle }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right }}
+  </div>
+
+  {% if content.bottom %}
+    <div class="panel-panel panel-full-width">
+      {{ content.bottom }}
+    </div>
+  {% endif %}
+</div>
diff --git a/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css b/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css
new file mode 100644
index 0000000..04b1ebe
--- /dev/null
+++ b/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css
@@ -0,0 +1,13 @@
+.panel-3col-33-stacked {
+  display: flex;
+  flex-wrap: wrap;
+  justify-content: space-between;
+}
+
+.panel-3col-33-stacked > .panel-panel {
+  flex: 0 1 33%;
+}
+
+.panel-3col-33-stacked > .panel-full-width {
+  flex: 0 1 100%;
+}
diff --git a/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.png b/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.png
new file mode 100644
index 0000000000000000000000000000000000000000..ffd1351367c03371fbc00d7cde6a435ce0998df8
GIT binary patch
literal 208
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIY!6
z^>lFzskrs#njsg10*~{>E#K|8G)K#NiA?{r`P5<#$weC$YflO@n<#j~<dOKZozsqA
ze33QtYj)&)MF9>LrbY)lf%?M+4-}2r_RLm2z;H~2o&R*+wS1t#44$rjF6*2Ung9Uk
BMm7Kd

literal 0
HcmV?d00001

diff --git a/layouts/twocol/panels-twocol.html.twig b/layouts/twocol/panels-twocol.html.twig
new file mode 100644
index 0000000..776c865
--- /dev/null
+++ b/layouts/twocol/panels-twocol.html.twig
@@ -0,0 +1,25 @@
+{#
+/**
+ * @file
+ * Template for a 2 column panel layout.
+ *
+ * This template provides a two column panel display layout, with
+ * each column roughly equal in width.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - $content['left']: Content in the left column.
+ *   - $content['right']: Content in the right column.
+ */
+#}
+<div class="panel-2col" {% if css_id %}{{ css_id }}{% endif %}>
+  <div class="panel-panel">
+    {{ content.left }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right }}
+  </div>
+</div>
diff --git a/layouts/twocol/twocol.css b/layouts/twocol/twocol.css
new file mode 100644
index 0000000..13fef2c
--- /dev/null
+++ b/layouts/twocol/twocol.css
@@ -0,0 +1,9 @@
+.panel-2col {
+  display: flex;
+  flex-wrap: wrap;
+  justify-content: space-between;
+}
+
+.panel-2col > .panel-panel {
+  flex: 0 1 50%;
+}
diff --git a/layouts/twocol/twocol.png b/layouts/twocol/twocol.png
new file mode 100644
index 0000000000000000000000000000000000000000..9d2965eb15b9750b40c5c7458cd5188c63f1ad59
GIT binary patch
literal 193
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYzR
z^K@|xskrs#`a(el1p(%RAO4E>9<XC#nPEF~rmlkI@uyuOx6{_SUJCgu!{R6aK~JPD
g>udPey%0%YSTLEDqhRq{U7$$}p00i_>zopr09&0rfB*mh

literal 0
HcmV?d00001

diff --git a/layouts/twocol_bricks/panels-twocol-bricks.html.twig b/layouts/twocol_bricks/panels-twocol-bricks.html.twig
new file mode 100644
index 0000000..3b1d634
--- /dev/null
+++ b/layouts/twocol_bricks/panels-twocol-bricks.html.twig
@@ -0,0 +1,50 @@
+{#
+/**
+ * @file
+ * Template for a 2 column panel layout.
+ *
+ * This template provides a two column panel display layout with full width
+ * areas at the top, bottom and in the middle.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - content.top: Content in the top row.
+ *   - content.left_above: Content in the top left column.
+ *   - content.right_above: Content in the top right column.
+ *   - content.middle: Content in the middle column.
+ *   - content.left_below: Content in the bottom left column.
+ *   - content.right_below: Content in the bottom right column.
+ *   - content.bottom: Content in the bottom row.
+ */
+#}
+<div class="panel-2col-bricks" {% if css_id %}{{ css_id }}{% endif %}>
+  <div class="panel-panel panel-full-width">
+    {{ content.top }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.left_above }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right_above }}
+  </div>
+
+  <div class="panel-panel panel-full-width">
+    {{ content.middle }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.left_below }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right_below }}
+  </div>
+
+  <div class="panel-panel panel-full-width">
+    {{ content.bottom }}
+  </div>
+</div>
diff --git a/layouts/twocol_bricks/twocol_bricks.css b/layouts/twocol_bricks/twocol_bricks.css
new file mode 100644
index 0000000..0954aed
--- /dev/null
+++ b/layouts/twocol_bricks/twocol_bricks.css
@@ -0,0 +1,13 @@
+.panel-2col-bricks {
+  display: flex;
+  flex-wrap: wrap;
+  justify-content: space-between;
+}
+
+.panel-2col-bricks > .panel-panel {
+  flex: 0 1 50%;
+}
+
+.panel-2col-bricks > .panel-full-width {
+  flex: 0 1 100%;
+}
diff --git a/layouts/twocol_bricks/twocol_bricks.png b/layouts/twocol_bricks/twocol_bricks.png
new file mode 100644
index 0000000000000000000000000000000000000000..450395c801c960fdff5b5acb6100a314d7926042
GIT binary patch
literal 277
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!2~4t7C65LQY`6?zK#qG>ra@ocD)4hB}-f*
zN`mv#O3D+9QW+dm@{>{(JaZG%Q-e|yQz{EjrrH1%E%$VB45_&F=7uBRVFex*hnS}u
zZ94B?3iJ5saQD%Y!>Xrpg;;hMow1DG`!z%L`bIgyK$b0K?=9{hm$>b__xq*U9j&dc
zrKVwPPVdY35%O9vGw|=P4O8OhNnTAqQa9uKA}MYVcrCT2e4>YDbYyRC<)UW_Cy%)C
z9yxUA(666H8*d6-RWtKb5(9#3@*8{HwtZQ<e#_-FlSfSl4jtO1d^+O^+w31A2@J}2
Wa`GHk-2l3nfx*+&&t;ucLK6V65OJLV

literal 0
HcmV?d00001

diff --git a/layouts/twocol_stacked/panels-twocol-stacked.html.twig b/layouts/twocol_stacked/panels-twocol-stacked.html.twig
new file mode 100644
index 0000000..75e9514
--- /dev/null
+++ b/layouts/twocol_stacked/panels-twocol-stacked.html.twig
@@ -0,0 +1,36 @@
+{#
+/**
+ * @file
+ * Template for a 2 column panel layout.
+ *
+ * This template provides a two column panel display layout, with
+ * additional areas for the top and the bottom.
+ *
+ * Variables:
+ * - $id: An optional CSS id to use for the layout.
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout. This layout supports the following sections:
+ *   - content.top: Content in the top row.
+ *   - content.left: Content in the left column.
+ *   - content.middle: Content in the middle column.
+ *   - content.right: Content in the right column.
+ *   - content.bottom: Content in the bottom row.
+ */
+#}
+<div class="panel-2col-stacked" {% if css_id %}{{ css_id }}{% endif %}>
+  <div class="panel-panel panel-full-width">
+    {{ content.top }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.left }}
+  </div>
+
+  <div class="panel-panel">
+    {{ content.right }}
+  </div>
+
+  <div class="panel-panel panel-full-width">
+    {{ content.bottom }}
+  </div>
+</div>
diff --git a/layouts/twocol_stacked/twocol_stacked.css b/layouts/twocol_stacked/twocol_stacked.css
new file mode 100644
index 0000000..8e66476
--- /dev/null
+++ b/layouts/twocol_stacked/twocol_stacked.css
@@ -0,0 +1,13 @@
+.panel-2col-stacked {
+  display: flex;
+  flex-wrap: wrap;
+  justify-content: space-between;
+}
+
+.panel-2col-stacked > .panel-panel {
+  flex: 0 1 50%;
+}
+
+.panel-2col-stacked > .panel-full-width {
+  flex: 0 1 100%;
+}
diff --git a/layouts/twocol_stacked/twocol_stacked.png b/layouts/twocol_stacked/twocol_stacked.png
new file mode 100644
index 0000000000000000000000000000000000000000..30ab8b67de949b6b2c2bc9140cef931119d94f5d
GIT binary patch
literal 202
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYym
z_jGX#skrs#nj#;Af&lZudw>65<S<F%oN@YEe@4(n5x;dFi*tkoPMREI|C}?eHT`CL
umr$pR(nJrHc#i)Daup|gnEf}iNHFw0VzaukXL%~nNCr<=KbLh*2~7Yd!b14~

literal 0
HcmV?d00001

diff --git a/panels.layouts.yml b/panels.layouts.yml
index 048f098..136c869 100644
--- a/panels.layouts.yml
+++ b/panels.layouts.yml
@@ -1,7 +1,7 @@
 onecol:
   label: Single column
   category: Columns: 1
-  path: plugins/layouts/onecol
+  path: layouts/onecol
   icon: onecol.png
   css: onecol.css
   template: panels-onecol
@@ -12,7 +12,7 @@ onecol:
 twocol:
   label: Two column
   category: Columns: 2
-  path: plugins/layouts/twocol
+  path: layouts/twocol
   icon: twocol.png
   css: twocol.css
   template: panels-twocol
@@ -21,3 +21,111 @@ twocol:
       label: Left side
     right:
       label: Right side
+
+twocol_bricks:
+  label: Two column bricks
+  category: Columns: 2
+  path: layouts/twocol_bricks
+  icon: twocol_bricks.png
+  css: twocol_bricks.css
+  template: panels-twocol-bricks
+  regions:
+    top:
+      label: Top
+    left_above:
+      label: Left above
+    right_above:
+      label: Right above
+    middle:
+      label: Middle
+    left_below:
+      label: Left below
+    right_below:
+      label: Right below
+    bottom:
+      label: Bottom
+
+twocol_stacked:
+  label: Two column stacked
+  category: Columns: 2
+  path: layouts/twocol_stacked
+  icon: twocol_stacked.png
+  css: twocol_stacked.css
+  template: panels-twocol-stacked
+  regions:
+    top:
+      label: Top
+    left:
+      label: Left side
+    right:
+      label: Right side
+    bottom:
+      label: Bottom
+
+threecol_25_50_25:
+  label: Three column 25/50/25
+  category: Columns: 3
+  path: layouts/threecol_25_50_25
+  icon: threecol_25_50_25.png
+  css: threecol_25_50_25.css
+  template: panels-threecol-25-50-25
+  regions:
+    left:
+      label: Left side
+    middle:
+      label: Middle column
+    right:
+      label: Right side
+
+threecol_25_50_25_stacked:
+  label: Three column 25/50/25 stacked
+  category: Columns: 3
+  path: layouts/threecol_25_50_25_stacked
+  icon: threecol_25_50_25_stacked.png
+  css: threecol_25_50_25_stacked.css
+  template: panels-threecol-25-50-25-stacked
+  regions:
+    top:
+      label: Top
+    left:
+      label: Left side
+    middle:
+      label: Middle column
+    right:
+      label: Right side
+    bottom:
+      label: Bottom
+
+threecol_33_34_33:
+  label: Three column 33/34/33
+  category: Columns: 3
+  path: layouts/threecol_33_34_33
+  icon: threecol_33_34_33.png
+  css: threecol_33_34_33.css
+  template: panels-threecol-33-34-33
+  regions:
+    left:
+      label: Left side
+    middle:
+      label: Middle column
+    right:
+      label: Right side
+
+threecol_33_34_33_stacked:
+  label: Three column 33/34/33 stacked
+  category: Columns: 3
+  path: layouts/threecol_33_34_33_stacked
+  icon: threecol_33_34_33_stacked.png
+  css: threecol_33_34_33_stacked.css
+  template: panels-threecol-33-34-33-stacked
+  regions:
+    top:
+      label: Top
+    left:
+      label: Left side
+    middle:
+      label: Middle column
+    right:
+      label: Right side
+    bottom:
+      label: Bottom
diff --git a/plugins/layouts/flexible/flexible-admin.css b/plugins/layouts/flexible/flexible-admin.css
deleted file mode 100644
index 744e46e..0000000
--- a/plugins/layouts/flexible/flexible-admin.css
+++ /dev/null
@@ -1,87 +0,0 @@
-
-#panels-dnd-main .panel-flexible-edit-layout div.panels-display .pane-add-link,
-.panel-flexible-edit-layout .panel-pane {
-  display: none;
-}
-
-.panel-flexible-edit-layout div.panels-display h2.label {
-  padding-right: 0;
-}
-
-.panel-flexible-edit-layout .panels-flexible-column-inside {
-/*  margin: 5px; */
-  border: 1px dotted green;
-}
-
-.panels-flexible-column-inside {
-/*  overflow: hidden; */
-}
-
-.panel-flexible-edit-layout .panels-flexible-column > .flexible-title {
-  color: green;
-}
-
-.panel-flexible-edit-layout .panels-flexible-row-inside {
-  margin: 5px;
-  border: 1px dotted blue;
-}
-
-.panel-flexible-edit-layout .panels-flexible-row > .flexible-title {
-  color: blue;
-}
-
-.panel-flexible-no-edit-layout .flexible-layout-only {
-  display: none;
-}
-
-.panel-flexible-edit-layout .flexible-title {
-  text-align: center;
-  width: 5em;
-  margin-left: auto;
-  margin-right: auto;
-}
-
-.panel-flexible-no-edit-layout .panels-flexible-splitter {
-  display: none;
-}
-
-.panels-flexible-splitter span {
-  display: none;
-}
-
-.panels-flexible-splitter {
-  width: 11px;
-  float: left;
-  margin-left: -7px;
-  margin-right: -6px;
-	cursor: e-resize;	/* in case col-resize isn't supported */
-	cursor: col-resize;
-  height: 30px;
-  position: relative;
-  z-index: 1;
-  background: url(grippie-vertical.png) center center no-repeat #eee;
-  border: 1px solid #ccc;
-}
-
-.flexible-splitting {
-  border: 2px dotted yellow !important;
-  margin: -2px !important;
-}
-
-.flexible-splitter-hover-box {
-  position: absolute;
-  z-index: 1000;
-  background: white;
-  color: black;
-  border: 1px solid black;
-  width: 60px;
-  height: 2em;
-  text-align: center;
-  line-height: 2em;
-}
-
-#panels-edit-display .panel-pane,
-#panels-edit-display .helperclass {
-  margin: .5em;
-}
-
diff --git a/plugins/layouts/flexible/flexible-admin.js b/plugins/layouts/flexible/flexible-admin.js
deleted file mode 100644
index 910b3c8..0000000
--- a/plugins/layouts/flexible/flexible-admin.js
+++ /dev/null
@@ -1,421 +0,0 @@
-(function ($) {
-
-Drupal.flexible = Drupal.flexible || {};
-
-Drupal.flexible.splitters = [];
-
-/**
- * Fix the height of all splitters to be the same as the items they are
- * splitting.
- */
-Drupal.flexible.fixHeight = function() {
-  for (i in Drupal.flexible.splitters) {
-    Drupal.flexible.splitters[i].fixHeight();
-  }
-}
-
-Drupal.behaviors.flexibleAdmin = {
-  attach: function(context) {
-    // Show/hide layout manager button
-    $('input#panels-flexible-toggle-layout:not(.panels-flexible-processed)', context)
-      .addClass('panels-flexible-processed')
-      .click(function() {
-        $('.panel-flexible-admin')
-          .toggleClass('panel-flexible-no-edit-layout')
-          .toggleClass('panel-flexible-edit-layout');
-
-        if ($('.panel-flexible-admin').hasClass('panel-flexible-edit-layout')) {
-          $(this).val(Drupal.t('Hide layout designer'));
-          Drupal.flexible.fixHeight();
-        }
-        else {
-          $(this).val(Drupal.t('Show layout designer'));
-        }
-        return false;
-      });
-
-    // Window splitter behavior.
-    $('div.panels-flexible-splitter:not(.panels-splitter-processed)')
-      .addClass('panels-splitter-processed')
-      .each(function() {
-        Drupal.flexible.splitters.push(new Drupal.flexible.splitter($(this)));
-      });
-
-    Drupal.flexible.fixHeight();
-  }
-};
-
-Drupal.flexible.splitter = function($splitter) {
-  var splitter = this;
-
-  this.fixHeight = function() {
-    // Set the splitter height to the shorter of the two:
-    $splitter.height(Math.max(this.left.outerHeight(), this.right.outerHeight()));
-  }
-
-  function splitterStart(event) {
-    // Bind motion events.
-    $(document)
-      .bind("mousemove", splitterMove)
-      .bind("mouseup", splitterEnd);
-
-    // Calculate some data about our split regions:
-    splitter.getSizes();
-
-    // The X coordinate where we clicked.
-    splitter.startX = event.pageX;
-
-    // The current sizes of the left/right panes.
-    splitter.currentLeft = parseFloat(splitter.left_width) * parseFloat(splitter.left_scale);
-    splitter.currentRight = parseFloat(splitter.right_width) * parseFloat(splitter.right_scale);
-
-    // The starting sizes of the left right panes.
-    splitter.startLeft = splitter.currentLeft;
-    splitter.startRight = splitter.currentRight;
-
-    if (splitter.left_width_type == splitter.right_width_type) {
-      // If they're the same type, add the two together so we know how
-      // much space we have for splitting.
-      splitter.max = splitter.startLeft + splitter.startRight;
-
-      // calculate unit size and min/max width.
-      if (splitter.left_width_type == '%') {
-        splitter.left_total = splitter.left.width() / (splitter.left_width / 100);
-        // One pixel is equivalent to what percentage of the total?
-        splitter.left_unit = (1 / splitter.left_total) * 100;
-        splitter.left_min = 5; // minimum % we'll use.
-      }
-      else {
-        splitter.left_unit = 1;
-        splitter.left_min = 25; // minimum pixels we'll use.
-      }
-      if (splitter.right_width_type == '%') {
-        splitter.right_total = splitter.right.width() / (splitter.right_width / 100);
-        // One pixel is equivalent to what percentage of the total?
-        splitter.right_unit = (1 / splitter.right_total) * 100;
-        splitter.right_min = 5; // minimum % we'll use.
-      }
-      else {
-        splitter.right_unit = 1;
-        splitter.right_min = 25; // minimum pixels we'll use.
-      }
-    }
-    else {
-      // Figure out the parent blob's width and set the max to that
-      splitter.parent = $splitter.parent().parent();
-
-      if (splitter.left_width_type != 'px') {
-        // Only the 'px' side can resize.
-        splitter.left_unit = 0;
-        splitter.right_unit = 1;
-        splitter.right_min = 25;
-        splitter.right_padding = parseInt(splitter.parent.css('padding-right'));
-        splitter.right_parent = parseInt(splitter.right.parent().css('margin-right'));
-        splitter.max = splitter.right.width() + splitter.left.parent().width() -
-          (splitter.left.siblings(':not(.panels-flexible-splitter)').length * 25) - 25;
-      }
-      else {
-        splitter.right_unit = 0;
-        splitter.left_unit = 1;
-        splitter.left_min = 25;
-        splitter.left_padding = parseInt(splitter.parent.css('padding-left'));
-        splitter.left_parent = parseInt(splitter.left.parent().css('margin-left'));
-        if (splitter.right_id) {
-          splitter.max = splitter.left.width() + splitter.right.parent().width() -
-            (splitter.right.siblings(':not(.panels-flexible-splitter)').length * 25) - 25;
-        }
-        else {
-          var subtract = 0;
-          splitter.left.siblings(':not(.panels-flexible-splitter)').each(function() { subtract += $(this).width()});
-          splitter.max = splitter.left.parent().width() - subtract;
-        }
-      }
-    }
-
-    var offset = $(splitter.splitter).offset();
-
-    // Create boxes to display widths left and right of the mouse pointer.
-    // Create left box only if left box is mobile.
-    if (splitter.left_unit) {
-      splitter.left_box = $('<div class="flexible-splitter-hover-box">&nbsp;</div>');
-      $('body').append(splitter.left_box);
-      splitter.left_box.css('top', offset.top);
-      splitter.left_box.css('left', event.pageX - 65);
-
-    if (splitter.left_width_type == '%') {
-        var left = splitter.currentLeft / splitter.left_scale;
-        splitter.left_box.html(left.toFixed(2) + splitter.left_width_type);
-      }
-      else {
-        // make sure pixel values are always whole integers.
-        splitter.currentLeft = parseInt(splitter.currentLeft);
-        splitter.left_box.html(splitter.currentLeft + splitter.left_width_type);
-      }
-    }
-
-    // Create the right box if the right side is mobile.
-    if (splitter.right_unit) {
-      splitter.right_box = $('<div class="flexible-splitter-hover-box"></div>');
-      $('body').append(splitter.right_box);
-      splitter.right_box.css('top', offset.top);
-      splitter.right_box.css('left', event.pageX + 5);
-      if (splitter.right_width_type == '%') {
-        var right = splitter.currentRight / splitter.right_scale;
-        splitter.right_box.html(right.toFixed(2) + splitter.right_width_type);
-      }
-      else {
-        // make sure pixel values are always whole integers.
-        splitter.currentRight = parseInt(splitter.currentRight);
-        splitter.right_box.html(splitter.currentRight + splitter.right_width_type);
-      }
-    }
-
-    return false;
-  };
-
-  function splitterMove(event) {
-    var diff = splitter.startX - event.pageX;
-    var moved = 0;
-
-    if (event.keyCode == 37) diff = 10;
-    if (event.keyCode == 39) diff = -10;
-
-    // Bah, javascript has no logical xor operator
-    if ((splitter.left_unit && !splitter.right_unit) ||
-      (!splitter.left_unit && splitter.right_unit)) {
-      // This happens when one side is fixed and the other side is fluid. The
-      // fixed side actually adjusts while the fluid side does not. However,
-      // in order to move the fluid side we have to adjust the padding
-      // on our parent object.
-      if (splitter.left_unit) {
-        // Only the left box is allowed to move.
-        splitter.currentLeft = splitter.startLeft - diff;
-
-        if (splitter.currentLeft < splitter.left_min) {
-          splitter.currentLeft = splitter.left_min;
-        }
-        if (splitter.currentLeft > splitter.max) {
-          splitter.currentLeft = splitter.max;
-        }
-
-        // If the shift key is pressed, go with 1% or 10px boundaries.
-        if (event.shiftKey) {
-          splitter.currentLeft = parseInt(splitter.currentLeft / 10) * 10;
-        }
-        moved = (splitter.startLeft - splitter.currentLeft);
-      }
-      else {
-        // Only the left box is allowed to move.
-        splitter.currentRight = splitter.startRight + diff;
-
-        if (splitter.currentRight < splitter.right_min) {
-          splitter.currentRight = splitter.right_min;
-        }
-        if (splitter.currentRight > splitter.max) {
-          splitter.currentRight = splitter.max;
-        }
-
-        // If the shift key is pressed, go with 1% or 10px boundaries.
-        if (event.shiftKey) {
-          splitter.currentRight = parseInt(splitter.currentRight / 10) * 10;
-        }
-        moved = (splitter.currentRight - splitter.startRight);
-      }
-    }
-    else {
-      // If they are both the same type, do this..
-      // Adjust the left side by the amount we moved.
-      var left = -1 * diff * splitter.left_unit;
-
-      splitter.currentLeft = splitter.startLeft + left;
-
-      if (splitter.currentLeft < splitter.left_min) {
-        splitter.currentLeft = splitter.left_min;
-      }
-      if (splitter.currentLeft > splitter.max - splitter.right_min) {
-        splitter.currentLeft = splitter.max - splitter.right_min;
-      }
-
-      // If the shift key is pressed, go with 1% or 10px boundaries.
-      if (event.shiftKey) {
-        if (splitter.left_width_type == '%') {
-          splitter.currentLeft = parseInt(splitter.currentLeft / splitter.left_scale) * splitter.left_scale;
-        }
-        else {
-          splitter.currentLeft = parseInt(splitter.currentLeft / 10) * 10;
-        }
-      }
-
-      // Now automatically make the right side to be the other half.
-      splitter.currentRight = splitter.max - splitter.currentLeft;
-
-      // recalculate how far we've moved into pixels so we can adjust our visible
-      // boxes.
-      moved = (splitter.startLeft - splitter.currentLeft) / splitter.left_unit;
-    }
-
-    if (splitter.left_unit) {
-      splitter.left_box.css('left', splitter.startX - 65 - moved);
-      if (splitter.left_width_type == '%') {
-        var left = splitter.currentLeft / splitter.left_scale;
-        splitter.left_box.html(left.toFixed(2) + splitter.left_width_type);
-      }
-      else {
-        splitter.left_box.html(parseInt(splitter.currentLeft) + splitter.left_width_type);
-      }
-
-      // Finally actually move the left side
-      splitter.left.css('width', splitter.currentLeft + splitter.left_width_type);
-    }
-    else {
-      // if not moving the left side, adjust the parent padding instead.
-      splitter.parent.css('padding-right', (splitter.right_padding + moved) + 'px');
-      splitter.right.parent().css('margin-right', (splitter.right_parent - moved) + 'px');
-    }
-
-    if (splitter.right_unit) {
-      splitter.right_box.css('left', splitter.startX + 5 - moved);
-      if (splitter.right_width_type == '%') {
-        var right = splitter.currentRight / splitter.right_scale;
-        splitter.right_box.html(right.toFixed(2) + splitter.right_width_type);
-      }
-      else {
-        splitter.right_box.html(parseInt(splitter.currentRight) + splitter.right_width_type);
-      }
-
-      // Finally actually move the right side
-      splitter.right.css('width', splitter.currentRight + splitter.right_width_type);
-    }
-    else {
-      // if not moving the right side, adjust the parent padding instead.
-      splitter.parent.css('padding-left', (splitter.left_padding - moved) + 'px');
-      splitter.left.parent().css('margin-left', (splitter.left_parent + moved) + 'px');
-    }
-    return false;
-  };
-
-  function splitterKeyPress(event) {
-    splitterStart(event);
-    splitterMove(event);
-    splitterEnd(event);
-  };
-
-  function splitterEnd(event) {
-    if (splitter.left_unit) {
-      splitter.left_box.remove();
-    }
-
-    if (splitter.right_unit) {
-      splitter.right_box.remove();
-    }
-
-
-    splitter.left.css("-webkit-user-select", "text");	// let Safari select text again
-    splitter.right.css("-webkit-user-select", "text");	// let Safari select text again
-
-    if (splitter.left_unit) {
-      splitter.left_width = splitter.currentLeft / parseFloat(splitter.left_scale);
-    }
-
-    if (splitter.right_unit) {
-      splitter.right_width = splitter.currentRight / parseFloat(splitter.right_scale);
-    }
-
-    splitter.putSizes();
-    Drupal.flexible.fixHeight();
-
-    $(document)
-      .unbind("mousemove", splitterMove)
-      .unbind("mouseup", splitterEnd);
-
-    // Store the data on the server.
-    Drupal.ajax['flexible-splitter-ajax'].options.data = {
-      'left': splitter.left_id,
-      'left_width': splitter.left_width,
-      'right': splitter.right_id,
-      'right_width': splitter.right_width
-    };
-
-    $('.panel-flexible-edit-layout').trigger('UpdateFlexibleSplitter');
-  };
-
-  this.getSizes = function() {
-    splitter.left_width = $splitter.children('.panels-flexible-splitter-left-width').html();
-    splitter.left_scale = $splitter.children('.panels-flexible-splitter-left-scale').html();
-    splitter.left_width_type = $splitter.children('.panels-flexible-splitter-left-width-type').html();
-    splitter.right_width = $splitter.children('.panels-flexible-splitter-right-width').html();
-    splitter.right_scale = $splitter.children('.panels-flexible-splitter-right-scale').html();
-    splitter.right_width_type = $splitter.children('.panels-flexible-splitter-right-width-type').html();
-  };
-
-  this.putSizes = function() {
-    $(splitter.left_class + '-width').html(splitter.left_width);
-    if (splitter.left_class != splitter.right_class) {
-      $(splitter.right_class + '-width').html(splitter.right_width);
-    }
-  }
-
-  splitter.splitter = $splitter;
-  splitter.left_class = $splitter.children('.panels-flexible-splitter-left').html();
-  splitter.left_id = $splitter.children('.panels-flexible-splitter-left-id').html();
-  splitter.left = $(splitter.left_class);
-  splitter.right_class = $splitter.children('.panels-flexible-splitter-right').html();
-  splitter.right_id = $splitter.children('.panels-flexible-splitter-right-id').html();
-  splitter.right = $(splitter.right_class);
-
-  $splitter
-    .bind("mousedown", splitterStart)
-    .bind("keydown", splitterKeyPress);
-
-};
-
-$(function() {
-  /**
-   * Provide an AJAX response command to allow the server to request
-   * height fixing.
-   */
-  Drupal.ajax.prototype.commands.flexible_fix_height = function(ajax, command, status) {
-    Drupal.flexible.fixHeight();
-  };
-
-  /**
-   * Provide an AJAX response command to allow the server to change width on existing splitters.
-   */
-  Drupal.ajax.prototype.commands.flexible_set_width = function(ajax, command, status) {
-    $(command.selector).html(command.width);
-  };
-
-  /**
-   * Provide an AJAX response command to fix the first/last bits of a
-   * group.
-   */
-  Drupal.ajax.prototype.commands.flexible_fix_firstlast = function(ajax, data, status) {
-    $(data.selector + ' > div > .' + data.base)
-      .removeClass(data.base + '-first')
-      .removeClass(data.base + '-last');
-
-    $(data.selector + ' > div > .' + data.base + ':first')
-      .addClass(data.base + '-first');
-    $(data.selector + ' > div > .' + data.base + ':last')
-      .addClass(data.base + '-last');
-  };
-
-  // Create a generic ajax callback for use with the splitters which
-  // background AJAX to store their data.
-  var element_settings = {
-    url: Drupal.settings.flexible.resize,
-    event: 'UpdateFlexibleSplitter',
-    keypress: false,
-    // No throbber at all.
-    progress: { 'type': 'none' }
-  };
-
-  Drupal.ajax['flexible-splitter-ajax'] = new Drupal.ajax('flexible-splitter-ajax', $('.panel-flexible-admin').get(0), element_settings);
-
-  // Prevent ajax goo from doing odd things to our layout.
-  Drupal.ajax['flexible-splitter-ajax'].beforeSend = function() { };
-  Drupal.ajax['flexible-splitter-ajax'].beforeSerialize = function() { };
-
-});
-
-})(jQuery);
diff --git a/plugins/layouts/flexible/flexible.css b/plugins/layouts/flexible/flexible.css
deleted file mode 100644
index 0d1fbe6..0000000
--- a/plugins/layouts/flexible/flexible.css
+++ /dev/null
@@ -1,4 +0,0 @@
-
-.panel-flexible .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/flexible/flexible.inc b/plugins/layouts/flexible/flexible.inc
deleted file mode 100644
index f49886b..0000000
--- a/plugins/layouts/flexible/flexible.inc
+++ /dev/null
@@ -1,1802 +0,0 @@
-<?php
-
-/**
- * Implementation of hook_panels_layouts()
- */
-// Plugin definition
-$plugin = array(
-  'title' => t('Flexible'),
-  'category' => t('Builders'),
-  'icon' => 'flexible.png',
-  'theme' => 'panels_flexible',
-  'admin theme' => 'panels_flexible_admin',
-  'css' => 'flexible.css',
-  'admin css' => 'flexible-admin.css',
-  'settings form' => 'panels_flexible_settings_form',
-  'settings submit' => 'panels_flexible_settings_submit',
-  'settings validate' => 'panels_flexible_settings_validate',
-  'regions function' => 'panels_flexible_panels',
-  'hook menu' => 'panels_flexible_menu',
-
-  // Reuisable layout Builder specific directives
-  'builder' => TRUE,
-  'builder tab title' => 'Add flexible layout', // menu so translated elsewhere
-
-  'get child' => 'panels_flexible_get_sublayout',
-  'get children' => 'panels_flexible_get_sublayouts',
-
-  // Define ajax callbacks
-  'ajax' => array(
-    'settings' => 'panels_ajax_flexible_edit_settings',
-    'add' => 'panels_ajax_flexible_edit_add',
-    'remove' => 'panels_ajax_flexible_edit_remove',
-    'resize' => 'panels_ajax_flexible_edit_resize',
-    'reuse' => 'panels_ajax_flexible_edit_reuse',
-  ),
-);
-
-/**
- * Merge the main flexible plugin with a layout to create a sub plugin.
- *
- * This is used for both panels_flexible_get_sublayout and
- * panels_flexible_get_sublayouts.
- */
-function panels_flexible_merge_plugin($plugin, $layout) {
-  $plugin['name'] = 'flexible:' . $layout->name;
-  $plugin['category'] = !empty($layout->category) ? check_plain($layout->category) : t('Miscellaneous');
-  $plugin['title'] = check_plain($layout->admin_title);
-  $plugin['description'] = check_plain($layout->admin_description);
-  $plugin['layout'] = $layout;
-  $plugin['builder'] = FALSE;
-  $plugin['builder tab title'] = NULL;
-  return $plugin;
-}
-
-/**
- * Callback to provide a single stored flexible layout.
- */
-function panels_flexible_get_sublayout($plugin, $layout_name, $sublayout_name) {
-  // Do not worry about caching; Panels is handling that for us.
-  ctools_include('export');
-  $item = ctools_export_crud_load('panels_layout', $sublayout_name);
-  if ($item) {
-    return panels_flexible_merge_plugin($plugin, $item);
-  }
-}
-
-/**
- * Callback to provide all stored flexible layouts.
- */
-function panels_flexible_get_sublayouts($plugin, $layout_name) {
-  $layouts[$layout_name] = $plugin;
-  ctools_include('export');
-  $items = ctools_export_load_object('panels_layout', 'conditions', array('plugin' => 'flexible'));
-  foreach ($items as $name => $item) {
-    $layouts['flexible:' . $name] = panels_flexible_merge_plugin($plugin, $item);
-  }
-
-  return $layouts;
-}
-
-/**
- * Convert settings from old style to new, or provide defaults for
- * empty settings.
- * @param <type> $settings
- */
-function panels_flexible_convert_settings(&$settings, &$layout) {
-  // This indicates that this is a layout that they used the checkbox
-  // on. The layout is still 'flexible' but it's actually pointing
-  // to another stored one and we have to load it.
-  if (!empty($settings['layout'])) {
-    $layout = panels_get_layout('flexible:' . $settings['layout']);
-  }
-
-  if (!empty($layout['layout'])) {
-    $settings = $layout['layout']->settings;
-    if ($settings) {
-      return $settings;
-    }
-  }
-
-  if (empty($settings)) {
-    // set up a default
-    $settings = array(
-      'items' => array(
-        // The 'canvas' is a special row that does not get rendered
-        // normally, but is used to contain the columns.
-        'canvas' => array(
-          'type' => 'row',
-          'contains' => 'column',
-          'children' => array('main'),
-          'parent' => NULL,
-        ),
-        'main' => array(
-          'type' => 'column',
-          'width' => 100,
-          'width_type' => '%',
-          'children' => array('main-row'),
-          'parent' => 'canvas',
-        ),
-        'main-row' => array(
-          'type' => 'row',
-          'contains' => 'region',
-          'children' => array('center'),
-          'parent' => 'main',
-        ),
-        'center' => array(
-          'type' => 'region',
-          'title' => t('Center'),
-          'width' => 100,
-          'width_type' => '%',
-          'parent' => 'main-row',
-        ),
-      ),
-    );
-  }
-  else if (!isset($settings['items'])) {
-    // Convert an old style flexible to a new style flexible.
-    $old = $settings;
-    $settings = array();
-    $settings['items']['canvas'] = array(
-      'type' => 'row',
-      'contains' => 'column',
-      'children' => array(),
-      'parent' => NULL,
-    );
-    // add the left sidebar column, row and region if it exists.
-    if (!empty($old['sidebars']['left'])) {
-      $settings['items']['canvas']['children'][] = 'sidebar-left';
-      $settings['items']['sidebar-left'] = array(
-        'type' => 'column',
-        'width' => $old['sidebars']['left_width'],
-        'width_type' => $old['sidebars']['width_type'],
-        'children' => array('sidebar-left-row'),
-        'parent' => 'canvas',
-      );
-      $settings['items']['sidebar-left-row'] = array(
-        'type' => 'row',
-        'contains' => 'region',
-        'children' => array('sidebar_left'),
-        'parent' => 'sidebar-left',
-      );
-      $settings['items']['sidebar_left'] = array(
-        'type' => 'region',
-        'title' => t('Left sidebar'),
-        'width' => 100,
-        'width_type' => '%',
-        'parent' => 'sidebar-left-row',
-      );
-    }
-
-    $settings['items']['canvas']['children'][] = 'main';
-
-    if (!empty($old['sidebars']['right'])) {
-      $settings['items']['canvas']['children'][] = 'sidebar-right';
-      $settings['items']['sidebar-right'] = array(
-        'type' => 'column',
-        'width' => $old['sidebars']['right_width'],
-        'width_type' => $old['sidebars']['width_type'],
-        'children' => array('sidebar-right-row'),
-        'parent' => 'canvas',
-      );
-      $settings['items']['sidebar-right-row'] = array(
-        'type' => 'row',
-        'contains' => 'region',
-        'children' => array('sidebar_right'),
-        'parent' => 'sidebar-right',
-      );
-      $settings['items']['sidebar_right'] = array(
-        'type' => 'region',
-        'title' => t('Right sidebar'),
-        'width' => 100,
-        'width_type' => '%',
-        'parent' => 'sidebar-right-row',
-      );
-    }
-
-    // Add the main column.
-    $settings['items']['main'] = array(
-      'type' => 'column',
-      'width' => 100,
-      'width_type' => '%',
-      'children' => array(),
-      'parent' => 'canvas',
-    );
-
-    // Add rows and regions.
-    for ($row = 1; $row <= intval($old['rows']); $row++) {
-      // Create entry for the row
-      $settings['items']["row_$row"] = array(
-        'type' => 'row',
-        'contains' => 'region',
-        'children' => array(),
-        'parent' => 'main',
-      );
-      // Add the row to the parent's children
-      $settings['items']['main']['children'][] = "row_$row";
-
-      for ($col = 1; $col <= intval($old["row_$row"]['columns']); $col++) {
-        // Create entry for the region
-        $settings['items']["row_${row}_$col"] = array(
-          'type' => 'region',
-          'width' => $old["row_$row"]["width_$col"],
-          'width_type' => '%',
-          'parent' => "row_$row",
-        );
-        // Add entry for the region to the row's children
-        $settings['items']["row_$row"]['children'][] = "row_${row}_$col";
-
-        // Apply the proper title to the region
-        if (!empty($old["row_$row"]['names'][$col - 1])) {
-          $settings['items']["row_${row}_$col"]['title'] = $old["row_$row"]['names'][$col - 1];
-        }
-        else {
-          $settings['items']["row_${row}_$col"]['title'] = t("Row @row, Column @col", array('@row' => $row, '@col' => $col));
-        }
-      }
-    }
-  }
-  else if (isset($settings['canvas'])) {
-    // Convert the old 'canvas' to the new canvas row.
-    $settings['items']['canvas'] = array(
-      'type' => 'row',
-      'contains' => 'column',
-      'children' => $settings['canvas'],
-      'parent' => NULL,
-    );
-    unset($settings['canvas']);
-  }
-}
-
-/**
- * Define the actual list of columns and rows for this flexible panel.
- */
-function panels_flexible_panels($display, $settings, $layout) {
-  $items = array();
-  panels_flexible_convert_settings($settings, $layout);
-  foreach ($settings['items'] as $id => $item) {
-    // Remove garbage values.
-    if (!isset($item['type'])) {
-      unset($items[$id]);
-    }
-    else if ($item['type'] == 'region') {
-      $items[$id] = $item['title'];
-    }
-  }
-
-  return $items;
-}
-
-/**
- * Create a renderer object.
- *
- * The renderer object contains data that is passed around from function
- * to function allowing us to render our CSS and HTML easily.
- *
- * @todo Convert the functions to methods and make this properly OO.
- */
-function panels_flexible_create_renderer($admin, $css_id, $content, $settings, &$display, $layout, $handler) {
-  $renderer = new stdClass;
-  $renderer->settings = $settings;
-  $renderer->content = $content;
-  $renderer->css_id = $css_id;
-  $renderer->did = &$display->did;
-  if ($admin) {
-    // always scale in admin mode.
-    $renderer->scale_base = 99.0;
-  }
-  else {
-    $renderer->scale_base = !empty($settings['items']['canvas']['no_scale']) ? 100.0 : 99.0;
-  }
-  $renderer->id_str = $css_id ? 'id="' . $css_id . '"' : '';
-  $renderer->admin = $admin;
-  $renderer->handler = $handler;
-
-  // Set up basic classes for all of our components.
-  $renderer->name                 = !empty($layout['layout']) ? $layout['layout']->name : $display->did;
-  $renderer->base_class           = $renderer->name;
-  $renderer->item_class['column'] = 'panels-flexible-column';
-  $renderer->item_class['row']    = 'panels-flexible-row';
-  $renderer->item_class['region'] = 'panels-flexible-region';
-  $renderer->base['canvas']       = 'panels-flexible-' . $renderer->base_class;
-
-  // Override these if selected from the UI and not in admin mode.
-  if (!$admin) {
-    if (!empty($settings['items']['canvas']['class'])) {
-      $renderer->base_class = $settings['items']['canvas']['class'];
-      $renderer->base['canvas'] = $renderer->base_class;
-    }
-    if (!empty($settings['items']['canvas']['column_class'])) {
-      $renderer->item_class['column'] = $settings['items']['canvas']['column_class'];
-    }
-    if (!empty($settings['items']['canvas']['row_class'])) {
-      $renderer->item_class['row'] = $settings['items']['canvas']['row_class'];
-    }
-    if (!empty($settings['items']['canvas']['region_class'])) {
-      $renderer->item_class['region'] = $settings['items']['canvas']['region_class'];
-    }
-  }
-
-  // Get the separation values out of the canvas settings.
-  $renderer->column_separation = !empty($settings['items']['canvas']['column_separation']) ? $settings['items']['canvas']['column_separation'] : '0.5em';
-
-  $renderer->region_separation = !empty($settings['items']['canvas']['region_separation']) ? $settings['items']['canvas']['region_separation'] : '0.5em';
-
-  $renderer->row_separation = !empty($settings['items']['canvas']['row_separation']) ? $settings['items']['canvas']['row_separation'] : '0.5em';
-
-  // Make some appended classes so it's easier to reference them.
-
-  $renderer->base['column'] = $renderer->item_class['column'] . '-' . $renderer->base_class;
-  $renderer->base['row']    = $renderer->item_class['row'] . '-' . $renderer->base_class;
-  $renderer->base['region'] = $renderer->item_class['region'] . '-' . $renderer->base_class;
-
-  if ($renderer->name != 'new') {
-    // Use v2 to guarantee all CSS gets regenerated to account for changes in
-    // how some divs will be rendered.
-    $renderer->css_cache_name = 'flexiblev2:' . $renderer->name;
-    if ($admin) {
-      ctools_include('css');
-      ctools_css_clear($renderer->css_cache_name);
-    }
-  }
-  return $renderer;
-}
-
-/**
- * Draw the flexible layout.
- */
-function theme_panels_flexible($vars) {
-  $css_id = $vars['css_id'];
-  $content = $vars['content'];
-  $settings = $vars['settings'];
-  $display = $vars['display'];
-  $layout = $vars['layout'];
-  $handler = $vars['renderer'];
-
-  panels_flexible_convert_settings($settings, $layout);
-
-  $renderer = panels_flexible_create_renderer(FALSE, $css_id, $content, $settings, $display, $layout, $handler);
-
-  // CSS must be generated because it reports back left/middle/right
-  // positions.
-  $css = panels_flexible_render_css($renderer);
-
-  if (!empty($renderer->css_cache_name) && empty($display->editing_layout)) {
-    ctools_include('css');
-    // Generate an id based upon rows + columns:
-    $filename = ctools_css_retrieve($renderer->css_cache_name);
-    if (!$filename) {
-      $filename = ctools_css_store($renderer->css_cache_name, $css, FALSE);
-    }
-
-    // Give the CSS to the renderer to put where it wants.
-    if ($handler) {
-      $handler->add_css($filename, 'module', 'all', FALSE);
-    }
-    else {
-      drupal_add_css($filename);
-    }
-  }
-  else {
-    // If the id is 'new' we can't reliably cache the CSS in the filesystem
-    // because the display does not truly exist, so we'll stick it in the
-    // head tag. We also do this if we've been told we're in the layout
-    // editor so that it always gets fresh CSS.
-    drupal_add_css($css, array('type' => 'inline', 'preprocess' => FALSE));
-  }
-
-  // Also store the CSS on the display in case the live preview or something
-  // needs it
-  $display->add_css = $css;
-
-  $output = "<div class=\"panel-flexible " . $renderer->base['canvas'] . " clearfix\" $renderer->id_str>\n";
-  $output .= "<div class=\"panel-flexible-inside " . $renderer->base['canvas'] . "-inside\">\n";
-
-  $output .= panels_flexible_render_items($renderer, $settings['items']['canvas']['children'], $renderer->base['canvas']);
-
-  // Wrap the whole thing up nice and snug
-  $output .= "</div>\n</div>\n";
-
-  return $output;
-}
-
-/**
- * Draw the flexible layout.
- */
-function theme_panels_flexible_admin($vars) {
-  $css_id = $vars['css_id'];
-  $content = $vars['content'];
-  $settings = $vars['settings'];
-  $display = $vars['display'];
-  $layout = $vars['layout'];
-  $handler = $vars['renderer'];
-
-  // We never draw stored flexible layouts in admin mode; they must be edited
-  // from the stored layout UI at that point.
-  if (!empty($layout['layout'])) {
-    return theme_panels_flexible(array('css_id' => $css_id, 'content' => $content, 'settings' => $settings, 'display' => $display, 'layout' => $layout, 'renderer' => $handler));
-  }
-
-  panels_flexible_convert_settings($settings, $layout);
-  $renderer = panels_flexible_create_renderer(TRUE, $css_id, $content, $settings, $display, $layout, $handler);
-
-  $css = panels_flexible_render_css($renderer);
-
-  // For the administrative view, add CSS directly to head.
-  drupal_add_css($css, array('type' => 'inline', 'preprocess' => FALSE));
-
-  if (empty($display->editing_layout)) {
-    $output = '<input type="submit" id="panels-flexible-toggle-layout" class="form-submit" value ="' .
-      t('Show layout designer') . '">';
-    if (user_access('administer panels layouts')) {
-      $output .= '<input type="hidden" class="panels-flexible-reuse-layout-url" value="' . url($handler->get_url('layout', 'reuse'), array('absolute' => TRUE)) . '">';
-      $output .= '<input type="submit" id="panels-flexible-reuse-layout" class="form-submit ctools-use-modal" value ="' .
-        t('Reuse layout') . '">';
-    }
-    $output .= "<div class=\"panel-flexible " . $renderer->base['canvas'] . " clearfix panel-flexible-admin panel-flexible-no-edit-layout\" $renderer->id_str>\n";
-  }
-  else {
-    $output = "<div class=\"panel-flexible " . $renderer->base['canvas'] . " clearfix panel-flexible-admin panel-flexible-edit-layout\" $renderer->id_str>\n";
-  }
-  $output .= "<div class=\"panel-flexible-inside " . $renderer->base['canvas'] . "-inside \">\n";
-
-  $content = panels_flexible_render_items($renderer, $settings['items']['canvas']['children'], $renderer->base['row'] . '-canvas');
-  $output .= panels_flexible_render_item($renderer, $settings['items']['canvas'], $content, 'canvas', 0, 0, TRUE);
-
-  // Wrap the whole thing up nice and snug
-  $output .= "</div>\n</div>\n";
-
-  drupal_add_js($layout['path'] . '/flexible-admin.js');
-  drupal_add_js(array('flexible' => array('resize' => url($handler->get_url('layout', 'resize'), array('absolute' => TRUE)))), 'setting');
-  return $output;
-}
-
-/**
- * Render a piece of a flexible layout.
- */
-function panels_flexible_render_items($renderer, $list, $owner_id) {
-  $output = '';
-  $groups = array('left' => '', 'middle' => '', 'right' => '');
-  $max = count($list) - 1;
-  $prev = NULL;
-
-  foreach ($list as $position => $id) {
-    $item = $renderer->settings['items'][$id];
-    $location = isset($renderer->positions[$id]) ? $renderer->positions[$id] : 'middle';
-
-    if ($renderer->admin && $item['type'] != 'row' && $prev ) {
-      $groups[$location] .= panels_flexible_render_splitter($renderer, $prev, $id);
-    }
-
-    switch ($item['type']) {
-      case 'column':
-        $content = panels_flexible_render_items($renderer, $item['children'], $renderer->base['column'] . '-' . $id);
-        $groups[$location] .= panels_flexible_render_item($renderer, $item, $content, $id, $position, $max);
-        break;
-      case 'row':
-        $content = panels_flexible_render_items($renderer, $item['children'], $renderer->base['row'] . '-' . $id);
-        $groups[$location] .= panels_flexible_render_item($renderer, $item, $content, $id, $position, $max, TRUE);
-        break;
-      case 'region':
-        $content = isset($renderer->content[$id]) ? $renderer->content[$id] : "&nbsp;";
-        $groups[$location] .= panels_flexible_render_item($renderer, $item, $content, $id, $position, $max);
-        break;
-    }
-
-    // If all items are fixed then we have a special splitter on the right to
-    // control the overall width.
-    if (!empty($renderer->admin) && $max == $position && $location == 'left') {
-      $groups[$location] .= panels_flexible_render_splitter($renderer, $id, NULL);
-    }
-    $prev = $id;
-  }
-
-  $group_count = count(array_filter($groups));
-
-  // Render each group. We only render the group div if we're in admin mode
-  // or if there are multiple groups.
-  foreach ($groups as $position => $content) {
-    if (!empty($content) || $renderer->admin) {
-      if ($group_count > 1 || $renderer->admin) {
-        $output .= '<div class="' . $owner_id . '-' . $position . '">' . $content . '</div>';
-      }
-      else {
-        $output .= $content;
-      }
-    }
-  }
-
-  return $output;
-}
-
-/**
- * Render a column in the flexible layout.
- */
-function panels_flexible_render_item($renderer, $item, $content, $id, $position, $max, $clear = FALSE) {
-
-  // If we are rendering a row and there is just one row, we don't need to
-  // render the row unless there is fixed_width content inside it.
-  if (empty($renderer->admin) && $item['type'] == 'row' && $max == 0) {
-    $fixed = FALSE;
-    foreach ($item['children'] as $id) {
-      if ($renderer->settings['items'][$id]['width_type'] != '%') {
-        $fixed = TRUE;
-        break;
-      }
-    }
-
-    if (!$fixed) {
-      return $content;
-    }
-  }
-
-  // If we are rendering a column and there is just one column, we don't
-  // need to render the column unless it has a fixed_width.
-  if (empty($renderer->admin) && $item['type'] == 'column' && $max == 0 && $item['width_type'] == '%') {
-    return $content;
-  }
-
-  $base = $renderer->item_class[$item['type']];
-  $output = '<div class="' . $base . ' ' . $renderer->base[$item['type']] . '-' . $id;
-  if ($position == 0) {
-    $output .= ' ' . $base . '-first';
-  }
-  if ($position == $max) {
-    $output .= ' ' . $base . '-last';
-  }
-  if ($clear) {
-    $output .= ' clearfix';
-  }
-
-  if (isset($item['class'])) {
-    $output .= ' ' . check_plain($item['class']);
-  }
-
-  $output .= '">' . "\n";
-
-  if (!empty($renderer->admin)) {
-    $output .= panels_flexible_render_item_links($renderer, $id, $item);
-  }
-
-  $output .= '  <div class="inside ' . $base . '-inside ' . $base . '-' . $renderer->base_class . '-' . $id . '-inside';
-  if ($position == 0) {
-    $output .= ' ' . $base . '-inside-first';
-  }
-  if ($position == $max) {
-    $output .= ' ' . $base . '-inside-last';
-  }
-  if ($clear) {
-    $output .= ' clearfix';
-  }
-
-  $output .= "\">\n";
-  $output .= $content;
-  $output .= '  </div>' . "\n";
-  $output .= '</div>' . "\n";
-
-  return $output;
-}
-/**
- * Render a splitter div to place between the $left and $right items.
- *
- * If the right ID is NULL that means there isn't actually a box to the
- * right, but we need a splitter anyway. We'll mostly use info about the
- * left, but pretend it's 'fluid' so that the javascript won't actually
- * modify the right item.
- */
-function panels_flexible_render_splitter($renderer, $left_id, $right_id) {
-  $left = $renderer->settings['items'][$left_id];
-
-  $left_class = $renderer->base[$left['type']] . '-' . $left_id;
-  if ($right_id) {
-    $right = $renderer->settings['items'][$right_id];
-    $right_class = $renderer->base[$left['type']] . '-' . $right_id;
-  }
-  else {
-    $right = $left;
-    $right_class = $left_class;
-  }
-
-  $output = '<div tabindex="0"
-    class="panels-flexible-splitter flexible-splitter-for-' . $left_class . '">';
-
-  // Name the left object
-  $output .= '<span class="panels-flexible-splitter-left">';
-  $output .= '.' . $left_class;
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-left-id">';
-  $output .= $left_id;
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-left-width ' . $left_class . '-width">';
-  $output .= $left['width'];
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-left-scale">';
-  $output .= isset($renderer->scale[$left_id]) ? $renderer->scale[$left_id] : 1;
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-left-width-type">';
-  $output .= $left['width_type'];
-  $output .= '</span>';
-
-  // Name the right object
-  $output .= '<span class="panels-flexible-splitter-right">';
-  $output .= '.' . $right_class;
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-right-id">';
-  $output .= $right_id;
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-right-width ' . $right_class . '-width">';
-  $output .= $right['width'];
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-right-scale">';
-  $output .= isset($renderer->scale[$right_id]) ? $renderer->scale[$right_id] : 1;
-  $output .= '</span>';
-
-  $output .= '<span class="panels-flexible-splitter-right-width-type">';
-  // If there is no right, make it fluid.
-  $output .= $right_id ? $right['width_type'] : '%';
-  $output .= '</span>';
-
-  $output .= '</div>';
-  return $output;
-}
-
-/**
- * Render the dropdown links for an item.
- */
-function panels_flexible_render_item_links($renderer, $id, $item) {
-  $links = array();
-  $remove = '';
-  $add = '';
-  if ($item['type'] == 'column') {
-    $title = t('Column');
-    $settings = t('Column settings');
-    if (empty($item['children'])) {
-      $remove = t('Remove column');
-      $add = t('Add row');
-    }
-    else {
-      $add = t('Add row to top');
-      $add2 = t('Add row to bottom');
-    }
-  }
-  else if ($item['type'] == 'row') {
-    if ($id == 'canvas') {
-      $title = t('Canvas');
-      $settings = t('Canvas settings');
-    }
-    else {
-      $title = t('Row');
-      $settings = t('Row settings');
-    }
-    if (empty($item['children'])) {
-      if ($id != 'canvas') {
-        $remove = t('Remove row');
-      }
-      $add = $item['contains'] == 'region' ? t('Add region') : t('Add column');
-    }
-    else {
-      $add = $item['contains'] == 'region' ? t('Add region to left') : t('Add column to left');
-      $add2 = $item['contains'] == 'region' ? t('Add region to right') : t('Add column to right');
-    }
-  }
-  else if ($item['type'] == 'region') {
-    $title = t('Region');
-    $settings = t('Region settings');
-    $remove = t('Remove region');
-  }
-
-  if (!empty($settings)) {
-    $links[] = array(
-      'title' => $settings,
-      'href' => $renderer->handler->get_url('layout', 'settings', $id),
-      'attributes' => array('class' => array('ctools-use-modal')),
-    );
-  }
-  if ($add) {
-    $links[] = array(
-      'title' => $add,
-      'href' => $renderer->handler->get_url('layout', 'add', $id),
-      'attributes' => array('class' => array('ctools-use-modal')),
-    );
-  }
-  if (isset($add2)) {
-    $links[] = array(
-      'title' => $add2,
-      'href' => $renderer->handler->get_url('layout', 'add', $id, 'right'),
-      'attributes' => array('class' => array('ctools-use-modal')),
-    );
-  }
-  if ($remove) {
-    $links[] = array(
-      'title' => $remove,
-      'href' => $renderer->handler->get_url('layout', 'remove', $id),
-      'attributes' => array('class' => array('use-ajax')),
-    );
-  }
-
-  return theme('ctools_dropdown', array('title' => $title, 'links' => $links, 'class' => 'flexible-layout-only flexible-links flexible-title flexible-links-' . $id));
-}
-/**
- * Provide CSS for a flexible layout.
- */
-function panels_flexible_render_css($renderer) {
-  if ($renderer->admin) {
-    $parent_class = '.' . $renderer->base['row'] . '-canvas';
-  }
-  else {
-    $parent_class = '.' . $renderer->base['canvas'];
-  }
-  return panels_flexible_render_css_group($renderer, $renderer->settings['items']['canvas']['children'], $parent_class, 'column', 'canvas');
-}
-
-/**
- * Render the CSS for a group of items to be displayed together.
- *
- * Columns and regions, when displayed as a group, need to cooperate in
- * order to share margins and make sure that percent widths add up
- * to the right total.
- */
-function panels_flexible_render_css_group($renderer, $list, $owner_id, $type, $id) {
-  $css = array();
-
-  // Start off with some generic CSS to properly pad regions
-  $css[$owner_id . ' .' . $renderer->item_class['region']] = array(
-    'padding' => '0',
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['region'] . '-inside'] = array(
-    'padding-right' => $renderer->region_separation,
-    'padding-left' => $renderer->region_separation,
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['region'] . '-inside-first'] = array(
-    'padding-left' => '0',
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['region'] . '-inside-last'] = array(
-    'padding-right' => '0',
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['column']] = array(
-    'padding' => '0',
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['column'] . '-inside'] = array(
-    'padding-right' => $renderer->column_separation,
-    'padding-left' => $renderer->column_separation,
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['column'] . '-inside-first'] = array(
-    'padding-left' => '0',
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['column'] . '-inside-last'] = array(
-    'padding-right' => '0',
-  );
-
-  // And properly pad rows too
-  $css[$owner_id . ' .' . $renderer->item_class['row']] = array(
-    'padding' => '0 0 ' . $renderer->row_separation . ' 0',
-    'margin' => '0',
-  );
-
-  $css[$owner_id . ' .' . $renderer->item_class['row'] . '-last'] = array(
-    'padding-bottom' => '0',
-  );
-
-  panels_flexible_get_css_group($css, $renderer, $list, $owner_id, $type, $id);
-
-  ctools_include('css');
-  return ctools_css_assemble($css);
-}
-
-/**
- * Construct an array with all of the CSS properties for a group.
- *
- * This will parse down into children and produce all of the CSS needed if you
- * start from the top.
- */
-function panels_flexible_get_css_group(&$css, $renderer, $list, $owner_id, $type, $item_id) {
-  if ($type != 'row') {
-    // Go through our items and break up into right/center/right groups so we
-    // can figure out our offsets.
-
-    // right == any items on the right that are 'fixed'.
-    // middle == all fluid items.
-    // right == any items on the right that are 'fixed'.
-    $left = $middle = $right = array();
-    $left_total = $right_total = $middle_total = 0;
-    $current = 'left';
-    foreach ($list as $id) {
-      if ($renderer->settings['items'][$id]['width_type'] == 'px') {
-        // fixed
-        if ($current == 'left') {
-          $left[] = $id;
-          $renderer->positions[$id] = 'left';
-          $left_total += $renderer->settings['items'][$id]['width'];
-        }
-        else {
-          $current = 'right';
-          $right[] = $id;
-          $renderer->positions[$id] = 'right';
-          $right_total += $renderer->settings['items'][$id]['width'];
-        }
-      }
-      else {
-        // fluid
-        if ($current != 'right') {
-          $current = 'middle';
-          $middle[] = $id;
-          $renderer->positions[$id] = 'middle';
-          $middle_total += $renderer->settings['items'][$id]['width'];
-        }
-        // fall through: if current is 'right' and we ran into a 'fluid' then
-        // it gets *dropped* because that is invalid.
-      }
-    }
-
-    // Go through our right sides and create CSS.
-    foreach ($left as $id) {
-      $class = "." . $renderer->base[$type] . "-$id";
-      $css[$class] = array(
-        'position' => 'relative',
-        'float' => 'left',
-        'background-color' => 'transparent',
-        'width' => $renderer->settings['items'][$id]['width'] . "px",
-      );
-    }
-
-    // Do the same for right.
-    $right_pixels = 0;
-
-    foreach ($right as $id) {
-      $class = "." . $renderer->base[$type] . "-$id";
-      $css[$class] = array(
-        'float' => 'left',
-        'width' => $renderer->settings['items'][$id]['width'] . "px",
-      );
-    }
-
-    $max = count($middle) - 1;
-
-    if ($middle_total) {
-      // Because we love IE so much, auto scale everything to 99%. This
-      // means adding up the actual widths and then providing a multiplier
-      // to each so that the total is 99%.
-      $scale = $renderer->scale_base / $middle_total;
-      foreach ($middle as $position => $id) {
-        $class = "." . $renderer->base[$type] . "-$id";
-        $css[$class] = array(
-          'float' => 'left',
-          'width' => number_format($renderer->settings['items'][$id]['width'] * $scale, 4, '.', '') . "%",
-        );
-
-        // Store this so we can use it later.
-        // @todo: Store the scale, not the new width, so .js can adjust
-        // bi-directionally.
-        $renderer->scale[$id] = $scale;
-      }
-    }
-
-    // If there is any total remaining, we need to offset the splitter
-    // by this much too.
-    if ($left_total) {
-      // Add this even if it's 0 so we can handle removals.
-      $css["$owner_id-inside"]['padding-left'] = '0px';
-      if ($renderer->admin || count($middle)) {
-        $css["$owner_id-middle"]['margin-left'] = $left_total . 'px';
-        // IE hack
-        $css["* html $owner_id-left"]['left'] = $left_total . "px";
-        // Make this one very specific to the admin CSS so that preview
-        // does not stomp it.
-        $css[".panel-flexible-admin $owner_id-inside"]['padding-left'] = '0px';
-      }
-      else {
-        $css["$owner_id-inside"]['margin-left'] = '-' . $left_total . 'px';
-        $css["$owner_id-inside"]['padding-left'] = $left_total . 'px';
-        // IE hack
-        $css["* html $owner_id-inside"]['left'] = $left_total . "px";
-      }
-    }
-    if ($right_total) {
-      $css["$owner_id-middle"]['margin-right'] = $right_total . 'px';
-    }
-    $css["$owner_id-inside"]['padding-right'] = '0px';
-  }
-
-  // If the canvas has a fixed width set, and this is the canvas, fix the
-  // width.
-  if ($item_id == 'canvas') {
-    $item = $renderer->settings['items'][$item_id];
-
-    if (!empty($item['fixed_width']) && intval($item['fixed_width'])) {
-      $css['.' . $renderer->base['canvas']]['width'] = intval($item['fixed_width']) . 'px';
-    }
-    else {
-      $css['.' . $renderer->base['canvas']]['width'] = 'auto';
-    }
-  }
-
-  // Go through each item and process children.
-  foreach ($list as $id) {
-    $item = $renderer->settings['items'][$id];
-    if (empty($item['children'])) {
-      continue;
-    }
-
-    if ($type == 'column') {
-      // Columns can only contain rows.
-      $child_type = 'row';
-    }
-    else {
-      $child_type = isset($item['contains']) ? $item['contains'] : 'region';
-    }
-
-    $class = "." . $renderer->base[$type] . "-$id";
-    panels_flexible_get_css_group($css, $renderer, $item['children'], $class, $child_type, $id);
-  }
-}
-
-/**
- * AJAX responder to edit flexible settings for an item.
- *
- * $handler object
- *   The display renderer handler object.
- */
-function panels_ajax_flexible_edit_settings($handler, $id) {
-  $settings = &$handler->display->layout_settings;
-  panels_flexible_convert_settings($settings, $handler->plugins['layout']);
-
-  if (empty($settings['items'][$id])) {
-    ctools_modal_render(t('Error'), t('Invalid item id.'));
-  }
-
-  $item = &$settings['items'][$id];
-  $siblings = array();
-
-  if ($id != 'canvas') {
-    $siblings = $settings['items'][$item['parent']]['children'];
-  }
-
-
-  switch ($item['type']) {
-    case 'column':
-      $title = t('Configure column');
-      break;
-    case 'row':
-      if ($id == 'canvas') {
-        $title = t('Configure canvas');
-      }
-      else {
-        $title = t('Configure row');
-      }
-      break;
-    case 'region':
-      $title = t('Configure region');
-      break;
-  }
-
-  $form_state = array(
-    'display' => &$handler->display,
-    'item' => &$item,
-    'id' => $id,
-    'siblings' => $siblings,
-    'settings' => &$settings,
-    'ajax' => TRUE,
-    'title' => $title,
-    'op' => 'edit',
-  );
-
-  $output = ctools_modal_form_wrapper('panels_flexible_config_item_form', $form_state);
-  if (!empty($form_state['executed'])) {
-    // If the width type changed then other nearby items will have
-    // to have their widths adjusted.
-    panels_edit_cache_set($handler->cache);
-
-    $css_id = isset($handler->display->css_id) ? $handler->display->css_id : '';
-    $renderer = panels_flexible_create_renderer(TRUE, $css_id, array(), $settings, $handler->display, $handler->plugins['layout'], $handler);
-
-    $output = array();
-    // If the item is a region, replace the title.
-    $class = $renderer->base[$item['type']] . '-' . $id;
-    if ($item['type'] == 'region') {
-      $output[] = ajax_command_replace(".$class h2.label",
-        '<h2 class="label">' . check_plain($item['title']) . '</h2>');
-    }
-
-    // Rerender our links in case something changed.
-    $output[] = ajax_command_replace('.flexible-links-' . $id,
-      panels_flexible_render_item_links($renderer, $id, $item));
-
-    // If editing the canvas, reset the CSS width
-    if ($id == 'canvas') {
-      // update canvas CSS.
-      $css = array(
-        '.' . $renderer->item_class['column'] . '-inside' => array(
-          'padding-left' => $renderer->column_separation,
-          'padding-right' => $renderer->column_separation,
-        ),
-        '.' . $renderer->item_class['region'] . '-inside' => array(
-          'padding-left' => $renderer->region_separation,
-          'padding-right' => $renderer->region_separation,
-        ),
-        '.' . $renderer->item_class['row'] => array(
-          'padding-bottom' => $renderer->row_separation,
-        ),
-      );
-      if (!empty($item['fixed_width']) && intval($item['fixed_width'])) {
-        $css['.' . $renderer->base['canvas']] = array('width' => intval($item['fixed_width']) . 'px');
-      }
-      else {
-        $css['.' . $renderer->base['canvas']] = array('width' => 'auto');
-      }
-      foreach ($css as $selector => $data) {
-        $output[] = ajax_command_css($selector, $data);
-      }
-    }
-
-    $output[] = ctools_modal_command_dismiss();
-  }
-
-  $handler->commands = $output;
-}
-
-/**
- * Configure a row, column or region on the flexible page.
- *
- * @param <type> $form_state
- * @return <type>
- */
-function panels_flexible_config_item_form($form, &$form_state) {
-  $display = &$form_state['display'];
-  $item = &$form_state['item'];
-  $siblings = &$form_state['siblings'];
-  $settings = &$form_state['settings'];
-  $id = &$form_state['id'];
-
-  if ($item['type'] == 'region') {
-    $form['title'] = array(
-      '#title' => t('Region title'),
-      '#type' => 'textfield',
-      '#default_value' => $item['title'],
-      '#required' => TRUE,
-    );
-  }
-
-  if ($id == 'canvas') {
-    $form['class'] = array(
-      '#title' => t('Canvas class'),
-      '#type' => 'textfield',
-      '#default_value' => isset($item['class']) ? $item['class'] : '',
-      '#description' => t('This class will the primary class for this layout. It will also be appended to all column, row and region_classes to ensure that layouts within layouts will not inherit CSS from each other. If left blank, the name of the layout or ID of the display will be used.'),
-    );
-
-    $form['column_class'] = array(
-      '#title' => t('Column class'),
-      '#type' => 'textfield',
-      '#default_value' => isset($item['column_class']) ? $item['column_class'] : '',
-      '#description' => t('This class will be applied to all columns of the layout. If left blank this will be panels-flexible-column.'),
-    );
-
-    $form['row_class'] = array(
-      '#title' => t('Row class'),
-      '#type' => 'textfield',
-      '#default_value' => isset($item['row_class']) ? $item['row_class'] : '',
-      '#description' => t('This class will be applied to all rows of the layout. If left blank this will be panels-flexible-row.'),
-    );
-
-    $form['region_class'] = array(
-      '#title' => t('Region class'),
-      '#type' => 'textfield',
-      '#default_value' => isset($item['region_class']) ? $item['region_class'] : '',
-      '#description' => t('This class will be applied to all regions of the layout. If left blank this will be panels-flexible-region.'),
-    );
-
-    $form['no_scale'] = array(
-      '#type' => 'checkbox',
-      '#title' => t('Scale fluid widths for IE6'),
-      '#description' => t('IE6 does not do well with 100% widths. If checked, width will be scaled to 99% to compensate.'),
-      '#default_value' => empty($item['no_scale']),
-    );
-
-    $form['fixed_width'] = array(
-      '#type' => 'textfield',
-      '#title' => t('Fixed width'),
-      '#description' => t('If a value is entered, the layout canvas will be fixed to the given pixel width.'),
-      '#default_value' => isset($item['fixed_width']) ? $item['fixed_width'] : '',
-    );
-
-    $form['column_separation'] = array(
-      '#type' => 'textfield',
-      '#title' => t('Column separation'),
-      '#description' => t('How much padding to put on columns that are that are next to other columns. Note that this is put on both columns so the real amount is doubled.'),
-      '#default_value' => isset($item['column_separation']) ? $item['column_separation'] : '0.5em',
-    );
-
-    $form['region_separation'] = array(
-      '#type' => 'textfield',
-      '#title' => t('Region separation'),
-      '#description' => t('How much padding to put on regions that are that are next to other regions. Note that this is put on both regions so the real amount is doubled.'),
-      '#default_value' => isset($item['region_separation']) ? $item['region_separation'] : '0.5em',
-    );
-
-    $form['row_separation'] = array(
-      '#type' => 'textfield',
-      '#title' => t('Row separation'),
-      '#description' => t('How much padding to put on beneath rows to separate them from each other. Because this is placed only on the bottom, not hte top, this is NOT doubled like column/region separation.'),
-      '#default_value' => isset($item['row_separation']) ? $item['row_separation'] : '0.5em',
-    );
-  }
-  else {
-    $form['class'] = array(
-      '#title' => t('CSS class'),
-      '#type' => 'textfield',
-      '#default_value' => isset($item['class']) ? $item['class'] : '',
-      '#description' => t('Enter a CSS class that will be used. This can be used to apply automatic styling from your theme, for example.'),
-    );
-
-    if ($item['type'] != 'row') {
-      // Test to see if there are fluid items to the left or the right. If there
-      // are fluid items on both sides, this item cannot be set to fixed.
-      $left = $right = FALSE;
-      $current = 'left';
-      foreach ($siblings as $sibling) {
-        if ($sibling == $id) {
-          $current = 'right';
-        }
-        else if ($settings['items'][$sibling]['width_type'] == '%') {
-          $$current = TRUE; // Indirection.
-        }
-      }
-
-      $form['width_type'] = array(
-        '#type' => 'select',
-        '#title' => t('Width'),
-        '#default_value' => $item['width_type'],
-        '#options' => array(
-          '%' => t('Fluid'),
-          'px' => t('Fixed'),
-        ),
-        '#disabled' => TRUE,
-      );
-    }
-    else {
-      $form['contains'] = array(
-        '#type' => 'select',
-        '#title' => t('Contains'),
-        '#default_value' => $item['contains'],
-        '#options' => array(
-          'region' => t('Regions'),
-          'column' => t('Columns'),
-        ),
-      );
-
-      if (!empty($item['children'])) {
-        $form['contains']['#disabled'] = TRUE;
-        $form['contains']['#value'] = $item['contains'];
-        $form['contains']['#description'] = t('You must remove contained items to change the row container type.');
-      }
-    }
-  }
-
-  $form['save'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-/**
- * Submit handler for editing a flexible item.
- */
-function panels_flexible_config_item_form_submit(&$form, &$form_state) {
-  $item = &$form_state['item'];
-  if ($item['type'] == 'region') {
-    $item['title'] = $form_state['values']['title'];
-  }
-
-  $item['class'] = $form_state['values']['class'];
-
-  if ($form_state['id'] == 'canvas') {
-    $item['column_class'] = $form_state['values']['column_class'];
-    $item['row_class'] = $form_state['values']['row_class'];
-    $item['region_class'] = $form_state['values']['region_class'];
-    // Reverse this as the checkbox is backward from how we actually store
-    // it to make it simpler to default to scaling.
-    $item['no_scale'] = !$form_state['values']['no_scale'];
-    $item['fixed_width'] = $form_state['values']['fixed_width'];
-    $item['column_separation'] = $form_state['values']['column_separation'];
-    $item['region_separation'] = $form_state['values']['region_separation'];
-    $item['row_separation'] = $form_state['values']['row_separation'];
-  }
-  else if ($item['type'] != 'row') {
-    $item['width_type'] = $form_state['values']['width_type'];
-  }
-  else {
-    $item['contains'] = $form_state['values']['contains'];
-  }
-
-}
-
-/**
- * AJAX responder to add a new row, column or region to a flexible layout.
- */
-function panels_ajax_flexible_edit_add($handler, $id, $location = 'left') {
-  ctools_include('modal');
-  ctools_include('ajax');
-  $settings = &$handler->display->layout_settings;
-  panels_flexible_convert_settings($settings, $handler->plugins['layout']);
-
-  if (empty($settings['items'][$id])) {
-    ctools_modal_render(t('Error'), t('Invalid item id.'));
-  }
-
-  $parent = &$settings['items'][$id];
-
-  switch ($parent['type']) {
-    case 'column':
-      $title = t('Add row');
-      // Create the new item with defaults.
-      $item = array(
-        'type' => 'row',
-        'contains' => 'region',
-        'children' => array(),
-        'parent' => $id,
-      );
-      break;
-    case 'row':
-      switch ($parent['contains']) {
-        case 'region':
-          $title = $location == 'left' ? t('Add region to left') : t('Add region to right');
-          $item = array(
-            'type' => 'region',
-            'title' => '',
-            'width' => 100,
-            'width_type' => '%',
-            'parent' => $id,
-          );
-          break;
-        case 'column':
-          $title = $location == 'left' ? t('Add column to left') : t('Add column to right');
-          $item = array(
-            'type' => 'column',
-            'width' => 100,
-            'width_type' => '%',
-            'parent' => $id,
-            'children' => array(),
-          );
-          break;
-      }
-      // Create the new item with defaults.
-      break;
-    case 'region':
-      // Cannot add items to regions.
-      break;
-  }
-
-  $form_state = array(
-    'display' => &$handler->display,
-    'parent' => &$parent,
-    'item' => &$item,
-    'id' => $id,
-    'settings' => &$settings,
-    'ajax' => TRUE,
-    'title' => $title,
-    'location' => $location,
-  );
-
-  $output = ctools_modal_form_wrapper('panels_flexible_add_item_form', $form_state);
-  if (!empty($form_state['executed'])) {
-    // If the width type changed then other nearby items will have
-    // to have their widths adjusted.
-    panels_edit_cache_set($handler->cache);
-    $output = array();
-
-    $css_id = isset($handler->display->css_id) ? $handler->display->css_id : '';
-    // Create a renderer object so we can render our new stuff.
-    $renderer = panels_flexible_create_renderer(TRUE, $css_id, array(), $settings, $handler->display, $handler->plugins['layout'], $handler);
-
-    $content = '';
-    if ($item['type'] == 'region') {
-      $handler->plugins['layout']['regions'][$form_state['key']] = $item['title'];
-
-      $content = $handler->render_region($form_state['key'], array());
-
-      // Manually add the hidden field that our region uses to store pane info.
-      $content .= '<input type="hidden" name="panel[pane][' .
-        $form_state['key'] . ']" value="" />';
-
-    }
-    else {
-      // We need to make sure the left/middle/right divs exist inside this
-      // so that more stuff can be added inside it as needed.
-      foreach (array('left', 'middle', 'right') as $position) {
-        if (!empty($content) || $renderer->admin) {
-          $content .= '<div class="' . $renderer->base[$item['type']] . '-' . $form_state['key'] . '-' . $position . '"></div>';
-        }
-      }
-
-    }
-
-    // render the item
-    $parent_class =  $renderer->base[$parent['type']] . '-' . $id;
-    $item_output = panels_flexible_render_item($renderer, $item, $content, $form_state['key'], 0, 0, $item['type'] == 'row');
-
-    // Get all the CSS necessary for the entire row (as width adjustments may
-    // have cascaded).
-    $css = array();
-    panels_flexible_get_css_group($css, $renderer, $parent['children'], '.' . $parent_class, $item['type'], $id);
-
-    $position = isset($renderer->positions[$form_state['key']]) ? $renderer->positions[$form_state['key']] : 'middle';
-    // If there's a nearby item, add the splitter and rewrite the width
-    // of the nearby item as it probably got adjusted.
-    // The blocks of code in this else look very similar but are not actually
-    // duplicated because the order changes based on left or right.
-    switch ($position) {
-      case 'left':
-        if ($location == 'left') {
-          $item_output .= panels_flexible_render_splitter($renderer, $form_state['key'], $form_state['sibling']);
-          $output[] = ajax_command_prepend('#panels-dnd-main .' . $parent_class . '-left', $item_output);
-        }
-        else if ($location == 'right') {
-          // If we are adding to the right side of the left box, there is
-          // a splitter that we have to remove; then we add our box normally,
-          // and then add a new splitter for just our guy.
-          $output[] = ajax_command_remove('panels-flexible-splitter-for-' . $renderer->base[$item['type']] . '-' . $form_state['key']);
-          $item_output = panels_flexible_render_splitter($renderer, $form_state['sibling'], $form_state['key']) .  $item_output;
-          $item_output .= panels_flexible_render_splitter($renderer, $form_state['key'], NULL);
-          $output[] = ajax_command_append('#panels-dnd-main .' . $parent_class . '-left', $item_output);
-        }
-        break;
-      case 'right':
-        if (!empty($form_state['sibling'])) {
-          $item_output = panels_flexible_render_splitter($renderer, $form_state['sibling'], $form_state['key']) .  $item_output;
-        }
-        $output[] = ajax_command_append('#panels-dnd-main .' . $parent_class . '-right', $item_output);
-        break;
-      case 'middle':
-        if ($location == 'left') {
-          if (!empty($form_state['sibling'])) {
-            $item_output .= panels_flexible_render_splitter($renderer, $form_state['key'], $form_state['sibling']);
-          }
-          $output[] = ajax_command_prepend('#panels-dnd-main .' . $parent_class . '-middle', $item_output);
-        }
-        else {
-          if (!empty($form_state['sibling'])) {
-            $item_output = panels_flexible_render_splitter($renderer, $form_state['sibling'], $form_state['key']) .  $item_output;
-          }
-          $output[] = ajax_command_append('#panels-dnd-main .' . $parent_class . '-middle', $item_output);
-        }
-        break;
-
-    }
-
-    // Send our fix height command.
-    $output[] = array('command' => 'flexible_fix_height');
-
-    if (!empty($form_state['sibling'])) {
-      $sibling_width = '#panels-dnd-main .' . $renderer->base[$item['type']] . '-' . $form_state['sibling'] . '-width';
-      $output[] = array(
-        'command' => 'flexible_set_width',
-        'selector' => $sibling_width,
-        'width' => $settings['items'][$form_state['sibling']]['width'],
-      );
-    }
-    foreach ($css as $selector => $data) {
-      $output[] = ajax_command_css($selector, $data);
-    }
-
-    // Rerender our parent item links:
-    $output[] = ajax_command_replace('.flexible-links-' . $id,
-      panels_flexible_render_item_links($renderer, $id, $parent));
-
-    $output[] = array(
-      'command' => 'flexible_fix_firstlast',
-      'selector' => '.' . $parent_class . '-inside',
-      'base' => 'panels-flexible-' . $item['type'],
-    );
-
-    $output[] = ctools_modal_command_dismiss();
-  }
-
-  $handler->commands = $output;
-}
-/**
- * Form to add a row, column or region to a flexible layout.
- * @param <type> $form_state
- * @return <type>
- */
-function panels_flexible_add_item_form($form, &$form_state) {
-  $display = &$form_state['display'];
-  $item = &$form_state['item'];
-  $parent = &$form_state['parent'];
-  $settings = &$form_state['settings'];
-  $location = &$form_state['location'];
-  $id = &$form_state['id'];
-
-  if ($item['type'] == 'region') {
-    $form['title'] = array(
-      '#title' => t('Region title'),
-      '#type' => 'textfield',
-      '#default_value' => $item['title'],
-      '#required' => TRUE,
-    );
-  }
-
-  $form['class'] = array(
-    '#title' => t('CSS Class'),
-    '#type' => 'textfield',
-    '#default_value' => isset($item['class']) ? $item['class'] : '',
-    '#description' => t('Enter a CSS class that will be used. This can be used to apply automatic styling from your theme, for example.'),
-  );
-
-  if ($item['type'] != 'row') {
-    // If there is a 'fixed' type on the side we're adding to, then this
-    // must also be fixed. Otherwise it can be either and should default to
-    // fluid.
-    $restrict = FALSE;
-
-    if (!empty($parent['children'])) {
-      if ($location == 'left') {
-        $sibling = reset($parent['children']);
-      }
-      else {
-        $sibling = end($parent['children']);
-      }
-      if ($settings['items'][$sibling]['width_type'] == 'px') {
-        $restrict = TRUE;
-        $item['width_type'] = 'px';
-      }
-    }
-
-    $form['width_type'] = array(
-      '#type' => 'select',
-      '#title' => t('Width'),
-      '#default_value' => $item['width_type'],
-      '#options' => array(
-        '%' => t('Fluid'),
-        'px' => t('Fixed'),
-      ),
-      '#disabled' => $restrict,
-    );
-    if ($restrict) {
-      // This forces the value because disabled items don't always send
-      // their data back.
-      $form['width_type']['#value'] = $item['width_type'];
-      $form['width_type']['#description'] = t('Items cannot be set to fluid if there are fixed items already on that side.');
-    }
-  }
-  else {
-    $form['contains'] = array(
-      '#type' => 'select',
-      '#title' => t('Contains'),
-      '#default_value' => $item['contains'],
-      '#options' => array(
-        'region' => t('Regions'),
-        'column' => t('Columns'),
-      ),
-    );
-  }
-
-  $form['save'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-/**
- * Submit handler for editing a flexible item.
- */
-function panels_flexible_add_item_form_submit(&$form, &$form_state) {
-  $item = &$form_state['item'];
-  $parent = &$form_state['parent'];
-  $location = &$form_state['location'];
-  $settings = &$form_state['settings'];
-
-  $item['class'] = $form_state['values']['class'];
-
-  if ($item['type'] == 'region') {
-    $item['title'] = $form_state['values']['title'];
-  }
-
-  if ($item['type'] != 'row') {
-    $item['width_type'] = $form_state['values']['width_type'];
-  }
-  else {
-    $item['contains'] = $form_state['values']['contains'];
-  }
-
-  if ($item['type'] == 'region') {
-    // derive the region key from the title
-    $key = preg_replace("/[^a-z0-9]/", '_', drupal_strtolower($item['title']));
-    while (isset($settings['items'][$key])) {
-      $key .= '_';
-    }
-    $form_state['key'] = $key;
-  }
-  else {
-    $form_state['key'] = $key = max(array_keys($settings['items'])) + 1;
-  }
-
-  $form_state['sibling'] = NULL;
-  if ($item['type'] != 'row' && !empty($parent['children'])) {
-    // Figure out what the width should be and adjust our sibling if
-    // necessary.
-    if ($location == 'left') {
-      $form_state['sibling'] = reset($parent['children']);
-    }
-    else {
-      $form_state['sibling'] = end($parent['children']);
-
-    }
-
-    // If there is no sibling, or the sibling is of a different type,
-    // the default 100 will work for either fixed or fluid.
-    if ($form_state['sibling'] && $settings['items'][$form_state['sibling']]['width_type'] == $item['width_type']) {
-      // steal half of the sibling's space.
-      $width = $settings['items'][$form_state['sibling']]['width'] / 2;
-      $settings['items'][$form_state['sibling']]['width'] = $width;
-      $item['width'] = $width;
-    }
-  }
-
-  // Place the item.
-  $settings['items'][$key] = $item;
-  if ($location == 'left') {
-    array_unshift($parent['children'], $key);
-  }
-  else {
-    $parent['children'][] = $key;
-  }
-}
-
-/**
- * AJAX responder to remove an existing row, column or region from a flexible
- * layout.
- */
-function panels_ajax_flexible_edit_remove($handler, $id) {
-  $settings = &$handler->display->layout_settings;
-  panels_flexible_convert_settings($settings, $handler->plugins['layout']);
-
-  if (empty($settings['items'][$id])) {
-    ajax_render_error(t('Invalid item id.'));
-  }
-
-  $item = &$settings['items'][$id];
-  $css_id = isset($handler->display->css_id) ? $handler->display->css_id : '';
-  // Create a renderer object so we can render our new stuff.
-  $renderer = panels_flexible_create_renderer(TRUE, $css_id, array(), $settings, $handler->display, $handler->plugins['layout'], $handler);
-
-
-  $siblings = &$settings['items'][$item['parent']]['children'];
-  $parent_class = '.'  . $renderer->base[$settings['items'][$item['parent']]['type']] . '-' . $item['parent'];
-
-  // Find the offset of our array. This will also be the key because
-  // this is a simple array.
-  $offset = array_search($id, $siblings);
-
-  // Only bother with this stuff if our item is fluid, since fixed is
-  // as fixed does.
-  if ($item['type'] != 'row') {
-    if (isset($siblings[$offset + 1])) {
-      $next = $siblings[$offset + 1];
-    }
-    if (isset($siblings[$offset - 1])) {
-      $prev = $siblings[$offset - 1];
-    }
-
-    if ($item['width_type'] == '%') {
-      // First, try next.
-      if (isset($next) && $settings['items'][$next]['width_type'] == '%') {
-        $settings['items'][$next]['width'] += $item['width'];
-      }
-      // If that failed, try the previous one.
-      else if (isset($prev) && $settings['items'][$prev]['width_type'] == '%') {
-        $settings['items'][$prev]['width'] += $item['width'];
-      }
-    }
-    // Not sure what happens if they both failed. Maybe nothing.
-  }
-
-  // Remove the item.
-  array_splice($siblings, $offset, 1);
-
-  unset($settings['items'][$id]);
-
-  // Save our new state.
-  panels_edit_cache_set($handler->cache);
-  $class = $renderer->base[$item['type']] . '-' . $id;
-  $output = array();
-
-  $output[] = ajax_command_remove('#panels-dnd-main .' . $class);
-
-  // Regenerate the CSS for siblings.
-  if (!empty($siblings)) {
-    // Get all the CSS necessary for the entire row (as width adjustments may
-    // have cascaded).
-    $css = array();
-    panels_flexible_get_css_group($css, $renderer, $siblings, $parent_class, $item['type'], $item['parent']);
-    foreach ($css as $selector => $data) {
-      $output[] = ajax_command_css($selector, $data);
-    }
-  }
-
-  // There are potentially two splitters linked to this item to be removed.
-  if (!empty($prev)) {
-    $output[] = ajax_command_remove('.flexible-splitter-for-' . $renderer->base[$item['type']] . '-' . $prev);
-  }
-
-  // Try to remove the 'next' one even if there isn't a $next.
-  $output[] = ajax_command_remove('.flexible-splitter-for-' . $renderer->base[$item['type']] . '-' . $id);
-
-  if (!empty($prev) && !empty($next)) {
-    // Add a new splitter that links $prev and $next:
-    $splitter = panels_flexible_render_splitter($renderer, $prev, $next);
-    $prev_class = '#panels-dnd-main .' . $renderer->base[$item['type']] . '-' . $prev;
-    $output[] = ajax_command_after($prev_class, $splitter);
-    // Send our fix height command.
-    $output[] = array('command' => 'flexible_fix_height');
-  }
-  // Rerender our parent item links:
-  $output[] = ajax_command_replace('.flexible-links-' . $item['parent'],
-    panels_flexible_render_item_links($renderer, $item['parent'], $settings['items'][$item['parent']]));
-
-  $output[] = array(
-    'command' => 'flexible_fix_firstlast',
-    'selector' => $parent_class . '-inside',
-    'base' => 'panels-flexible-' . $item['type'],
-  );
-
-  $handler->commands = $output;
-}
-
-/**
- * AJAX responder to store resize information when the user adjusts the
- * splitter.
- */
-function panels_ajax_flexible_edit_resize($handler) {
-  ctools_include('ajax');
-  $settings = &$handler->display->layout_settings;
-  panels_flexible_convert_settings($settings, $handler->plugins['layout']);
-
-  $settings['items'][$_POST['left']]['width'] = $_POST['left_width'];
-  if (!empty($_POST['right']) && $_POST['right'] != $_POST['left']) {
-    $settings['items'][$_POST['right']]['width'] = $_POST['right_width'];
-  }
-
-  // Save our new state.
-  panels_edit_cache_set($handler->cache);
-
-  $handler->commands = array('ok');
-}
-
-/**
- * AJAX form to bring up the "reuse" modal.
- */
-function panels_ajax_flexible_edit_reuse($handler) {
-  $settings = &$handler->display->layout_settings;
-  panels_flexible_convert_settings($settings, $handler->plugins['layout']);
-
-  $form_state = array(
-    'display' => &$handler->display,
-    'settings' => &$settings,
-    'ajax' => TRUE,
-    'title' => t('Save this layout for reuse'),
-  );
-
-  $output = ctools_modal_form_wrapper('panels_flexible_reuse_form', $form_state);
-  if (!empty($form_state['executed'])) {
-    // Create the new layout.
-    ctools_include('export');
-    $layout = ctools_export_crud_new('panels_layout');
-    $layout->plugin = 'flexible';
-    $layout->name = $form_state['values']['name'];
-    $layout->admin_title = $form_state['values']['admin_title'];
-    $layout->admin_description = $form_state['values']['admin_description'];
-    $layout->category = $form_state['values']['category'];
-    $layout->settings = $handler->display->layout_settings;
-
-    // Save it.
-    ctools_export_crud_save('panels_layout', $layout);
-
-    if (empty($form_state['values']['keep'])) {
-      // Set the actual layout_settings to now use the newly minted layout:
-      $handler->display->layout = 'flexible:' . $layout->name;
-      $handler->display->layout_settings = array();
-
-      // Save our new state.
-      panels_edit_cache_set($handler->cache);
-    }
-
-    // Dismiss the modal.
-    $output[] = ctools_modal_command_dismiss();
-  }
-
-  $handler->commands = $output;
-}
-
-function panels_flexible_reuse_form($form, &$form_state) {
-  $form['markup'] = array(
-    '#prefix' => '<div class="description">',
-    '#suffix' => '</div>',
-    '#value' => t('If you save this layout for reuse it will appear in the list of reusable layouts at admin/structure/panels/layouts, and you will need to go there to edit it. This layout will then become an option for all future panels you make.'),
-  );
-
-  $form['admin_title'] = array(
-    '#type' => 'textfield',
-    '#title' => t('Administrative title'),
-    '#description' => t('This will appear in the administrative interface to easily identify it.'),
-  );
-
-  $form['name'] = array(
-    '#type' => 'machine_name',
-    '#title' => t('Machine name'),
-    '#description' => t('The machine readable name of this layout. It must be unique, and it must contain only alphanumeric characters and underscores. Once created, you will not be able to change this value!'),
-    '#machine_name' => array(
-      'exists' => 'panels_flexible_edit_name_exists',
-      'source' => array('admin_title'),
-    ),
-  );
-
-  $form['category'] = array(
-    '#type' => 'textfield',
-    '#title' => t('Category'),
-    '#description' => t('What category this layout should appear in. If left blank the category will be "Miscellaneous".'),
-  );
-
-  $form['admin_description'] = array(
-    '#type' => 'textarea',
-    '#title' => t('Administrative description'),
-    '#description' => t('A description of what this layout is, does or is for, for administrative use.'),
-  );
-
-  $form['keep'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Keep current panel layout flexible'),
-    '#description' => t('If checked, this panel will continue to use a generic flexible layout and will not use the saved layout. Use this option if you wish to clone this layout.'),
-  );
-
-  $form['submit'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-function panels_flexible_reuse_form_validate(&$form, &$form_state) {
-  if (empty($form_state['values']['name'])) {
-    form_error($form['name'], t('You must choose a machine name.'));
-  }
-
-  ctools_include('export');
-  $test = ctools_export_crud_load('panels_layout', $form_state['values']['name']);
-  if ($test) {
-    form_error($form['name'], t('That name is used by another layout: @layout', array('@layout' => $test->admin_title)));
-  }
-
-  // Ensure name fits the rules:
-  if (preg_match('/[^a-zA-Z0-9_]/', $form_state['values']['name'])) {
-    form_error($form['name'], t('Name must be alphanumeric or underscores only.'));
-  }
-}
-
-/**
- * Test for #machine_name type to see if an export exists.
- */
-function panels_flexible_edit_name_exists($name, $element, &$form_state) {
-  ctools_include('export');
-  $plugin = $form_state['plugin'];
-
-  return (empty($form_state['item']->export_ui_allow_overwrite) && ctools_export_crud_load($plugin['schema'], $name));
-}
diff --git a/plugins/layouts/flexible/flexible.png b/plugins/layouts/flexible/flexible.png
deleted file mode 100644
index 14b4779a0b4f7d3516092e6790310aa559c96fe9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 208
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIY!6
z^>lFzskrs#nj#;A0*~{>b>Hnxn3`v5ux$R56(=^SYt^F{T^6U*xR_?TeL7@wb(3vG
ztnS^~)6b<jSeP0e6ejSi+&AE<IMKs6KaJCX;g|?Jf2GGtC!oO$p00i_>zopr0DMqF
A?EnA(

diff --git a/plugins/layouts/flexible/grippie-vertical.png b/plugins/layouts/flexible/grippie-vertical.png
deleted file mode 100644
index 7d5b7eaf5e10d4d56c78ca2802aa10eaf6944344..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 265
zcmeAS@N?(olHy`uVBq!ia0vp^tUxTy!3-pubGO<6DVB6cUq=RpYd5a=M;HP5k|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ$d>80(?STckkZ)|NsAr4Lx6hB1|Pg
ze!>44o^Chr0`jUoT^vIyZY3oousAg^Br!~8U}RBbWa4mQVi9Oz;ZWe<6mSp_QfN?6
kabR%tXkciXKrID441zlt%v(NP26>vn)78&qol`;+0FUH8-2eap

diff --git a/plugins/layouts/onecol/onecol.css b/plugins/layouts/onecol/onecol.css
deleted file mode 100644
index 83f284a..0000000
--- a/plugins/layouts/onecol/onecol.css
+++ /dev/null
@@ -1,22 +0,0 @@
-
-.panel-1col {
-/*  overflow: hidden;  */
-}
-
-.panel-2col .panel-col-first .inside {
-  margin: 0;
-}
-
-
-.panel-1col .panel-col {
-  width: 100%;
-}
-
-#panels-edit-display .panel-pane,
-#panels-edit-display .helperclass {
-  margin: .5em;
-}
-
-.panel-2col .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/onecol/onecol.inc b/plugins/layouts/onecol/onecol.inc
deleted file mode 100644
index 4043566..0000000
--- a/plugins/layouts/onecol/onecol.inc
+++ /dev/null
@@ -1,14 +0,0 @@
-<?php
-
-/**
- * implementation of hook_panels_layouts()
- */
-// Plugin definition
-$plugin = array(
-  'title' => t('Single column'),
-  'category' => t('Columns: 1'),
-  'icon' => 'onecol.png',
-  'theme' => 'panels_onecol',
-  'css' => 'onecol.css',
-  'regions' => array('middle' => t('Middle column')),
-);
diff --git a/plugins/layouts/onecol/onecol.png b/plugins/layouts/onecol/onecol.png
deleted file mode 100644
index 176ed69e7f59d6705471a00705b143131cdc03a4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 122
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%0VEj2E4x#Gl%uDMV~9uR+v^*7859H#JJ=_M
zrzPD=Z)<RQ`bB+dsp(5Mof!dw8EPAtH?HgRR1xZQQJUxhq@GL+Ies)eKIjWW&s(;s
T5!s8vK!$p{`njxgN@xNA`cx+W

diff --git a/plugins/layouts/onecol/panels-onecol.html.twig b/plugins/layouts/onecol/panels-onecol.html.twig
deleted file mode 100644
index 0906cd7..0000000
--- a/plugins/layouts/onecol/panels-onecol.html.twig
+++ /dev/null
@@ -1,19 +0,0 @@
-{#
-/**
- * @file
- * Template for a 3 column panel layout.
- *
- * This template provides a very simple "one column" panel display layout.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   $content['middle']: The only panel in the layout.
- */
-#}
-<div class="panel-display panel-1col clearfix" {% if css_id %}{{ css_id }}{% endif %}>
-  <div class="panel-panel panel-col">
-    <div>{{ content.middle }}</div>
-  </div>
-</div>
diff --git a/plugins/layouts/threecol_25_50_25/panels-threecol-25-50-25.tpl.php b/plugins/layouts/threecol_25_50_25/panels-threecol-25-50-25.tpl.php
deleted file mode 100644
index 588e593..0000000
--- a/plugins/layouts/threecol_25_50_25/panels-threecol-25-50-25.tpl.php
+++ /dev/null
@@ -1,29 +0,0 @@
-<?php
-/**
- * @file
- * Template for the 1 column panel layout.
- *
- * This template provides a three column 25%-50%-25% panel display layout.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   - $content['left']: Content in the left column.
- *   - $content['middle']: Content in the middle column.
- *   - $content['right']: Content in the right column.
- */
-?>
-<div class="panel-display panel-3col clearfix" <?php if (!empty($css_id)) { print "id=\"$css_id\""; } ?>>
-  <div class="panel-panel panel-col-first">
-    <div class="inside"><?php print $content['left']; ?></div>
-  </div>
-
-  <div class="panel-panel panel-col">
-    <div class="inside"><?php print $content['middle']; ?></div>
-  </div>
-
-  <div class="panel-panel panel-col-last">
-    <div class="inside"><?php print $content['right']; ?></div>
-  </div>
-</div>
diff --git a/plugins/layouts/threecol_25_50_25/threecol_25_50_25.css b/plugins/layouts/threecol_25_50_25/threecol_25_50_25.css
deleted file mode 100644
index 2bffe57..0000000
--- a/plugins/layouts/threecol_25_50_25/threecol_25_50_25.css
+++ /dev/null
@@ -1,35 +0,0 @@
-
-.panel-3col { 
-/*  overflow: hidden;  */
-}
-
-.panel-3col .panel-col-first { 
-  float: left; 
-  width: 25%; 
-}
-
-.panel-3col .panel-col-first .inside { 
-  margin: 0 .5em 1em 0;
-}
-
-.panel-3col .panel-col { 
-  float: left; 
-  width: 50%; 
-}
-
-.panel-3col .panel-col .inside { 
-  margin: 0 .5em 1em .5em;
-}
-
-.panel-3col .panel-col-last { 
-  float: left; 
-  width: 25%; 
-}
-
-.panel-3col .panel-col-last .inside { 
-  margin: 0 0 1em .5em;
-}
-
-.panel-3col .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/threecol_25_50_25/threecol_25_50_25.inc b/plugins/layouts/threecol_25_50_25/threecol_25_50_25.inc
deleted file mode 100644
index 78ab682..0000000
--- a/plugins/layouts/threecol_25_50_25/threecol_25_50_25.inc
+++ /dev/null
@@ -1,20 +0,0 @@
-<?php
-
-/**
- * implementation of hook_panels_layouts
- */
-// Plugin definition
-$plugin = array(
-  'title' => t('Three column 25/50/25'),
-  'category' => t('Columns: 3'),
-  'icon' => 'threecol_25_50_25.png',
-  'theme' => 'panels_threecol_25_50_25',
-  'theme arguments' => array('id', 'content'),
-  'css' => 'threecol_25_50_25.css',
-  'regions' => array(
-    'left' => t('Left side'),
-    'middle' => t('Middle column'),
-    'right' => t('Right side')
-  ),
-);
-
diff --git a/plugins/layouts/threecol_25_50_25/threecol_25_50_25.png b/plugins/layouts/threecol_25_50_25/threecol_25_50_25.png
deleted file mode 100644
index ad6832a7b0cc3329880cfb2ea54b474d83c10924..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 200
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYym
z^>lFzskrs#`bJ&`1s>*u5B|2hIdxd1YApD<KIRFVM^9OyYssd_&$C^Vmd`Q$$;-mj
q=%66L0ix_C{yYBtf#_T&9)?99+2T(<I+zDEkipZ{&t;ucLK6U;5<-;#

diff --git a/plugins/layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.tpl.php b/plugins/layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.tpl.php
deleted file mode 100644
index 48aa523..0000000
--- a/plugins/layouts/threecol_25_50_25_stacked/panels-threecol-25-50-25-stacked.tpl.php
+++ /dev/null
@@ -1,46 +0,0 @@
-<?php
-/**
- * @file
- * Template for a 3 column panel layout.
- *
- * This template provides a three column 25%-50%-25% panel display layout, with
- * additional areas for the top and the bottom.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   - $content['top']: Content in the top row.
- *   - $content['left']: Content in the left column.
- *   - $content['middle']: Content in the middle column.
- *   - $content['right']: Content in the right column.
- *   - $content['bottom']: Content in the bottom row.
- */
-?>
-<div class="panel-display panel-3col-stacked clearfix" <?php if (!empty($css_id)) { print "id=\"$css_id\""; } ?>>
-  <?php if ($content['top']): ?>
-    <div class="panel-panel panel-col-top">
-      <div class="inside"><?php print $content['top']; ?></div>
-    </div>
-  <?php endif ?>
-
-  <div class="center-wrapper">
-    <div class="panel-panel panel-col-first">
-      <div class="inside"><?php print $content['left']; ?></div>
-    </div>
-
-    <div class="panel-panel panel-col">
-      <div class="inside"><?php print $content['middle']; ?></div>
-    </div>
-
-    <div class="panel-panel panel-col-last">
-      <div class="inside"><?php print $content['right']; ?></div>
-    </div>
-  </div>
-
-  <?php if ($content['bottom']): ?>
-    <div class="panel-panel panel-col-bottom">
-      <div class="inside"><?php print $content['bottom']; ?></div>
-    </div>
-  <?php endif ?>
-</div>
diff --git a/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css b/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css
deleted file mode 100644
index 1aa00da..0000000
--- a/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.css
+++ /dev/null
@@ -1,45 +0,0 @@
-
-.panel-3col-stacked { 
-/*  overflow: hidden;  */
-}
-
-.panel-3col-stacked .panel-col-top,
-.panel-3col-stacked .panel-col-bottom { 
-  width: 100%; 
-  clear: both;
-}
-
-.panel-3col-stacked .panel-col-top .inside {
-  margin-bottom: .5em;
-}
-
-.panel-3col-stacked .panel-col-first { 
-  float: left; 
-  width: 25%; 
-}
-
-.panel-3col-stacked .panel-col .inside { 
-  margin: 0 .5em 1em .5em;
-}
-
-.panel-3col-stacked .panel-col { 
-  float: left; 
-  width: 50%; 
-}
-
-.panel-3col-stacked .panel-col .inside { 
-  margin: 0 .5em 1em .5em;
-}
-
-.panel-3col-stacked .panel-col-last { 
-  float: left; 
-  width: 25%; 
-}
-
-.panel-3col-stacked .panel-col-last .inside { 
-  margin: 0 0 1em .5em;
-}
-
-.panel-3col-stacked .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.inc b/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.inc
deleted file mode 100644
index a5a450d..0000000
--- a/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.inc
+++ /dev/null
@@ -1,17 +0,0 @@
-<?php
-
-// Plugin definition
-$plugin = array(
-  'title' => t('Three column 25/50/25 stacked'),
-  'category' => t('Columns: 3'),
-  'icon' => 'threecol_25_50_25_stacked.png',
-  'theme' => 'panels_threecol_25_50_25_stacked',
-  'css' => 'threecol_25_50_25_stacked.css',
-  'regions' => array(
-    'top' => t('Top'),
-    'left' => t('Left side'),
-    'middle' => t('Middle column'),
-    'right' => t('Right side'),
-    'bottom' => t('Bottom'),
-  ),
-);
diff --git a/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.png b/plugins/layouts/threecol_25_50_25_stacked/threecol_25_50_25_stacked.png
deleted file mode 100644
index 14b4779a0b4f7d3516092e6790310aa559c96fe9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 208
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIY!6
z^>lFzskrs#nj#;A0*~{>b>Hnxn3`v5ux$R56(=^SYt^F{T^6U*xR_?TeL7@wb(3vG
ztnS^~)6b<jSeP0e6ejSi+&AE<IMKs6KaJCX;g|?Jf2GGtC!oO$p00i_>zopr0DMqF
A?EnA(

diff --git a/plugins/layouts/threecol_33_34_33/panels-threecol-33-34-33.tpl.php b/plugins/layouts/threecol_33_34_33/panels-threecol-33-34-33.tpl.php
deleted file mode 100644
index 73a7437..0000000
--- a/plugins/layouts/threecol_33_34_33/panels-threecol-33-34-33.tpl.php
+++ /dev/null
@@ -1,31 +0,0 @@
-<?php
-/**
- * @file
- * Template for a 3 column panel layout.
- *
- * This template provides a three column panel display layout, with
- * each column roughly equal in width.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   - $content['left']: Content in the left column.
- *   - $content['middle']: Content in the middle column.
- *   - $content['right']: Content in the right column.
- */
-?>
-
-<div class="panel-display panel-3col-33 clearfix" <?php if (!empty($css_id)) { print "id=\"$css_id\""; } ?>>
-  <div class="panel-panel panel-col-first">
-    <div class="inside"><?php print $content['left']; ?></div>
-  </div>
-
-  <div class="panel-panel panel-col">
-    <div class="inside"><?php print $content['middle']; ?></div>
-  </div>
-
-  <div class="panel-panel panel-col-last">
-    <div class="inside"><?php print $content['right']; ?></div>
-  </div>
-</div>
diff --git a/plugins/layouts/threecol_33_34_33/threecol_33_34_33.css b/plugins/layouts/threecol_33_34_33/threecol_33_34_33.css
deleted file mode 100644
index da2d931..0000000
--- a/plugins/layouts/threecol_33_34_33/threecol_33_34_33.css
+++ /dev/null
@@ -1,35 +0,0 @@
-
-.panel-3col-33 { 
-/*  overflow: hidden;  */
-}
-
-.panel-3col-33 .panel-col-first { 
-  float: left; 
-  width: 33%; 
-}
-
-.panel-3col-33 .panel-col-first .inside { 
-  margin: 0 .5em 1em 0;
-}
-
-.panel-3col-33 .panel-col { 
-  float: left; 
-  width: 33%; 
-}
-
-.panel-3col-33 .panel-col .inside { 
-  margin: 0 .5em 1em .5em;
-}
-
-.panel-3col-33 .panel-col-last { 
-  float: left; 
-  width: 33%; 
-}
-
-.panel-3col-33 .panel-col-last .inside { 
-  margin: 0 0 1em .5em;
-}
-
-.panel-3col-33 .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/threecol_33_34_33/threecol_33_34_33.inc b/plugins/layouts/threecol_33_34_33/threecol_33_34_33.inc
deleted file mode 100644
index ea4809a..0000000
--- a/plugins/layouts/threecol_33_34_33/threecol_33_34_33.inc
+++ /dev/null
@@ -1,15 +0,0 @@
-<?php
-
-// Plugin definition
-$plugin = array(
-  'title' => t('Three column 33/34/33'),
-  'category' => t('Columns: 3'),
-  'icon' => 'threecol_33_34_33.png',
-  'theme' => 'panels_threecol_33_34_33',
-  'css' => 'threecol_33_34_33.css',
-  'regions' => array(
-    'left' => t('Left side'),
-    'middle' => t('Middle column'),
-    'right' => t('Right side')
-   ),
-);
diff --git a/plugins/layouts/threecol_33_34_33/threecol_33_34_33.png b/plugins/layouts/threecol_33_34_33/threecol_33_34_33.png
deleted file mode 100644
index 468f8bbe84d91eaeebcce79226896c259157d362..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 196
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYym
z^mK6yskrs#`a(el1s>)Dm;Sc9C1_{}B-rWg{LLuz)}qjLQ_9NQ1|B{qqqZ|T3a~)X
jPq%aO_nWnEu}Uy3`p6bP@lo{`pkWN2u6{1-oD!M<1|~jJ

diff --git a/plugins/layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.tpl.php b/plugins/layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.tpl.php
deleted file mode 100644
index 276e2bf..0000000
--- a/plugins/layouts/threecol_33_34_33_stacked/panels-threecol-33-34-33-stacked.tpl.php
+++ /dev/null
@@ -1,46 +0,0 @@
-<?php
-/**
- * @file
- * Template for a 3 column panel layout.
- *
- * This template provides a three column 25%-50%-25% panel display layout, with
- * additional areas for the top and the bottom.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   - $content['top']: Content in the top row.
- *   - $content['left']: Content in the left column.
- *   - $content['middle']: Content in the middle column.
- *   - $content['right']: Content in the right column.
- *   - $content['bottom']: Content in the bottom row.
- */
-?>
-<div class="panel-display panel-3col-33-stacked  clearfix" <?php if (!empty($css_id)) { print "id=\"$css_id\""; } ?>>
-  <?php if ($content['top']): ?>
-    <div class="panel-panel panel-col-top">
-      <div class="inside"><?php print $content['top']; ?></div>
-    </div>
-  <?php endif ?>
-
-  <div class="center-wrapper">
-    <div class="panel-panel panel-col-first">
-      <div class="inside"><?php print $content['left']; ?></div>
-    </div>
-
-    <div class="panel-panel panel-col">
-      <div class="inside"><?php print $content['middle']; ?></div>
-    </div>
-
-    <div class="panel-panel panel-col-last">
-      <div class="inside"><?php print $content['right']; ?></div>
-    </div>
-  </div>
-
-  <?php if ($content['bottom']): ?>
-    <div class="panel-panel panel-col-bottom">
-      <div class="inside"><?php print $content['bottom']; ?></div>
-    </div>
-  <?php endif ?>
-</div>
diff --git a/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css b/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css
deleted file mode 100644
index 57b87ee..0000000
--- a/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.css
+++ /dev/null
@@ -1,45 +0,0 @@
-
-.panel-3col-33-stacked { 
-/*  overflow: hidden;  */
-}
-
-.panel-3col-33-stacked .panel-col-top,
-.panel-3col-33-stacked .panel-col-bottom { 
-  width: 100%; 
-  clear: both;
-}
-
-.panel-3col-33-stacked .panel-col-top .inside {
-  margin-bottom: 1em;
-}
-
-.panel-3col-33-stacked .panel-col-first { 
-  float: left; 
-  width: 33%; 
-}
-
-.panel-3col-33-stacked .panel-col-first .inside { 
-  margin: 0 .5em 1em 0;
-}
-
-.panel-3col-33-stacked .panel-col { 
-  float: left; 
-  width: 33%; 
-}
-
-.panel-3col-33-stacked .panel-col .inside { 
-  margin: 0 .5em 1em .5em;
-}
-
-.panel-3col-33-stacked .panel-col-last { 
-  float: left; 
-  width: 33%; 
-}
-
-.panel-3col-33-stacked .panel-col-last .inside { 
-  margin: 0 0 1em .5em;
-}
-
-.panel-3col-33-stacked .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.inc b/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.inc
deleted file mode 100644
index 3ac011b..0000000
--- a/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.inc
+++ /dev/null
@@ -1,17 +0,0 @@
-<?php
-
-// Plugin definition
-$plugin = array(
-  'title' => t('Three column 33/34/33 stacked'),
-  'category' => t('Columns: 3'),
-  'icon' => 'threecol_33_34_33_stacked.png',
-  'theme' => 'panels_threecol_33_34_33_stacked',
-  'css' => 'threecol_33_34_33_stacked.css',
-  'regions' => array(
-    'top' => t('Top'),
-    'left' => t('Left side'),
-    'middle' => t('Middle column'),
-    'right' => t('Right side'),
-    'bottom' => t('Bottom')
-  ),
-);
diff --git a/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.png b/plugins/layouts/threecol_33_34_33_stacked/threecol_33_34_33_stacked.png
deleted file mode 100644
index ffd1351367c03371fbc00d7cde6a435ce0998df8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 208
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIY!6
z^>lFzskrs#njsg10*~{>E#K|8G)K#NiA?{r`P5<#$weC$YflO@n<#j~<dOKZozsqA
ze33QtYj)&)MF9>LrbY)lf%?M+4-}2r_RLm2z;H~2o&R*+wS1t#44$rjF6*2Ung9Uk
BMm7Kd

diff --git a/plugins/layouts/twocol/panels-twocol.html.twig b/plugins/layouts/twocol/panels-twocol.html.twig
deleted file mode 100644
index d1796ef..0000000
--- a/plugins/layouts/twocol/panels-twocol.html.twig
+++ /dev/null
@@ -1,25 +0,0 @@
-{#
-/**
- * @file
- * Template for a 2 column panel layout.
- *
- * This template provides a two column panel display layout, with
- * each column roughly equal in width.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   - $content['left']: Content in the left column.
- *   - $content['right']: Content in the right column.
- */
-#}
-<div class="panel-display panel-2col clearfix" {% if css_id %}{{ css_id }}{% endif %}>
-  <div class="panel-panel panel-col-first">
-    <div class="inside">{{ content.left }}</div>
-  </div>
-
-  <div class="panel-panel panel-col-last">
-    <div class="inside">{{ content.right }}</div>
-  </div>
-</div>
diff --git a/plugins/layouts/twocol/twocol.css b/plugins/layouts/twocol/twocol.css
deleted file mode 100644
index 6e53eca..0000000
--- a/plugins/layouts/twocol/twocol.css
+++ /dev/null
@@ -1,37 +0,0 @@
-
-.panel-2col { 
-/*  overflow: hidden;  */
-}
-
-.panel-2col .panel-col-first { 
-  float: left; 
-  width: 50%; 
-}
-* html .panel-2col .panel-col-first {
-  width: 49.9%;
-}
-
-.panel-2col .panel-col-first .inside { 
-  margin: 0 .5em 1em 0;
-}
-
-.panel-2col .panel-col-last { 
-  float: left; 
-  width: 50%; 
-}
-* html .panel-2col .panel-col-last {
-  width: 49.9%;
-}
-
-.panel-2col .panel-col-last .inside { 
-  margin: 0 0 1em .5em;
-}
-
-#panels-edit-display .panel-pane,
-#panels-edit-display .helperclass {
-  margin: .5em;
-}
-
-.panel-2col .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/twocol/twocol.inc b/plugins/layouts/twocol/twocol.inc
deleted file mode 100644
index 1faedca..0000000
--- a/plugins/layouts/twocol/twocol.inc
+++ /dev/null
@@ -1,14 +0,0 @@
-<?php
-
-// Plugin definition
-$plugin = array(
-  'title' => t('Two column'),
-  'category' => t('Columns: 2'),
-  'icon' => 'twocol.png',
-  'theme' => 'panels_twocol',
-  'css' => 'twocol.css',
-  'regions' => array(
-    'left' => t('Left side'),
-    'right' => t('Right side')
-  ),
-);
diff --git a/plugins/layouts/twocol/twocol.png b/plugins/layouts/twocol/twocol.png
deleted file mode 100644
index 9d2965eb15b9750b40c5c7458cd5188c63f1ad59..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 193
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYzR
z^K@|xskrs#`a(el1p(%RAO4E>9<XC#nPEF~rmlkI@uyuOx6{_SUJCgu!{R6aK~JPD
g>udPey%0%YSTLEDqhRq{U7$$}p00i_>zopr09&0rfB*mh

diff --git a/plugins/layouts/twocol_bricks/panels-twocol-bricks.tpl.php b/plugins/layouts/twocol_bricks/panels-twocol-bricks.tpl.php
deleted file mode 100644
index e626844..0000000
--- a/plugins/layouts/twocol_bricks/panels-twocol-bricks.tpl.php
+++ /dev/null
@@ -1,53 +0,0 @@
-<?php
-/**
- * @file
- * Template for a 2 column panel layout.
- *
- * This template provides a two column panel display layout, with
- * each column roughly equal in width. It is 5 rows high; the top
- * middle and bottom rows contain 1 column, while the second
- * and fourth rows contain 2 columns.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   - $content['top']: Content in the top row.
- *   - $content['left_above']: Content in the left column in row 2.
- *   - $content['right_above']: Content in the right column in row 2.
- *   - $content['middle']: Content in the middle row.
- *   - $content['left_below']: Content in the left column in row 4.
- *   - $content['right_below']: Content in the right column in row 4.
- *   - $content['right']: Content in the right column.
- *   - $content['bottom']: Content in the bottom row.
- */
-?>
-<div class="panel-display panel-2col-bricks clearfix" <?php if (!empty($css_id)) { print "id=\"$css_id\""; } ?>>
-  <div class="panel-panel panel-col-top">
-    <div class="inside"><?php print $content['top']; ?></div>
-  </div>
-  <div class="center-wrapper">
-    <div class="panel-panel panel-col-first">
-      <div class="inside"><?php print $content['left_above']; ?></div>
-    </div>
-
-    <div class="panel-panel panel-col-last">
-      <div class="inside"><?php print $content['right_above']; ?></div>
-    </div>
-  </div>
-  <div class="panel-panel panel-col-middle">
-    <div class="inside"><?php print $content['middle']; ?></div>
-  </div>
-  <div class="center-wrapper">
-    <div class="panel-panel panel-col-first">
-      <div class="inside"><?php print $content['left_below']; ?></div>
-    </div>
-
-    <div class="panel-panel panel-col-last">
-      <div class="inside"><?php print $content['right_below']; ?></div>
-    </div>
-  </div>
-  <div class="panel-panel panel-col-bottom">
-    <div class="inside"><?php print $content['bottom']; ?></div>
-  </div>
-</div>
diff --git a/plugins/layouts/twocol_bricks/twocol_bricks.css b/plugins/layouts/twocol_bricks/twocol_bricks.css
deleted file mode 100644
index 4997ce6..0000000
--- a/plugins/layouts/twocol_bricks/twocol_bricks.css
+++ /dev/null
@@ -1,46 +0,0 @@
-
-.panel-2col-bricks { 
-/*  overflow: hidden;  */
-  margin-top: 0;
-  padding-top: 0;
-}
-
-.panel-2col-bricks .panel-col-top,
-.panel-2col-bricks .panel-col-middle,
-.panel-2col-bricks .panel-col-bottom { 
-  width: 99.9%; 
-  clear: both;
-}
-
-.panel-2col-bricks .panel-col-top .inside,
-.panel-2col-bricks .panel-col-middle .inside {
-  margin-bottom: .5em;
-}
-
-.panel-2col-bricks .panel-col-first { 
-  float: left; 
-  width: 50%; 
-}
-* html .panel-2col-bricks .panel-col-first {
-  width: 49.9%;
-}
-
-.panel-2col-bricks .panel-col-first .inside { 
-  margin: 0 .5em .5em 0;
-}
-
-.panel-2col-bricks .panel-col-last { 
-  float: left; 
-  width: 50%; 
-}
-* html .panel-2col-bricks .panel-col-last {
-  width: 49.9%;
-}
-
-.panel-2col-bricks .panel-col-last .inside { 
-  margin: 0 0 .5em .5em;
-}
-
-.panel-2col-bricks .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/twocol_bricks/twocol_bricks.inc b/plugins/layouts/twocol_bricks/twocol_bricks.inc
deleted file mode 100644
index 0cb6f1a..0000000
--- a/plugins/layouts/twocol_bricks/twocol_bricks.inc
+++ /dev/null
@@ -1,25 +0,0 @@
-<?php
-
-/**
- * @file
- * Implementation for the two column bricked layout
- */
-
-// Plugin definition
-$plugin = array(
-  'title' => t('Two column bricks'),
-  'category' => t('Columns: 2'),
-  'icon' => 'twocol_bricks.png',
-  'theme' => 'panels_twocol_bricks',
-  'css' => 'twocol_bricks.css',
-  'regions' => array(
-    'top' => t('Top'),
-    'left_above' => t('Left above'),
-    'right_above' => t('Right above'),
-    'middle' => t('Middle'),
-    'left_below' => t('Left below'),
-    'right_below' => t('Right below'),
-    'bottom' => t('Bottom'),
-  ),
-);
-
diff --git a/plugins/layouts/twocol_bricks/twocol_bricks.png b/plugins/layouts/twocol_bricks/twocol_bricks.png
deleted file mode 100644
index 450395c801c960fdff5b5acb6100a314d7926042..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 277
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!2~4t7C65LQY`6?zK#qG>ra@ocD)4hB}-f*
zN`mv#O3D+9QW+dm@{>{(JaZG%Q-e|yQz{EjrrH1%E%$VB45_&F=7uBRVFex*hnS}u
zZ94B?3iJ5saQD%Y!>Xrpg;;hMow1DG`!z%L`bIgyK$b0K?=9{hm$>b__xq*U9j&dc
zrKVwPPVdY35%O9vGw|=P4O8OhNnTAqQa9uKA}MYVcrCT2e4>YDbYyRC<)UW_Cy%)C
z9yxUA(666H8*d6-RWtKb5(9#3@*8{HwtZQ<e#_-FlSfSl4jtO1d^+O^+w31A2@J}2
Wa`GHk-2l3nfx*+&&t;ucLK6V65OJLV

diff --git a/plugins/layouts/twocol_stacked/panels-twocol-stacked.tpl.php b/plugins/layouts/twocol_stacked/panels-twocol-stacked.tpl.php
deleted file mode 100644
index 901d27c..0000000
--- a/plugins/layouts/twocol_stacked/panels-twocol-stacked.tpl.php
+++ /dev/null
@@ -1,40 +0,0 @@
-<?php
-/**
- * @file
- * Template for a 2 column panel layout.
- *
- * This template provides a two column panel display layout, with
- * additional areas for the top and the bottom.
- *
- * Variables:
- * - $id: An optional CSS id to use for the layout.
- * - $content: An array of content, each item in the array is keyed to one
- *   panel of the layout. This layout supports the following sections:
- *   - $content['top']: Content in the top row.
- *   - $content['left']: Content in the left column.
- *   - $content['right']: Content in the right column.
- *   - $content['bottom']: Content in the bottom row.
- */
-?>
-<div class="panel-2col-stacked clearfix panel-display" <?php if (!empty($css_id)) { print "id=\"$css_id\""; } ?>>
-  <?php if ($content['top']): ?>
-    <div class="panel-col-top panel-panel">
-      <div class="inside"><?php print $content['top']; ?></div>
-    </div>
-  <?php endif; ?>
-
-  <div class="center-wrapper">
-    <div class="panel-col-first panel-panel">
-      <div class="inside"><?php print $content['left']; ?></div>
-    </div>
-    <div class="panel-col-last panel-panel">
-      <div class="inside"><?php print $content['right']; ?></div>
-    </div>
-  </div>
-
-  <?php if ($content['bottom']): ?>
-    <div class="panel-col-bottom panel-panel">
-      <div class="inside"><?php print $content['bottom']; ?></div>
-    </div>
-  <?php endif; ?>
-</div>
diff --git a/plugins/layouts/twocol_stacked/twocol_stacked.css b/plugins/layouts/twocol_stacked/twocol_stacked.css
deleted file mode 100644
index 56eb3e3..0000000
--- a/plugins/layouts/twocol_stacked/twocol_stacked.css
+++ /dev/null
@@ -1,41 +0,0 @@
-
-.panel-2col-stacked { 
-/*  overflow: hidden;  */
-  margin-top: 0;
-  padding-top: 0;
-}
-
-.panel-2col-stacked .panel-col-top,
-.panel-2col-stacked .panel-col-bottom { 
-  width: 99.9%; 
-  clear: both;
-}
-
-.panel-2col-stacked .panel-col-top .inside {
-  margin-bottom: .5em;
-}
-
-.panel-2col-stacked .panel-col-first { 
-  float: left; 
-  width: 50%; 
-}
-* html .panel-2col-stacked .panel-col-first {
-  width: 49.9%;
-}
-
-.panel-2col-stacked .panel-col-first .inside { 
-  margin: 0 .5em 1em 0;
-}
-
-.panel-2col-stacked .panel-col-last { 
-  float: left; 
-  width: 49.9%; 
-}
-
-.panel-2col-stacked .panel-col-last .inside { 
-  margin: 0 0 1em .5em;
-}
-
-.panel-2col-stacked .panel-separator {
-  margin: 0 0 1em 0;
-}
diff --git a/plugins/layouts/twocol_stacked/twocol_stacked.inc b/plugins/layouts/twocol_stacked/twocol_stacked.inc
deleted file mode 100644
index 5916a15..0000000
--- a/plugins/layouts/twocol_stacked/twocol_stacked.inc
+++ /dev/null
@@ -1,16 +0,0 @@
-<?php
-
-// Plugin definition
-$plugin = array(
-  'title' => t('Two column stacked'),
-  'category' => t('Columns: 2'),
-  'icon' => 'twocol_stacked.png',
-  'theme' => 'panels_twocol_stacked',
-  'css' => 'twocol_stacked.css',
-  'regions' => array(
-    'top' => t('Top'),
-    'left' => t('Left side'),
-    'right' => t('Right side'),
-    'bottom' => t('Bottom')
-  ),
-);
diff --git a/plugins/layouts/twocol_stacked/twocol_stacked.png b/plugins/layouts/twocol_stacked/twocol_stacked.png
deleted file mode 100644
index 30ab8b67de949b6b2c2bc9140cef931119d94f5d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 202
zcmeAS@N?(olHy`uVBq!ia0vp^MnLS%!3-o>&!}_(DVB6cUq=Rp^(V|(yIunMk|nMY
zCBgY=CFO}lsSJ)O`AMk?p1FzXsX?iUDV2pMQ*D5XI0Jk_TxZUl`TzfaATK`uwIYym
z_jGX#skrs#nj#;Af&lZudw>65<S<F%oN@YEe@4(n5x;dFi*tkoPMREI|C}?eHT`CL
umr$pR(nJrHc#i)Daup|gnEf}iNHFw0VzaukXL%~nNCr<=KbLh*2~7Yd!b14~


From c6a433f8fff2979fbe8a19079bc14e386395df03 Mon Sep 17 00:00:00 2001
From: legolasbo <legolasbo@2480548.no-reply.drupal.org>
Date: Tue, 23 Feb 2016 13:25:19 -0800
Subject: [PATCH 04/24] Issue #2657086 by legolasbo, samuel.mortenson: Use
 Drupal.t to translate all strings in IPE Backbone Views

---
 panels_ipe/js/panels_ipe.js               | 16 ++++++++++------
 panels_ipe/js/views/BlockContentPicker.js |  2 +-
 panels_ipe/js/views/BlockPicker.js        | 10 +++++-----
 panels_ipe/js/views/BlockView.js          |  4 ++--
 panels_ipe/js/views/LayoutPicker.js       |  6 +++---
 panels_ipe/js/views/LayoutView.js         |  4 ++--
 6 files changed, 23 insertions(+), 19 deletions(-)

diff --git a/panels_ipe/js/panels_ipe.js b/panels_ipe/js/panels_ipe.js
index 6dacbdb..247b32f 100644
--- a/panels_ipe/js/panels_ipe.js
+++ b/panels_ipe/js/panels_ipe.js
@@ -94,15 +94,15 @@
     var tab_collection = new Drupal.panels_ipe.TabCollection();
 
     if (settings.panels_ipe.layout.changeable) {
-      tab_collection.add({title: 'Change Layout', id: 'change_layout'});
+      tab_collection.add(createTabModel(Drupal.t('Change Layout'), 'change_layout'));
     }
-    tab_collection.add({title: 'Create Content', id: 'create_content'});
-    tab_collection.add({title: 'Place Content', id: 'place_content'});
+    tab_collection.add(createTabModel(Drupal.t('Create Content'), 'create_content'));
+    tab_collection.add(createTabModel(Drupal.t('Place Content'), 'place_content'));
 
     // The edit/save/cancel tabs are special, and are tracked by our app.
-    var edit_tab = new Drupal.panels_ipe.TabModel({title: 'Edit', id: 'edit'});
-    var save_tab = new Drupal.panels_ipe.TabModel({title: 'Save', id: 'save'});
-    var cancel_tab = new Drupal.panels_ipe.TabModel({title: 'Cancel', id: 'cancel'});
+    var edit_tab = createTabModel(Drupal.t('Edit'), 'edit');
+    var save_tab = createTabModel(Drupal.t('Save'), 'save');
+    var cancel_tab = createTabModel(Drupal.t('Cancel'), 'cancel');
     tab_collection.add(edit_tab);
     tab_collection.add(save_tab);
     tab_collection.add(cancel_tab);
@@ -173,6 +173,10 @@
 
     // Render our AppView.
     $('body').append(Drupal.panels_ipe.app_view.render().$el);
+
+    function createTabModel(title, id) {
+      return new Drupal.panels_ipe.TabModel({title: title, id: id});
+    }
   };
 
   Drupal.panels_ipe.setFlipperHeight = function ($form) {
diff --git a/panels_ipe/js/views/BlockContentPicker.js b/panels_ipe/js/views/BlockContentPicker.js
index 3b26f90..fe5d9e6 100644
--- a/panels_ipe/js/views/BlockContentPicker.js
+++ b/panels_ipe/js/views/BlockContentPicker.js
@@ -29,7 +29,7 @@
      * @type {function}
      */
     template_form: _.template(
-      '<h4>Add new <strong><%- label %></strong> content</h4>' +
+      '<h4>' + Drupal.t('Add new <strong><%- label %></strong> content') + '</h4>' +
       '<div class="ipe-block-type-form ipe-form"><div class="ipe-icon ipe-icon-loading"></div></div>'
     ),
 
diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index 78fa6b4..f2058dc 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -31,9 +31,9 @@
       '<div class="ipe-block-plugin">' +
       '  <div class="ipe-block-plugin-info">' +
       '    <h5><%- label %></h5>' +
-      '    <p>Provider: <strong><%- provider %></strong></p>' +
+      '    <p>' + Drupal.t('Provider: <strong><%- provider %></strong>') + '</p>' +
       '  </div>' +
-      '  <a data-plugin-id="<%- plugin_id %>">Add</a>' +
+      '  <a data-plugin-id="<%- plugin_id %>">' + Drupal.t('Add') + '</a>' +
       '</div>'
     ),
 
@@ -44,9 +44,9 @@
       '<div class="ipe-block-plugin">' +
       '  <div class="ipe-block-plugin-info">' +
       '    <h5><%- label %></h5>' +
-      '    <p>Provider: <strong><%- provider %></strong></p>' +
+      '    <p>' + Drupal.t('Provider: <strong><%- provider %></strong>') + '</p>' +
       '  </div>' +
-      '  <a data-existing-region-name="<%- region %>" data-existing-block-id="<%- uuid %>">Configure</a>' +
+      '  <a data-existing-region-name="<%- region %>" data-existing-block-id="<%- uuid %>">' + Drupal.t('Configure') + '</a>' +
       '</div>'
     ),
 
@@ -54,7 +54,7 @@
      * @type {function}
      */
     template_form: _.template(
-      '<h4>Configure <strong><%- label %></strong> block</h4>' +
+      '<h4>' + Drupal.t('Configure <strong><%- label %></strong> block') + '</h4>' +
       '<div class="ipe-block-plugin-form ipe-form"><div class="ipe-icon ipe-icon-loading"></div></div>'
     ),
 
diff --git a/panels_ipe/js/views/BlockView.js b/panels_ipe/js/views/BlockView.js
index ff86370..77fd5de 100644
--- a/panels_ipe/js/views/BlockView.js
+++ b/panels_ipe/js/views/BlockView.js
@@ -16,7 +16,7 @@
      */
     template_actions: _.template(
       '<div class="ipe-actions-block ipe-actions" data-block-action-id="<%- uuid %>">' +
-      '  <h5>Block: <%- label %></h5>' +
+      '  <h5>' + Drupal.t('Block: <%- label %>') + '</h5>' +
       '  <ul class="ipe-action-list">' +
       '    <li data-action-id="remove">' +
       '      <a><span class="ipe-icon ipe-icon-remove"></span></a>' +
@@ -28,7 +28,7 @@
       '      <a><span class="ipe-icon ipe-icon-down"></span></a>' +
       '    </li>' +
       '    <li data-action-id="move">' +
-      '      <select><option>Move</option></select>' +
+      '      <select><option>' + Drupal.t('Move') + '</option></select>' +
       '    </li>' +
       '    <li data-action-id="configure">' +
       '      <a><span class="ipe-icon ipe-icon-configure"></span></a>' +
diff --git a/panels_ipe/js/views/LayoutPicker.js b/panels_ipe/js/views/LayoutPicker.js
index d45b2c7..b5a4e27 100644
--- a/panels_ipe/js/views/LayoutPicker.js
+++ b/panels_ipe/js/views/LayoutPicker.js
@@ -15,7 +15,7 @@
      * @type {function}
      */
     template_form: _.template(
-      '<h4>Configure <strong><%- label %></strong> layout</h4>' +
+      '<h4>' + Drupal.t('Configure <strong><%- label %></strong> layout') + '</h4>' +
       '<div class="ipe-layout-form ipe-form"><div class="ipe-icon ipe-icon-loading"></div></div>'
     ),
 
@@ -89,12 +89,12 @@
       this.renderCategories();
 
       // Flag the current layout.
-      var current_layout_text = Drupal.t('<p>@text</p>', {'@text': 'Current Layout'});
+      var current_layout_text = '<p>' + Drupal.t('Current Layout') + '</p>';
       this.$('[data-layout-id="' + current_layout + '"]').append(current_layout_text);
 
       // Prepend the current layout as its own category.
       this.$('.ipe-categories').prepend(this.template_category({
-        name: 'Current Layout',
+        name: Drupal.t('Current Layout'),
         count: null,
         active: this.activeCategory === 'Current Layout'
       }));
diff --git a/panels_ipe/js/views/LayoutView.js b/panels_ipe/js/views/LayoutView.js
index ffd9097..651564b 100644
--- a/panels_ipe/js/views/LayoutView.js
+++ b/panels_ipe/js/views/LayoutView.js
@@ -16,7 +16,7 @@
      */
     template_region_actions: _.template(
       '<div class="ipe-actions" data-region-action-id="<%- name %>">' +
-      '  <h5>Region: <%- name %></h5>' +
+      '  <h5>' + Drupal.t('Region: <%- name %>') + '</h5>' +
       '  <ul class="ipe-action-list"></ul>' +
       '</div>'
     ),
@@ -216,7 +216,7 @@
      *   The event object.
      */
     hideBlockRegionList: function (e) {
-      $(e.currentTarget).html('<option>Move</option>');
+      $(e.currentTarget).html('<option>' + Drupal.t('Move') + '</option>');
     },
 
     /**

From ba6670406b3f884e41be1fd4bba554d4209a6160 Mon Sep 17 00:00:00 2001
From: Jakob Perry <japerry@45640.no-reply.drupal.org>
Date: Tue, 23 Feb 2016 14:56:34 -0800
Subject: [PATCH 05/24] Issue #2664792 by japerry: Remove known legacy D7 (or
 earlier code) and remove it.

---
 CHANGELOG.txt                                      |   39 -
 KNOWN_ISSUES.txt                                   |   91 -
 README.txt                                         |    6 -
 UPGRADE.txt                                        |   22 -
 css/panels-dashboard.css                           |   62 -
 css/panels.css                                     |   50 -
 css/panels_admin.css                               |  165 --
 css/panels_dnd.css                                 |  670 -------
 css/panels_page.css                                |   14 -
 help/display.html                                  |    0
 help/pane.html                                     |    0
 help/plugins-style.html                            |    0
 images/arrow-active.png                            |  Bin 313 -> 0 bytes
 images/arrow-down-light.png                        |  Bin 271 -> 0 bytes
 images/bg-content-modal.png                        |  Bin 156 -> 0 bytes
 images/bg-shade-dark.png                           |  Bin 220 -> 0 bytes
 images/bg-shade-light.png                          |  Bin 216 -> 0 bytes
 images/bg-shade-medium.png                         |  Bin 221 -> 0 bytes
 images/bg-shade-white-lrg.png                      |  Bin 214 -> 0 bytes
 images/blank.gif                                   |  Bin 49 -> 0 bytes
 images/close.gif                                   |  Bin 949 -> 0 bytes
 images/delete.png                                  |  Bin 795 -> 0 bytes
 images/go-down.png                                 |  Bin 583 -> 0 bytes
 images/go-right.png                                |  Bin 392 -> 0 bytes
 images/go-up.png                                   |  Bin 566 -> 0 bytes
 images/icon-addcontent.png                         |  Bin 818 -> 0 bytes
 images/icon-cache.png                              |  Bin 1001 -> 0 bytes
 images/icon-configure.png                          |  Bin 765 -> 0 bytes
 images/icon-delete.png                             |  Bin 877 -> 0 bytes
 images/icon-draggable.png                          |  Bin 236 -> 0 bytes
 images/icon-hidepane.png                           |  Bin 735 -> 0 bytes
 images/icon-showpane.png                           |  Bin 701 -> 0 bytes
 images/no-icon.png                                 |  Bin 3398 -> 0 bytes
 images/no-layout-preview.png                       |  Bin 1851 -> 0 bytes
 images/portlet-collapsed.png                       |  Bin 108 -> 0 bytes
 images/portlet-expanded.png                        |  Bin 106 -> 0 bytes
 images/screenshot-1.jpg                            |  Bin 14072 -> 0 bytes
 images/screenshot-2.jpg                            |  Bin 43830 -> 0 bytes
 images/screenshot-3.jpg                            |  Bin 43224 -> 0 bytes
 images/screenshot-4.jpg                            |  Bin 73474 -> 0 bytes
 images/sky.png                                     |  Bin 2275 -> 0 bytes
 images/sprite.png                                  |  Bin 14325 -> 0 bytes
 images/throbber.gif                                |  Bin 3208 -> 0 bytes
 images/user-trash.png                              |  Bin 507 -> 0 bytes
 includes/add-content.inc                           |   83 -
 includes/callbacks.inc                             |  205 --
 includes/legacy.inc                                |   41 -
 js/display_editor.js                               |  546 ------
 js/layout.js                                       |   18 -
 js/panels-base.js                                  |   28 -
 panels.module                                      |  343 +---
 plugins/cache/simple.inc                           |  161 --
 plugins/display_renderers/editor.inc               |    5 -
 .../panels_renderer_editor.class.php               | 1995 --------------------
 .../panels_renderer_simple.class.php               |   32 -
 .../panels_renderer_standard.class.php             |  645 -------
 plugins/display_renderers/simple.inc               |    8 -
 plugins/display_renderers/standard.inc             |    5 -
 plugins/export_ui/panels_layouts.inc               |   23 -
 plugins/export_ui/panels_layouts_ui.class.php      |  245 ---
 templates/panels-add-content-link.tpl.php          |   10 -
 templates/panels-add-content-modal.tpl.php         |   38 -
 templates/panels-dashboard-block.tpl.php           |   13 -
 templates/panels-dashboard-link.tpl.php            |   12 -
 templates/panels-dashboard.tpl.php                 |   11 -
 templates/panels-pane.tpl.php                      |   58 -
 66 files changed, 19 insertions(+), 5625 deletions(-)
 delete mode 100644 CHANGELOG.txt
 delete mode 100644 KNOWN_ISSUES.txt
 delete mode 100644 README.txt
 delete mode 100644 UPGRADE.txt
 delete mode 100644 css/panels-dashboard.css
 delete mode 100644 css/panels.css
 delete mode 100644 css/panels_admin.css
 delete mode 100644 css/panels_dnd.css
 delete mode 100644 css/panels_page.css
 delete mode 100644 help/display.html
 delete mode 100644 help/pane.html
 delete mode 100644 help/plugins-style.html
 delete mode 100644 images/arrow-active.png
 delete mode 100644 images/arrow-down-light.png
 delete mode 100644 images/bg-content-modal.png
 delete mode 100644 images/bg-shade-dark.png
 delete mode 100644 images/bg-shade-light.png
 delete mode 100644 images/bg-shade-medium.png
 delete mode 100644 images/bg-shade-white-lrg.png
 delete mode 100644 images/blank.gif
 delete mode 100644 images/close.gif
 delete mode 100644 images/delete.png
 delete mode 100644 images/go-down.png
 delete mode 100644 images/go-right.png
 delete mode 100644 images/go-up.png
 delete mode 100644 images/icon-addcontent.png
 delete mode 100644 images/icon-cache.png
 delete mode 100644 images/icon-configure.png
 delete mode 100644 images/icon-delete.png
 delete mode 100644 images/icon-draggable.png
 delete mode 100644 images/icon-hidepane.png
 delete mode 100644 images/icon-showpane.png
 delete mode 100644 images/no-icon.png
 delete mode 100644 images/no-layout-preview.png
 delete mode 100644 images/portlet-collapsed.png
 delete mode 100644 images/portlet-expanded.png
 delete mode 100644 images/screenshot-1.jpg
 delete mode 100644 images/screenshot-2.jpg
 delete mode 100644 images/screenshot-3.jpg
 delete mode 100644 images/screenshot-4.jpg
 delete mode 100644 images/sky.png
 delete mode 100644 images/sprite.png
 delete mode 100644 images/throbber.gif
 delete mode 100644 images/user-trash.png
 delete mode 100644 includes/add-content.inc
 delete mode 100644 includes/callbacks.inc
 delete mode 100644 includes/legacy.inc
 delete mode 100644 js/display_editor.js
 delete mode 100644 js/layout.js
 delete mode 100644 js/panels-base.js
 delete mode 100644 plugins/cache/simple.inc
 delete mode 100644 plugins/display_renderers/editor.inc
 delete mode 100644 plugins/display_renderers/panels_renderer_editor.class.php
 delete mode 100644 plugins/display_renderers/panels_renderer_simple.class.php
 delete mode 100644 plugins/display_renderers/panels_renderer_standard.class.php
 delete mode 100644 plugins/display_renderers/simple.inc
 delete mode 100644 plugins/display_renderers/standard.inc
 delete mode 100644 plugins/export_ui/panels_layouts.inc
 delete mode 100644 plugins/export_ui/panels_layouts_ui.class.php
 delete mode 100644 templates/panels-add-content-link.tpl.php
 delete mode 100644 templates/panels-add-content-modal.tpl.php
 delete mode 100644 templates/panels-dashboard-block.tpl.php
 delete mode 100644 templates/panels-dashboard-link.tpl.php
 delete mode 100644 templates/panels-dashboard.tpl.php
 delete mode 100644 templates/panels-pane.tpl.php

diff --git a/CHANGELOG.txt b/CHANGELOG.txt
deleted file mode 100644
index 4d6a68f..0000000
--- a/CHANGELOG.txt
+++ /dev/null
@@ -1,39 +0,0 @@
-CHANGELOG for Panels 3.0 for Drupal 7
-Panels 7.x-3.0-dev
-==================
-#1025716: Panels fields broken in last update.
-#1056464 by EclipseGc: Fix broken delete statement in mini panel delete.
-#954324 by EclipseGc: Fix broken delete statement in mini panel uninstall.
-#1008120: "classes" not passing through to rounded shadow pane stylizer style, preventing style from working.
-
-Panels 7.x-3.0-alpha2 (10-Jan-2011)
-=====================
-
-#920266 by dereine: Typo in cache.inc caused wsods in rare circumstances.
-#879482 by mvc: Ensure Panels and CTools module files are loaded during update. Apparently could cause WSOD if not.
-#917614 by jskulski: IPE broken in IE.
-#906520: Improve CSS for rounded shadow boxes on IE7.
-#932632 by mikeytown2: Fix notice in .install file.
-#927840: Add clear-block to dashboard HTML to ensure themes do not do weird things to it.
-#869766: Fix occasional problem with flexible layout pushing the entire layout to the left in certain fixed-width only configurations.
-#949310: E_STRICT violation on declaration of render_pane() method of display renderers.
-#940002: Custom style modal was broken.
-#953484: Panes were not properly using classes array.
-#941532: panel nodes had some serious problems do to hook_node_*.
-#954324: Mini panels failed during uninstall.
-#827628: "Add content" dialog could lose content with the same title as other content.
-Fix the naked style to support content that needs to be rendered.
-#958072: Fix panels_node_node_access to not throw warnings on menu access tests.
-#965286: Panel node update was trying to use db_insert() instead of db_update().
-#964334: Panels breaks views' row styles with the panels fields style.
-#941802: Fix radio layout butotn.
-#980696 by das-peter: Update calls to drupal_set_html_head() to D7.
-#961662 by Nick Lewis: Account for pager info in simple caching.
-#980870 by das-peter: CSS handling during caching broken.
-#970076: Remove old hook_update functions.
-#978768 by linclark: Fix notice with panel fields.
-#977296: Regions with _ such as with two column bricks would not save content.
-#987902: Fix flexible layout splitter resize brokenness.
-#967734 by das-peter and intoxination: Upgrade node_get_types() in wizard.
-#1020824: Finish fixing node template page wizard.
-Fix landing page wizard.
diff --git a/KNOWN_ISSUES.txt b/KNOWN_ISSUES.txt
deleted file mode 100644
index 6696367..0000000
--- a/KNOWN_ISSUES.txt
+++ /dev/null
@@ -1,91 +0,0 @@
-
-Known Issue http://drupal.org/node/191771
-  'Node' panes can have two titles or have two title areas.
-  Cause: 
-    Content that comes into a pane is already formatted, and this happens
-    in theme('node'). theme('node') assumes it will be printing a title
-    most of the time. However, Panels wants the titles of panes to be
-    consistent, so it removes the title from the node to prevent your
-    node.tpl.php from printing it. The result is often an empty h2 which
-    has odd effects.
-  Solution:
-    Add an if statement to your node.tpl.php to prevent printing that h2
-    if $node->title is empty.
-
-Known Issue http://drupal.org/node/186454
-  Internet Explorer is really bad about making the rightmost panel
-  fall beneath the others.
-  Cause:
-    Internet explorer calculates margins and padding differntly from
-    everyone else, and this makes it entirely too easy for widths
-    to add up to greater than the amount of allotted space, despite
-    using percentage widths.
-  Solution:
-    There are two solutions to this problem:
-    1) In your theme, try to eliminate padding from the the <div>
-       that directly contains your content; you can do this by
-       adding an empty <div> inside it that surrounds the content
-       and very specifically is set to margin: 0 and padding: 0
-
-    2) if that doesn't work, override the widths of the panel-panel
-       divs and reduce them by 1 or 2%; usually this will give IE
-       enough space to quit pushing things around.
-
-Known Issue http://drupal.org/node/154351
-  TinyMCE, FCKEditor and other wysiwyg editors really blow up on Panels
-  content editing.
-  Cause:
-    The modal dialogs that Panels uses are very particular about javascript
-    and these editors are too much for them. Also, these editors get
-    cranky about complicated forms with several text areas.
-  Solution:
-    Disable these editors on all of your panels admin pages. The important
-    URLs are admin/panels/* and panels/ajax/*. More details instructions
-    may follow if someone familiar with these systems submits a patch at
-    the above drupal.org URL.
-
-Known Issue http://drupal.org/node/180650
-  The rounded corners style shows up as just a small graphic rather than
-  a full box around the panels as it shoujld.
-  Cause:
-    The rounded corners CSS relies on the ID for the panel, but the ID is
-    optional.
-  Solution:
-    Make sure your panel has an ID of some sort. With mini panels there is
-    no easy workaround as mini panels currently do not have IDs of their
-    own.
-
-Known Issue http://drupal.org/node/165745
-  You see a message similar to this:
-  Table 'drupal.panels_info' doesn't exist query: SELECT * FROM panels_info 
-  WHERE path = 'front_page_new' in...
-
-  The important piece of information is 'panels_info'.
-  Cause:
-    The Meta Tags module (also known as nodewords.module) directly reads the
-    the panels tables and modifies its forms to add the tags. Unfortunately
-    for this module, Panels has changed *greatly* in the leap from 1.0 to
-    2.0 and the tables aren't the same. However, the nodewords module doesn't
-    yet know this. Look in the nodewords issue queue for panels patches and
-    you should find something.
-
-Known Issue http://drupal.org/node/153399
-  The drag and drop content UI doesn't seem to work at all under Safari.
-
-  Cause:
-    Safari 2 has some serious problems with the javascript code.
-  Solution:
-    Upgrade to Safari 3 if possible. If not, use an an alternative browser
-    such as Firefox or Opera.
-
-Known Issue http://drupal.org/node/207859
-  When using the secure pages module, the Panels administrative UI gives 
-  unhelpful "An error occurred" popups when trying to add or edit content.
-
-  Cause:
-    The secure pages module tries to move the entire administrative section
-    of the site to HTTPS, but Panels' AJAX calls are using a path that
-    secure pages doesn't know about. When trying to make non-secure ajax calls
-    from a secure page, the browser denies the call.
-  Solution:
-    The solution is to simply add panels/* to your Secure Pages configuration.
\ No newline at end of file
diff --git a/README.txt b/README.txt
deleted file mode 100644
index 2181b78..0000000
--- a/README.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-
-Welcome to Panels 3.
-
-A little documentation should go here, but Panels 3 is alsoi a beast - you're
-best off checking the online handbook on Drupal.org, or this issue:
-http://drupal.org/node/887560. 
diff --git a/UPGRADE.txt b/UPGRADE.txt
deleted file mode 100644
index d1a42f2..0000000
--- a/UPGRADE.txt
+++ /dev/null
@@ -1,22 +0,0 @@
-Upgrading from Panels-6.x-3.x to Panels-7.x-3.x
-
-  - Style and layout plugins may no longer be registered by a central hook.
-    Only the plugin directories method may be used.
-
-  - Layout 'panels function' is now 'regions function'.
-
-  - Layout 'panels' key is now 'regions'.
-
-  - panels_get_pane_title() deprecated.
-
-  - panels_plugin_get_function() deprecated.
-
-  - panels_required_context removed. These were deprecated long ago and 
-    existed only to prevent crashes.
-
-  - panels_optional_context removed.
-
-  - $renderer->plugins['layout']['panels'] changed to $renderer->plugin['layout']['regions']
-
-  - display_renderer class is now in 'renderer', not 'handler'.
-
diff --git a/css/panels-dashboard.css b/css/panels-dashboard.css
deleted file mode 100644
index a7efeae..0000000
--- a/css/panels-dashboard.css
+++ /dev/null
@@ -1,62 +0,0 @@
-
-.dashboard-entry .dashboard-link {
-  font-size: 120%;
-  font-weight: bold;
-}
-
-.dashboard-entry .dashboard-icon img {
-  vertical-align: middle;
-}
-.dashboard-title {
-  font-weight: bold;
-  font-size: 140%;
-  margin-bottom: .5em;
-}
-
-.dashboard-link form input {
-  margin: 0;
-}
-
-.dashboard-link form select {
-  margin: 0;
-}
-
-.dashboard-left {
-  width: 47%;
-  float: left;
-}
-
-.dashboard-right {
-  margin-left: 2em;
-  width: 47%;
-  float: left;
-}
-
-.dashboard-question {
-  margin-top: 14em;
-  padding: 1em;
-  text-align: center;
-}
-
-.dashboard-content table {
-  margin: 0;
-  width: 100%;
-}
-
-.dashboard-content {
-  padding: 0 1em;
-}
-
-.panels-dashboard .links {
-  text-align: right;
-}
-
-.dashboard-pages .page-manager-page-operations {
-  text-align: right;
-}
-
-.dashboard-block {
-  padding-bottom: 1em;
-  border-bottom: 1px dotted #ddd;
-  margin-bottom: 1em;
-}
diff --git a/css/panels.css b/css/panels.css
deleted file mode 100644
index 99552a9..0000000
--- a/css/panels.css
+++ /dev/null
@@ -1,50 +0,0 @@
-
-div.panel-pane div.admin-links {
-  font-size: xx-small;
-  margin-right: 1em;
-}
-
-div.panel-pane div.admin-links li a {
-  color: #ccc;
-}
-
-div.panel-pane div.admin-links li {
-  padding-bottom: 2px;
-  background: white;
-  z-index: 201;
-}
-
-div.panel-pane div.admin-links:hover a,
-div.panel-pane div.admin-links-hover a {
-  color: #000;
-}
-
-div.panel-pane div.admin-links a:before {
-  content: "[";
-}
-
-div.panel-pane div.admin-links a:after {
-  content: "]";
-}
-
-div.panel-pane div.panel-hide {
-  display: none;
-}
-
-/** For IE we add the class via js; for other browsers we rely on :hover **/
-div.panel-pane div.panel-hide-hover,
-div.panel-pane:hover div.panel-hide {
-  display: block;
-  position: absolute;
-  z-index: 200;
-  margin-top: -1.5em;
-}
-
-div.panel-pane div.node {
-  margin: 0;
-  padding: 0;
-}
-
-div.panel-pane div.feed a {
-  float: right;
-}
diff --git a/css/panels_admin.css b/css/panels_admin.css
deleted file mode 100644
index 78094e2..0000000
--- a/css/panels_admin.css
+++ /dev/null
@@ -1,165 +0,0 @@
-
-.layout-link {
-  float: left;
-  padding: 1em;
-  width: 125px;
-  height: 160px;
-}
-
-.layout-link img {
-  margin-left: auto;
-  margin-right: auto;
-}
-
-/* general style for the layout-icon */
-.layout-icon .caption {
-  width: 90px;
-  margin-bottom: 1em;
-}
-
-/* styles for the basic panel-%implementation% edit page */
-.layout-container,
-.right-container {
-  float: right;
-  padding: 0 0 0 .5em;
-  margin: 0;
-  width: 48.5%;
-}
-
-.info-container,
-.left-container {
-  padding-right: .5em;
-  width: 48.5%;
-}
-
-.right-container fieldset,
-.left-container fieldset,
-.layout-container fieldset {
-  margin-top: 0;
-}
-
-.layout-container .form-item {
-  margin: 0;
-}
-
-.layout-container .form-submit {
-  margin-top: 1em;
-}
-
-.layout-container .layout-icon,
-.left-container .layout-icon {
-  float: right;
-  margin-left: .5em;
-}
-
-.content-list ol {
-  padding-left: 0;
-  list-style-position: inside;
-}
-
-.content-list dt {
-  font-weight: bold;
-}
-
-.content-list dd {
-  margin-left: 2em;
-}
-
-/* styles for the choose layout page */
-.panels-layouts-checkboxes .form-checkboxes .form-item,
-#panels-choose-layout .form-type-radio,
-.panels-choose-layout .form-type-radio {
-  float: left;
-  margin-right: .5em;
-  width: 90px;
-}
-
-.panels-layouts-checkboxes .form-checkboxes .form-item .layout-icon,
-#panels-choose-layout .form-type-radio .form-item .layout-icon,
-.panels-choose-layout .form-type-radio .form-item .layout-icon {
-  float: none;
-  height: 11em;
-  width: 90px;
-}
-.panels-layouts-checkboxes .form-checkboxes .option input,
-#panels-choose-layout .form-type-radio input,
-.panels-choose-layout .form-type-radio input {
-  width: 50px;
-  display: block;
-  text-align: center;
-}
-
-.panels-layouts-checkboxes .form-submit,
-#panels-choose-layout .form-submit {
-  clear: left;
-}
-
-.panels-layouts-checkboxes .panels-layout-list label,
-#panels-choose-layout .panels-layout-list label {
-  width: 300px;
-  float: left;
-  clear: left;
-  background: url(../images/go-right.png) right no-repeat;
-  margin-right: 20px;
-}
-
-.panels-layouts-checkboxes .panels-layouts-category {
-  font-weight: bold;
-  width: 100%;
-  float: left;
-}
-
-.panels-layouts-checkboxes .description {
-  clear: left;
-}
-
-.change-layout-display .layout-icon {
-  float: left;
-}
-
-.change-layout-display > img {
-  padding: 25px 25px 25px 0;
-  float: left;
-}
-
-table .operation {
-  text-align: right;
-  padding-right: 6px;
-}
-
-table .argument-operation input {
-  padding: 0;
-  margin: 0;
-  position: relative;
-  top: 3px;
-}
-
-.panels-admin-view {
-  padding: 1em;
-  border: 1px dotted black;
-  margin-bottom: 1em;
-}
-
-tr.changed td {
-  background-color: #FFFFDD !important;
-}
-
-tr.changed td span.star {
-  font-weight: bold;
-  color: #E09010;
-}
-
-td select {
-  margin: 0;
-  padding: 0;
-}
-
-.panels-style-settings,
-.panels-style-settings-box,
-#panels-style-setting {
-  float: left;
-}
-
-.panels-style-settings-box .form-item {
-  margin: 0 1em 0 0;
-}
diff --git a/css/panels_dnd.css b/css/panels_dnd.css
deleted file mode 100644
index 530b359..0000000
--- a/css/panels_dnd.css
+++ /dev/null
@@ -1,670 +0,0 @@
-
-#panels-dnd-main {
-  margin: 0.5em 0;
-}
-
-#panels-dnd-main div.panel-region {
-  padding: 0 0 .5em 0;
-  border: 1px dashed #ddd;
-  background: #f8f8f8;
-  -webkit-border-radius: 0.333em;
-  -moz-border-radius: 0.333em;
-}
-
-#panels-dnd-main div.panel-region h2.label {
-  color: #555;
-  text-shadow: #fff 1px 1px 1px;
-  text-align: center;
-  font-size: 13pt;
-  margin: 0 0 .5em 0;
-  padding-right: 16px;
-  vertical-align: middle;
-}
-
-#panels-dnd-main div.panel-region .pane-add {
-  float: left;
-  margin: 2px;
-  background: #999;
-  border: 1px solid #fff;
-}
-
-#panels-dnd-main div.panel-region .pane-add-link {
-  position: relative;
-  display: block;
-  width: 16px;
-  height: 16px;
-  float: left;
-  margin: 2px 2px 2px 4px;
-}
-
-div.panels-set-title-hide .panels-set-title {
-  display: none !important;
-}
-
-/* Add Icon */
-#panels-dnd-main div.panel-region .pane-add-link  {
-}
-#panels-dnd-main div.panel-region .pane-add-link img {
-  display: none;
-}
-#panels-dnd-main div.panel-region .pane-add-link a.ctools-dropdown-image-link {
-  border: none;
-  width: 16px;
-  height: 18px;
-  float: left;
-  background: url('../images/sprite.png') no-repeat 0 -1178px;
-/*  background: url('../images/sprite.png') no-repeat -166px -582px; */
-}
-
-.panel-portlet {
-  padding: 0em;
-  background: #ffffff;
-  border: 1px solid #bbb;
-}
-
-div.panels-set-title-hide .panel-pane-is-title {
-  border: 1px solid #bbb;
-}
-
-.panel-pane-is-title {
-  border: 2px solid #777;
-}
-
-/* Cog Icon */
-.panel-portlet .buttons a img {
-  display: none;
-  margin: 0;
-}
-.panel-portlet .buttons a.ctools-dropdown-image-link {
-  border: none;
-  width: 16px;
-  height: 16px;
-  margin: 0 5px 0 0;
-  float: none;
-  display: block;
-  background: url('../images/sprite.png') no-repeat 0 -1178px;
-}
-
-#panels-dnd-main .panel-pane,
-#panels-dnd-main .helperclass {
-  margin: .5em;
-}
-
-#panels-dnd-main-form .inline-icon-help {
-  vertical-align: middle;
-  margin: 2px 1px;
-}
-
-.panel-pane.hidden-pane {
-  background: #f8f8f8;
-}
-
-.panel-portlet .pane-content {
-  margin: .5em 0 .5em 0;
-  padding: 0 .25em 0 .25em;
-  display: none; /* initially hidden */
-}
-
-.panel-portlet .grab-title {
-  width: 100%;
-  height: 20px;
-  margin: 0 0 0.5em 0;
-  overflow: hidden;
-  background: #b3b3b3;
-  color: #fff;
-  text-shadow: #555 1px 1px 1px;
-  border-color: #999;
-  font-weight: bold;
-}
-
-.panel-portlet .grabber {
-  cursor: move;
-  background: #b3b3b3 url('../images/bg-shade-medium.png') repeat-x 0 100%;
-}
-
-.panel-portlet.hidden-pane .grab-title {
-  background-color: #888;
-}
-
-.panel-portlet .changed div.grab-title {
-  background-color: #FFFFDD !important;
-  border-bottom: 1px solid #3D9CD7 !important;
-  color: black !important;
-}
-
-.panel-portlet .changed.hidden-pane div.grab-title {
-  background-color: #B4B488 !important;
-  border-bottom: 1px solid #3D9CD7 !important;
-}
-
-.panel-portlet .changed div.grab-title span.star {
-  font-weight: bold;
-  color: #E09010;
-}
-
-.panel-portlet .grabber:hover {
-  color: #fff;
-  background-color: #2F78A5;
-}
-
-.panel-portlet.hidden-pane .grab-title:hover {
-  background-color: #666;
-}
-
-.panel-portlet .grabber:active {
-  background-color: red;
-}
-
-.panel-portlet .grabber:hover,
-.panel-portlet .grabber:active {
-  background: #858585 url('../images/bg-shade-dark.png') repeat-x 0 100%;
-  color: #fff;
-  text-shadow: #333 1px 1px 1px;
-  border-color: #858585;
-}
-
-.panel-portlet .grab-title .text {
-  margin-left: 3px;
-  font-size: 90%;
-  line-height: 20px;
-}
-
-.panel-portlet .buttons {
-  float: right;
-  padding: 0;
-  margin: 0;
-}
-
-.panel-portlet .buttons input {
-  margin: 0;
-  padding: 0;
-  display: inline;
-}
-
-.panel-portlet .buttons a img {
-  margin: 2px 1px;
-}
-
-.panel-portlet .pane-title {
-  font-size:110%;
-  cursor: pointer;
-}
-
-.panel-portlet .panel-pane-collapsible {
-  margin: 0;
-  padding: 0;
-}
-
-.panel-portlet .toggle {
-  float: left;
-  width: 21px;
-  height: 21px;
-  cursor: pointer;
-  background: url('../images/sky.png') no-repeat 6px -245px;
-}
-
-.panel-portlet .toggle-collapsed {
-  background: url('../images/sky.png') no-repeat 6px -1021px;
-}
-
-/* CSS to guide a user to a place to drop */
-#panels-dnd-main .helperclass {
-  border: 1px dashed red;
-}
-
-#panels-dnd-main .hoverclass {
-  border: 1px solid red !important;
-}
-
-/* CSS for an area if something can be dropped in it */
-.panels-modal-content {
-  background: #fff;
-  color: #000;
-  padding: 0;
-  margin: 2px;
-  border: 1px solid #000;
-  width: 600px;
-  text-align: left;
-}
-
-.panels-modal-content .modal-title {
-  font-size: 120%;
-  font-weight: bold;
-  color: white;
-  overflow: hidden;
-  white-space: nowrap;
-}
-
-.panels-modal-content .modal-header {
-  background-color: #2385c2;
-  padding: 0 .25em 0 1em;
-}
-
-.panels-modal-content .modal-header a {
-  color: white;
-  float: right;
-}
-
-.panels-modal-content .modal-content {
-  padding: 0 1em;
-  overflow: auto;
-  width: 575px;
-  height: 400px;
-}
-
-.panels-modal-content .modal-form {
-}
-
-.panels-modal-content .form-checkboxes .form-item {
-  float: left;
-  width: 24%;
-}
-
-.panels-hidden,
-.panels-js-only {
-  display: none;
-}
-
-a.close {
-  color: white;
-}
-
-a.close:hover {
-  text-decoration: none;
-}
-
-a.close img {
-  position: relative;
-  top: 1px;
-}
-
-.panels-section-title {
-  clear: left;
-  border-bottom: 1px solid #ddf;
-  margin-bottom: .5em;
-  text-align: left;
-}
-
-.panels-section-decorator {
-}
-
-.panels-add-content-modal .panels-modal-add-category {
-  display: block;
-  border-bottom: 1px solid white;
-  padding-left: .5em;
-  margin-left: -2px;
-  position: relative;
-}
-
-.panels-add-content-modal .panels-modal-add-category.active {
-  background: url(../images/arrow-active.png) center right no-repeat white;
-  border-right: none;
-}
-
-.panels-add-content-modal {
-  background: url(../images/bg-content-modal.png);
-  height: 100%;
-  margin: -1em;
-  padding-top: 1em;
-  padding-left: 175px;
-  position: relative;
-}
-
-.panels-section-columns {
-  height: 100%;
-  overflow: auto;
-}
-.panels-section-column {
-  width: 48%;
-  float: left;
-}
-
-.panels-section-column .inside {
-  padding: 0 1em;
-}
-
-.panels-section-column-categories {
-  width: 173px;
-  margin-left: -173px;
-}
-
-.panels-categories-description {
-  padding: 0 1em;
-  text-align: center;
-  vertical-align: center;
-}
-
-* html .panels-section-column-categories {
-  left: 173px;
-  position: relative;
-}
-
-.panels-section-column-categories .panels-categories-box {
-  border-top: 1px solid white;
-  margin-bottom: 1em;
-}
-
-.panels-section-column-categories .inside {
-  padding: 0;
- }
-
-.panels-section-column-categories .content-type-button {
-  padding-left: 10px;
-}
-
-.panels-modal-add-category {
-  color: #5b5b5b !important;
-  font-weight: bold;
-  line-height: 2em;
-}
-
-.panels-section {
-  margin-bottom: 1em;
-}
-
-.panels-section-column .content-type-button {
-  font-size: 8pt;
-  line-height: 1em;
-  overflow: hidden;
-  text-align: left;
-}
-
-.content-type-button img {
-  border: 2px solid white;
-  float: left;
-}
-
-.content-type-button img:hover {
-  border: 2px solid blue;
-}
-
-.content-type-button div {
-  width: 85%;
-  top: -5px;
-  left: 2px;
-  float: left;
-  padding-left: 3px;
-  padding-top: 5px;
-}
-
-#panels-preview .modal-throbber-wrapper {
-  width: 100%;
-  text-align: center;
-  margin-left: auto;
-  margin-right: auto;
-}
-/** modal forms CSS **/
-.panels-modal-content .form-item label {
-  width: 8em;
-  float: left;
-}
-
-.panels-modal-content .form-item label.option {
-  width: auto;
-  float: none;
-}
-
-.panels-modal-content .form-item .description {
-  clear: left;
-}
-
-.panels-modal-content .form-item .description .tips {
-  margin-left: 2em;
-}
-
-.panels-modal-content .no-float .form-item * {
-  float: none;
-}
-
-.panels-modal-content .modal-form .no-float label  {
-  width: auto;
-}
-
-.panels-modal-content .modal-form fieldset,
-.panels-modal-content .modal-form .form-checkboxes {
-  clear: left;
-}
-
-#edit-configuration-nid {
-  clear: left;
-}
-
-.option-text-aligner .form-item {
-  float: left;
-  padding: .25em 1em .25em 0;
-  margin: 0;
-}
-
-.option-text-aligner {
-  clear: both;
-  width: 100%;
-  padding: 0;
-  margin: 0;
-}
-
-
-#panels-dnd-main div.panel-pane div.ctools-dropdown-container-wrapper {
-  margin-left: -158px;
-  margin-top: -4px;
-}
-
-/*
-html.js div.panels-display-links div.ctools-dropdown-container {
-  width: 275px;
-}
-
-html.js div.panels-display-links div.ctools-dropdown-container ul li li a {
-  width: 250px;
-}
-
-html.js div.panels-display-links div.ctools-dropdown-container ul li a {
-  width: 270px;
-}
-*/
-
-#panels-dnd-main .panel-pane .pane-title {
-  padding: 0.25em 0.5em;
-}
-#panels-dnd-main .panel-pane .pane-title:after {
-  font-size: 0.8em;
-  color: crimson;
-  letter-spacing: normal;
-  display: block;
-}
-#panels-dnd-main .panel-pane.hidden-pane .pane-title:after {
-  content: " status: hidden";
-}
-#panels-dnd-main .panel-pane.changed .pane-title:after {
-  content: " status: changes not saved";
-}
-#panels-dnd-main .panel-pane.hidden-pane.changed .pane-title:after {
-  content: " status: hidden & changed";
-}
-
-/* @end */
-
-
-/* @group CTools Dropdown */
-#panels-dnd-main .ctools-dropdown a.ctools-dropdown-text-link,
-html.js div.panels-display-links a.ctools-dropdown-text-link {
-
-  background: url('../images/arrow-down-light.png') 0 3px no-repeat!important;
-  padding-left: 12px;
-}
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container,
-html.js div.panels-display-links div.ctools-dropdown-container {
-  width: 160px!important;
-  background: #fff url('../images/bg-shade-white-lrg.png') repeat-x 0 100%;
-  border: solid 1px #ddd!important;
-  margin: 0!important;
-/*  padding: 0.5em!important; */
-  -webkit-border-radius: 0.333em;
-  -moz-border-radius: 0.333em;
-  -webkit-box-shadow: 0.333em 0.333em 0.333em rgba(0, 0, 0, 0.25);
-  font-size: 0.9em;
-  font-weight: bold;
-}
-
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li,
-html.js div.panels-display-links div.ctools-dropdown-container ul li {
-
-  text-decoration: none;
-  padding: 0;
-  margin: 0;
-  color: #555!important;
-  text-shadow: #fff 1px 1px 1px;
-}
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li span.text,
-html.js div.panels-display-links div.ctools-dropdown-container ul li span.text {
-  font-style: normal;
-  color: #000;
-  font-weight: bold;
-}
-
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li a,
-html.js div.panels-display-links div.ctools-dropdown-container ul li a {
-  color: #555!important;
-  font-weight: normal;
-  width: auto;
-  padding: 0 10px;
-}
-
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li span.panels-text,
-html.js div.panels-display-links div.ctools-dropdown-container ul li span.panels-text {
-  width: auto;
-  padding: 0 10px;
-}
-
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li .panels-italic,
-html.js div.panels-display-links div.ctools-dropdown-container ul li .panels-italic {
-  font-style: italic;
-}
-
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li span.dropdown-header,
-html.js div.panels-display-links div.ctools-dropdown-container ul li span.dropdown-header {
-  background-color: #fefefe;
-  padding: 0 10px;
-}
-
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li .panels-sub-menu ul li a,
-html.js div.panels-display-links div.ctools-dropdown-container ul li .panels-sub-menu ul li a,
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container ul li .panels-sub-menu span.panels-text,
-html.js div.panels-display-links div.ctools-dropdown-container ul li .panels-sub-menu span.panels-text {
-  width:auto;
-  padding: 0 20px;
-}
-
-html.js #panels-dnd-main div.ctools-dropdown div.ctools-dropdown-container hr,
-html.js div.panels-display-links div.ctools-dropdown-container hr {
-  border: 0;
-  color: #ddd;
-  background-color: #ddd;
-  height: 1px;
-}
-
-/*
-html.js #panels-dnd-main  div.ctools-dropdown div.ctools-dropdown-container ul li a:hover,
-html.js div.panels-display-links div.ctools-dropdown-container ul li a:hover {
-  background: none!important;
-  color: #000!important;
-}
-*/
-/* @end */
-
-/* @group Modal */
-/* Account for the extra div coming from ctools_modal_form_render() */
-div.messages div.messages {
-  background: none;
-  border: none;
-  margin: 0;
-  padding: 0;
-  -webkit-border-radius: 0;
-  -moz-border-radius: 0;
-}
-div.ctools-modal-content .modal-header {
-  background: #fff url('../images/bg-shade-light.png') repeat-x bottom left;
-  color: #777;
-  display: block;
-  font-weight: 700;
-  letter-spacing: normal;
-  padding: 0.25em 1em;
-  -moz-border-radius-topleft: 0.5em;
-  -moz-border-radius-topright: 0.5em;
-  -webkit-border-top-left-radius: 0.5em;
-  -webkit-border-top-right-radius: 0.5em;
-}
-div.ctools-modal-content .modal-title {
-  font-size: 120%;
-  font-weight: bold;
-  text-shadow: #fff 1px 1px 1px;
-  color: #555;
-}
-div.ctools-modal-content a.close {
-  color: #666;
-  font-weight: normal;
-  padding-left: 1.6em;
-  background: url('../images/sprite.png') no-repeat -166px -1686px;
-}
-div.ctools-modal-content a.close img {
-  display: none;
-}
-/** modal forms CSS **/
-div.ctools-modal-content .form-item label {
-  width: 100%;
-  float: none;
-  clear: both;
-}
-div.ctools-modal-content .resizable-textarea {
-  width: 100%;
-  margin-left: 0;
-  margin-right: 0;
-}
-div.ctools-modal-content {
-  font-size: 12px;
-  border: solid 1px #ddd;
-  -webkit-border-radius: 0.5em;
-  -moz-border-radius: 0.5em;
-  -webkit-box-shadow: -1em 1em 1em rgba(0, 0, 0, 0.5);
-}
-#modalBackdrop {
-  position: fixed!important;
-  background-color: #000!important;
-}
-/* @end */
-
-
-/** Override that obnoxious float on throbber. **/
-#panels-dnd-main .progress-disabled {
-  float: none;
-}
-
-#panels-dnd-main .progress-disabled + .ajax-progress {
-  float: right;
-  position: relative;
-  top: -2em;
-}
-
-/** Override that obnoxious float on throbber. **/
-.panels-categories-box .progress-disabled {
-  float: none;
-}
-
-.panels-categories-box .progress-disabled + .ajax-progress {
-  float: right;
-  position: relative;
-  top: -2em;
-  margin-bottom: -2em;
-}
-
-.panels-section-columns .progress-disabled {
-  display: block;
-  float: left;
-}
-
-.panels-section-columns .ajax-progress .throbber {
-  float: right;
-  position: relative;
-  top: -2em;
-  margin-bottom: -2em;
-}
-
diff --git a/css/panels_page.css b/css/panels_page.css
deleted file mode 100644
index 1d731b9..0000000
--- a/css/panels_page.css
+++ /dev/null
@@ -1,14 +0,0 @@
-
-div.panels-page-type-container {
-  clear: left;
-}
-
-div.panels-page-type-container .form-checkboxes .form-item {
-  float: left;
-  width: 15em;
-}
-
-#panels-page-settings .form-submit {
-  display: block;
-  clear: left;
-}
diff --git a/help/display.html b/help/display.html
deleted file mode 100644
index e69de29..0000000
diff --git a/help/pane.html b/help/pane.html
deleted file mode 100644
index e69de29..0000000
diff --git a/help/plugins-style.html b/help/plugins-style.html
deleted file mode 100644
index e69de29..0000000
diff --git a/images/arrow-active.png b/images/arrow-active.png
deleted file mode 100644
index 3bbd3c27f29f9a1781276a2ae8faa7afd5d2d36e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 313
zcmeAS@N?(olHy`uVBq!ia0vp^96-#^!3-qdU8!RPQY`6?zK#qG*KS<#k1zuAB}-f*
zN`mv#O3D+9QW+dm@{>{(JaZG%Q-e|yQz{EjrrH1%xd!-zxO#bc1qB6pdwbu!dGq1J
zhmRgT^6~LGa^%RaUAy+}+xPF^zmq3VUc7kG&(CkurcE0*Y)DB-@%Q&XfByW98#g9T
zp6u!A`Tzg_bT_}9Km)5hT^vIyZY2pcGc_<I2_&}~FfesE`n2$$Vc<|uXl@if0-~L#
z^h%!qG6bAMCb;|XC^Q`433N*{Y+z_IaADoSz{H`Yq{AlQkifQn!VC!qhDHgWHx983
zj4Vd&%qe^h42+V05+*YO&Fx`L5_e!QJdnfAVZe~s&&gJHVR;YG6%3xPelF{r5}E+C
CwQPt0

diff --git a/images/arrow-down-light.png b/images/arrow-down-light.png
deleted file mode 100644
index f011ac69211aa7800f21914bdf780d8f1f589283..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 271
zcmeAS@N?(olHy`uVBq!ia0vp^96-#;!VDz;))vSDDdu7)&kzm{j@u9Y9{{-$0X`wF
z|NsBri4ELOE6)L{;V2363uZ8ONh{xd_kY)dU!Q<toCO|{#S9EwA3&JVX^qJYprA~N
zYeY$Kep*R+Vo@rCV@iHfs)Ac)QEGX9QFgI{bFlG@Yi=N?h=SBP7o{eaWaj57gk<KX
zGMMNa8R;8Xx|php0Tmc}x;Tb#%uEgl3JOZ$(AU>b4A9s2Pe{<!H%~~=(oarE;Lv9i
ldd2C`bd|xwz{r4s;rvN<|EAT+Yk`^>JYD@<);T3K0RS5@R>uGU

diff --git a/images/bg-content-modal.png b/images/bg-content-modal.png
deleted file mode 100644
index 600d074c37e7adc1749bfae322e26f87f0d2507b..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 156
zcmeAS@N?(olHy`uVBq!ia0y~yU<EQ67&(}M<hHoa$AJ_}x}&cn1H-i&SNtQ4fPBdk
z*NBqf{Irtt#G+IN$CUh}R0Yr6#Prml)Wnp^!jq{sKt-GZJ|V8RZrytQ`t`40zcz2x
zwgu_*ba4!+xRsP36V%X{DbmvvXu!3Cm4S(e;d(M>V9Jz<AmbT4UHx3vIVCg!06Ot7
A1ONa4

diff --git a/images/bg-shade-dark.png b/images/bg-shade-dark.png
deleted file mode 100644
index 1be36f2d3d89417f3f725546e5ee165b238dfdf7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 220
zcmeAS@N?(olHy`uVBq!ia0vp^Ahrev8<0F6mfZlPSc;uILpXq-h9ji|$mcBZh%9Dc
z;1&X5#!GkW{s0AKN?apKg7ec#$`gxH85~pclTsDjGK*5n^NX^J6`X^OXIyh*2C5SU
zsdFw$O)SaG&r=A=%uQu5*EcfLH?Zj4F~bX}z|_;lF~p)bIVU&w?|BE71SK~?W*|8I
z|G$f*g_ExgR~Wyxd0$oAxv>6S6VIsy-OqZpTacmNB;d$Vy=U=20~kDA{an^LB{Ts5
DSj#`4

diff --git a/images/bg-shade-light.png b/images/bg-shade-light.png
deleted file mode 100644
index ad7167b976c2c9841304120c090a7e942eb0a643..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 216
zcmeAS@N?(olHy`uVBq!ia0vp^Ahrev8<0F6mfZlPSc;uILpXq-h9ji|$mcBZh%9Dc
z;1&X5#!GkW{s0AKN?apKg7ec#$`gxH85~pclTsDjGK*5n^NX^J6`X^OXIyh*2C5SU
zsdFw$O)SaG&r=A=%uQu5*EcfLH?Zj4F~bX}z|hmhF~p)b`Op9V|LfV57=#VGB!D2I
y!=#{PmPMB7T+zO&v<+G^Gc{{8M1roE3o_W-1sQ#PzU?4TGlQqApUXO@geCxQZ9Px`

diff --git a/images/bg-shade-medium.png b/images/bg-shade-medium.png
deleted file mode 100644
index e4b39fe93c4ef9a16e6077437be69bfdfd8e46a4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 221
zcmeAS@N?(olHy`uVBq!ia0vp^Ahrev8<0F6mfZlPSc;uILpXq-h9ji|$mcBZh%9Dc
z;1&X5#!GkW{s0AKN?apKg7ec#$`gxH85~pclTsDjGK*5n^NX^J6`X^OXIyh*2C5SU
zsdFw$O)SaG&r=A=%uQu5*EcfLH?Zj4F~bX}z|7OdF~p)b`Ocoo&-H9d45$D9cUhU7
zpyVa$>$7CvRpuA37bbk&Q1p03`iq>e0R@jYY^q}LWntLQ7wETUUqTVk1O`u6KbLh*
G2~7aaTSd|U

diff --git a/images/bg-shade-white-lrg.png b/images/bg-shade-white-lrg.png
deleted file mode 100644
index 842e5f7ff54658442e4449ca7aa1c3d419518e1c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 214
zcmeAS@N?(olHy`uVBq!ia0vp^j0_CS3LI=e)+1hyb|A%4?Bp530R%N1DIGvQXMsm#
zF#`j)5C}6~x?A@LC@50m8d2h0l$uzQnV+W+l9`*zV4-iSZ(za95p4&QmjTHK=ckpF
zCl;kLIHu$$r7E~(7NwTw7iAYKI0qZgxaP(TRA=Dn;uzx5`Sy$>8-sxW^MM!t|Ie{o
z@Fi%P(e#M|p10Sj0G-Fc@PPf6+{?J*W&G^Y^Ox9iY@7aK8A#aE)z4*}Q$iB}75+S^

diff --git a/images/blank.gif b/images/blank.gif
deleted file mode 100644
index 75b945d2553848b8b6f41fe5e24599c0687b8472..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 49
zcmZ?wbhEHbWMp7unE0RJ|Ns9C3=9Vj8~~DvKUo+V7?>DzfNY>Fh|Ltj$Y2csQN9XW

diff --git a/images/close.gif b/images/close.gif
deleted file mode 100644
index 46891b0c0d4871eb17b8e71690f42c6eae76bd7c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 949
zcmV;m14{fyNk%w1VGsZi0QVjMc_%0Kw6y${mDoEw@n2tsFE461IR4n!n2e0rR#yMX
z$zMM|dPYWzTwIfFZT)3s{-&nwcXwGD8vbf(>vVM2RaO6Zc;;$qXF@{MQ&ZkvUg&Rc
z;bUX}|NsC0{~sS8ARr(iAt53nA|oRsBqSsyB_$>%CMPE+C@3f?DJd!{Dl021EG#T7
zEiEoCE-x=HFfcGNF)=bSGBYzXG&D3dH8nOiHa9mnI5;>tIXOByIy*Z%JUl!-Jv}}?
zK0iM{KtMo2K|w-7LPJACL_|bIMMXwNMn^|SNJvOYNl8jdN=r*iOiWBoO-)WtPESuy
zP*6}&QBhJ-Qd3h?R8&+|RaI72R##V7SXfwDSy@_IT3cINTwGjTU0q&YUSD5dU|?Wj
zVPRroVq;@tWMpJzWo2e&W@l$-XlQ6@X=!R|YHMq2Y;0_8ZEbFDZf|dIaBy&OadC2T
za&vQYbaZreb#-=jc6WDoczAeud3kzzdV70&e0+R;eSLm@et&;|fPjF3fq{a8f`fyD
zgoK2Jg@uNOhKGlTh=_=ZiHVAeii?YjjEszpjg5|uj*pLzkdTm(k&%*;l9Q8@l$4Z}
zm6ev3mY0{8n3$NEnVFiJnwy)OoSdAUot>VZo}ZteprD|kp`oIpqNAguq@<*!rKP5(
zrl+T;sHmu^si~@}s;jH3tgNi9t*x%EuCK4Ju&}VPv9YqUva_?Zw6wIfwY9dkwzs#p
zxVX5vxw*Q!y1To(yu7@<y}iD^zQ4b}z`(%4!NJ19!o$PE#KgqK#l^<P#>dCU$jHda
z$;ryf%FD~k%*@Qq&CSlv&d<-!(9qD)(b3Y<($mw^)YR0~)z#M4*4Nk9*x1<F+1c9K
z+S}XP+}zyV-QC{a-rwKf;Nall;o;)q;^X7v<mBY#<>lt)=I7_<=;-L_>FMg~>g((4
z?Ck9A?d|UF?(gsK@bK{Q@$vHV^7Hfa^z`)g_4W4l_V@Sq`1ttw`T6?#`uqF){QUg=
z{r&#_{{R2~A^8LW0015UEC2ui01yBW000P*06hpCNU&f*1_%;5aKONzzy=2tD1acK
zVgZ8?BSfG;VZ(+C7A_9Na6ltRj~6a*upnV%0FM7W4*17mr2&^7H~gDvq2`2}0x<+g
zd4Xq54HH@h9m;{{KMhcmx~%!n0@SBSm3qJ+pn})06%u5SI&eV*u^G~)odCd~*#`vT
X5_r(op@9Mb@)pqQu&>|00RaFzB$Vwz

diff --git a/images/delete.png b/images/delete.png
deleted file mode 100644
index f790555163b1abcad7e350282a47ef8f77d8ec4a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 795
zcmV+$1LXXPP)<h;3K|Lk000e1NJLTq000jF000jN0ssI2w6p>p00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU!tw}^dRCwBA
zRBb=P00#g6{Qmdj^S`ej{{8s+|L<=`W>zK+ZYFL4CJtUk7FLKFfB<3vEBycO*Z1GA
z9=NCq+B@s%Da*);@I8L>>C)XN2QS{<bNdCWm;w_UCj%oRKmY(P0MY*g6GUSE`SuO+
z;AcT9W==j65fS(O0qOMm{{aIY7ZXG>CJ+Ps*xK9q1PcKK1_Fo$=zw1@?!>w4x?348
zJOA?Z<Bv~1{`~Uu4-Y$w3_rW6EPtStA<*{zotN2Vv;YE#<?okwj!Jw1cE&)Z7oUB8
z^x?<%U;qC7XZZT_FObc~%mj34l%4T~+Yb-Fdj}9eOuyehcQ91{^6TH(C!a#}#5W`w
z@Nuv(GB5y1AR8!h{^=*6EKm(lB|rc%{rT|1P)+gcufLB!{OCLMP>7RtYl@+a00)o+
zvVkJcKK%sB0@VOj0t67#-|wGggn57e`~UgppZDK>+fF?#!p*uj!x%^c*+7wZ-+lvS
zfogy%0Rjl*tS4_ivNAF9va<+su^!Ggee?CV^Nh1V637OM0L6i_Ks7*>00G3r%*lK9
z+HGz&W?2D_B0Kqa-+z10Isg3APap|o14V%1Kv|#~ph|!M04@O0{{s*^R{ZMUNj^61
z_WZxx?v}>m_4)n%|Nr~_|E<&M==1t98xAuZ4V$O0<Ny%@h>2BDa_7m5tG4b5)D_d0
z;*|rM#Lmpb$N(gPY@i5G94HG^15^nRKrGBWLOkl0vzDy^Mt_u#o1eBQFa&_!0=gCG
z03J4`m0NbrUcL^f2B;Ds001rk(f<PzMr8sB4f*{5y|b?0;NA!a2Oby`BNPnw_x8)q
z(V3y7psck6BR2;eDFOxv0*Dcm24Sh{`~3?)Ufc!7?*HGv7+HZP3voy&b1E9ZQx!mf
Z0RZ@8JcPSSYES?G002ovPDHLkV1m$VXV(A#

diff --git a/images/go-down.png b/images/go-down.png
deleted file mode 100644
index c2def1a3124f8aa309bdcd7a0b3aef6c191b4616..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 583
zcmV-N0=WH&P)<h;3K|Lk000e1NJLTq000jF000jN0ssI2w6p>p00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBUz*-1n}RCwBA
zRBb=PKr{ddAQoiK|G$6!|NQp<?{5f~k(rf|or{qfp#~s;P*wl@cC6Hi;s1XS``;fR
zY0<isML+_s0U&_T%>E5jy8qq>Ap76<&rTZRf8IS~=Hz4K;)5sv2p}e`?tAs+HzNxh
z10xgA2Drn303d+CX8-&9@AuFDzkf3G3d1EBS=kwxnEw6w^Y`lqMmA0+R(1v^W`F=<
z1cu4~KflWDr2Gu!8U8Z>odGl$qCuR8#ZHbJ$k=k>QTzUf%$&Rc0R(ahBNOw~{kQo!
zSe}0T{^9!{xbg2ke}DSnyAUr|-`f5Ee}4V{?=L_Af!)o-{Dq0jyLX$86rYAD2MZG;
zP>h-3uckP+p1g=h%gV2e96-ka4Fw1wCb%mf{NzlYwa;2nNKSx_@!xMbepXvm@uZo1
z?tf-r5s+l!<O3QC5I~49VPfYx_VVA9T^HTdghe?R+%+X8?YMCG_A4e%UM3D6NRR^r
z5K4G6v2#y3{#;R%&)-0P+xdGFc3lRl11V);g(v_BAk^??WMtytE!uGX#GRM<i;n<p
z14Rum;9&qDfEcl)Dq!$~Qwt+22NN47&<MB;Kmf5|iAg4ApzXkf0t{MYr9c1>U;x>!
Vn7*K!4;=si002ovPDHLkV1j|X0;~W4

diff --git a/images/go-right.png b/images/go-right.png
deleted file mode 100644
index dd6058c8652f419bbef9f6c3259c080bcf6ab364..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 392
zcmV;30eAk1P)<h;3K|Lk000e1NJLTq000mG000mO0ssI2kdbIM0003`Nkl<Zc$}4z
z+fKqj5Qb-VOCuUQAc@h$H04T6)TrPs4}cHEBj5w^6y6wPun0*BCk+-U2itCoj2D!O
zP@6cHyZ<-y&*VoUg5RYUN&ujjix5^U^fkc#0VEPz>h0Y+77if7P4+aE+(yI|28n3B
zjU40od=6;#tm&PuK}5kyK5&)0;0!rKi8IcSF|@?gcE1jjn~g@hTJOMu@hvfi6K6WK
zy#849hR)l-9$B6@opp`Rw0eAbmWG8lX$}bC+Li|h1O$KpfPer52rn)7Ts`oF_f&1F
zg^~|AjythL==K?9-{_l_dK&=ra#0HYQakaO#3asQoN<mHBWExcC(52<TlWt&n)y5U
zKuxP723>JOmb2HH)Nb4~$Bz{qmag<OA&3YO*+NJhd+(-JYb~q&v#$7_Uqe-n^yce|
m8X}?*s*VCe)sYkai1#<Kl&?5mP^JO^0000<MNUMnLSTZJzNkI`

diff --git a/images/go-up.png b/images/go-up.png
deleted file mode 100644
index a52c7dcb66d2be7169372a149058892482eccc6c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 566
zcmV-60?GY}P)<h;3K|Lk000e1NJLTq000jF000jN0ssI2w6p>p00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBUz$Vo&&RCwBA
zRBb=PKr{ddASNtg|Nk@m`wJp506+jSVJiLq=hy5IjekGBfb^gOfB<5`RN5D$W1%SA
z=co4f+b4#9|B&SY0tiL*|G&R;?UlSVMK@l3<*6^9Z7KQp$7f_G0R#{elF~mm$|5<o
z3OjDRe*N{&&YN%YJPfTQnE(C!3ReRVKumC@Dk5BS!gUVcef#LcuYdm;9)J9O^!~ef
z=`ITFKmPsv22lnOKw#DX{__0)zA@S8;?qwzUVs1d4`elvy#D;trH5~}m3VXieE0wN
zPoN+`0D)Bh|MxfBPVxPh?^4{10-P*xm+`YR$%^p4`}{4-PU-L04?sf!0*Db5JOBRv
z{r>sShZn!zKD{u#<iPz;ufF^i<79A95jHJf`2WvO21X`UK?!C)QGfsfo5aM-%*o5h
z!p6wV%D~77HTvH_AQNaUi=ZSEJ2xXMJ0lY_Kmft)WnyMx=VIm-0NV5K`)5&hHekR5
zH8A}B&BVsZ%p(X<1rR_i$l(n#n}NYeLmX%|)CSbJ1PCBh)$Cjrty}-Rd-ng|A4Vn?
zpi*WI9*7YT01!ZEX0xyeNHBBq0V5S|8_)>20)PMm0D7^x;l*wRI{*Lx07*qoM6N<$
Ef?8?-MgRZ+

diff --git a/images/icon-addcontent.png b/images/icon-addcontent.png
deleted file mode 100644
index 788d01ff2574383caf22d8e553949fe3c4b95468..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 818
zcmV-21I_%2P)<h;3K|Lk000e1NJLTq000mG000mO0{{R3C@l|D00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBUzn@~(tMgIQ(
z|NsA(nVGe=w)y@4`2GL-{r~>||M~v^v)}yQ;^WNg|IY0H`~Ls={Qj4_(XiV0?EL>D
zYL%C|(L;cw$Ljx~#nB#RlD4<E{r>;@{Qu+Q<M;gk`~3g+`~Ah}|Cqbc_Wb`ecAx-C
zc=`MM2}*R<?){d$(ZJ^Z^!)!ee5Vyyfe2ZL_5A;`;QTg)wbk|i3R#FAVv6eW`K6_$
z_51$e`v2JQ|2ue`#n<D`+T*?I{25({%IW<QScSso{pj)ewBY^y{r>v?|LpMf!Q}hH
z<N5ab{jJ{qt<mY~@AdKc`{VHWm%P#M`1|<#{p$Pw#N_($`1?0}r?k-H2~2b4`2Y0w
z`7(B(>iqvJZ<srFoETk**7pCTrKJERP2%?dvEcjwBTL}q<^BEr>GuD>>HMqQ`x97&
z|Nj2p;^P26W%2p_0ZVz{^Zx)nW%~O1!RP-ygRb@Y{*J7`;QRj`V~XqZ`R@GvJA|(l
zS%IX?;_vzY^!NF`=>IBim^Op8yVK*-)6>@O|M2|(lDN^9n3|Ki)6UV;XTw~O0003U
zNkl<Zc-ms%V`o4D?0f(L#K6ca#m2@a%g87Tq@<ji00M|Xl7oeXg_TiLhLIJ>NR|Ky
zAO;2w5Z_e4p%^G4$Hfc~Kp+8DMaG<>N<T(LR-gbt009M98G#^J3q<;JF#`k;0|PIk
zOc0}SgpvcJw|hz!Ge7__Ffi&GiVM|?h(rmA>y%3~0|XGz>Y7|T8zYP8vX~5IA8BTQ
z0AgTBZBYq#a;ehx%B(G@uwn)XAO?m!^8i8iuu#<mcELzBOJ;xoVqj?I=HWIA%+7Z!
z<>s+%WCjQz1_qu&QF#OV_$1d@c~OlJ34j1%kgW6I<V;Kx5U|$cbWE>i1_&SqM$dKy
weqnVnF<)VRh1L=ifB<6Xh+{$qZ2$oV03`h<cv<UXFaQ7m07*qoM6N<$f)X&rwEzGB

diff --git a/images/icon-cache.png b/images/icon-cache.png
deleted file mode 100644
index 3e6f46b3fb5586a57d939939536f484a67dcda19..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1001
zcmV<F0~Y*=P)<h;3K|Lk000e1NJLTq000mG000mO0{{R3C@l|D00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU!G*C=bMgRZ*
z_xt^nn3|KAn*06!uCulL{r>g({IImP`1}3z`TX|#{r&#_ud}s2d7AnB{z!wTQH`%g
zfTiyC`}h3+Q<1mz`u$atw+=#RL3*7AC{p(N{Qm#{^!of+les;4oLiW`OOU!zjj>UV
zu}OrhkGj?R`}{t3l%C1t#O(hfYnG?X)9m#6B3*wVU4<N5fGKB>BWRQeHfG1t)G>FW
zey`3yhqMhtX!!mACu4-d?Ek33)B61Wkh;}Gjkomr{Tf<^01+({RDV5!tP)FdF>#pz
z8A29Sd@XB^(eU~oUy04#;k44#7FK~ukh+z^)%N`Vv9-6A!{GY-{jbpDj=$cDq_&{J
z)w<>X4@GY7_4(iB=J@;nu-^Zs%+sT#rn&0=JB+#zMQ#l_VIp0DuHgPjh^wK^)wSdQ
zJa?KrhPEbLh{es)v*G?ljJG>?nm~S`q1pdHe4#sam^yQo_4)jJug$^O=^<Q!G;frF
zx!NjckE-4Ngtpc5`TP-0aXEIL`ThSbY?45Mr!QxU7h#R&`u_<;Yxes6`v3n4EK&z8
zVE6j`2tjW7`~07yr7?%SG;Wdl`~B(e@vP3(4JJ&4x!hTpy&YeOs>j$^lDU<bn#Ak>
z<>lp%mz+M0z)6LxDrJfVE?psGj`sQceyz)Fq{c>*yz1-g*WKa6!^6k!|5cN_9aM&&
z%j6zji!5S-b)B>fO>d01)hK3+uClc=dZ_&V|0iUK5l(SSi?hzq(HAvBhyVZqJ4r-A
zRCwBA5awj;kd>8YWaMT90#0Fo0AgSfn-;3EE~u)GAwWc=lVLYN05P!7*I@txu?gE5
zWMpEZ0|5evfqi*M4;v3>c_Kf*JqyEJ4uAk+V4t3q=cj0Arch?OblIAf8~_2tz`jdd
zPE>T3xHB72W7Jw+fB<4BZBA1X6jWYd!o$Y4WTpcvKmajtH53R42?-Rr2Cp~NYTdyK
z5I_uE+47Qne3JRTlNL8+7Q3?o1Q3JtM57r7)n45teNG;gTU=NH0*HZ;D{Mnjq^`Bv
z#@?2NdJ?Pv0mQ()+M>~hg=Mn(BFl;t{jRM50mQ%^n-O89**4X2Q~l0%w`5*`0AgUA
zQ<$4tli;Z$AthzL&6@)tfEZX-gxA`tZua+?5~rPRyeb|bfEaT6nV7+V2?S=(0|+nx
X-=Id+UmgIe00000NkvXXu0mjfX!QaS

diff --git a/images/icon-configure.png b/images/icon-configure.png
deleted file mode 100644
index e23d67cc04b84880d0437e23ffcba837d2dc4121..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 765
zcmV<Z0s{SsP)<h;3K|Lk000e1NJLTq000mG000mO0{{R3C@l|D00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBUzSx`(=MgRZ*
z?DhJNmYk@uxA*-2`27Eew9)we|NZ^_>-74EqOkY-{rmp^hMTIQ#@mCazW_yW+u-8>
zPk}pYiU37!Rg=5p<Ku8!PL;aPinP&Ko5C=Kwv4vXFKdy`)7ZS~{QCX>tkC8<ag#T8
zo;QH1?f?I($K5u1rUFQFsj|2oWR49{ecAH=017(L<@3zo?b+-0ZM5GIPj&YH{{R*#
z017*UrMai#{B)?w8a-2Op}_z@Z%vfG5^bVEhq3VY`;C^I%F)rlz`&Wd$&i<u%+S)N
z+Wncf$B?zlwd4QC=>MYI{+_<kxZ?lZ{r$G#{vu_K{r~^P>;Luo{p<Dm()j%3{r{Vy
zr?kb;<oo@c$m8kh>4KD>lDEyR&Etl&(Yn*)-~a#n{r!cl#v)~o)A;<=?*HNB<)Ead
ztIy)#^#A()|Df6X+~MQJ*yDq%#H88$+~DJ&z|&y3EA;>X0V+vEK~#9!Vlc30L<05(
z00G3n&A`LT!lJ;ypuoby%ERCa5I_u^+3YL~3=E2jK!SxmT@xUH7#LYu81xtzq@@{v
zRB$0PKmai?vM}h|TJVXA@>$sGa|kj61Q1Ao!Aix>(9llBiUBA95I_u!><kPN>QW{q
zQtA>69J$N@0mQ(_5G$l?V<|3fX`?LUA;t_4Knx)a$=0%3W(*8wTC&#pV$1*m#K4#p
z$iS~1;Ow5F&CigO#|#ia42)@EI!Yn}8X5v3N;;7V%m4wz!045zrYp>4WW*(`tL7KS
z3=lvJjGn%#a>fj%rVPe%s{T=$00G3n8RT7%DsRrqYc3z^mXpa05I_vv(M9oWk}{5t
vGLmd;K28|`0mKjy&IAGu4q(b91|Yxy=@24rSbWX-00000NkvXXu0mjfu!oSb

diff --git a/images/icon-delete.png b/images/icon-delete.png
deleted file mode 100644
index 5f0cf695b0cac487efecfd7eae66e7492a2ba306..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 877
zcmV-z1CsoSP)<h;3K|Lk000e1NJLTq000mG000mO0{{R3C@l|D00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBUz!ca_9Mez6g
z|NsA<005!@0IRaMj+UGJ|NoAco1Xvx_VV<Qmz)0o|M~s@nzYFK{{O5R8q<xAz0BUE
z006b={j}Nfxj;eT@A&%s{+!3tqZJtN-QN8E|NHavp#T7zz0#Y()2gz!pa1~4ot>iq
z0IV%C^!fao008>^|L)Drv@$cSevPOvH1+WD^zif8ot?_h()RN6?e+VlH8rWRx4}_S
z>Eq+2H$UR#=J@XJx!2^a&*a?J*5Baax6|XJA0GGX>#7wN?d9dM-~7hn<esCZ)A9fN
z_4S<q0II~)o1&+sI6v<9`?EPb@Av!LrKQr1j?>fFvN$`qJUpqw(%<6b?d|i_j*rpq
z|FJ(m+tbtf@bI-UF}+7e`|<JM<K)QW@%HiZ!0-R678j!}Ex$-eqA4k=FfhsF@~IUT
z&fDSJ*4CpO8~OVD;Qjyn^z^$zLe7(u!A?%*=<4qF`>;AXyh1|0zrm`px0$`u?e_b>
zOiZ*eF_^v6z=e*`nwsd~;OpVxt2H&U;r{6M{D+mE+1A*$J3IUS{=tTi+0xSE<m9Us
z7o;&UzwZ9W>HoMkHoiwksV_9Fv$(S{F{rV(y2#O+9Z9zU00A*cL_t(|+F}r6KmlR^
z0mPunD6P)MEzZd)&dsJS&8QC$Knx6gJZzi-qWt`#0tRe6=92&dh=GBJO-fUdiJ6&6
zQB$ftgasggfGQFuM{AgHFjZ;vSL?*F00a;N19zC39-~Z5eiWmhntvAyKmai?<OFe)
z)HAxtFq%d%wb`%$1P}v*Za1@RS_31aW1}pyLn{kF05LFxCMk22+A}g*OyE$?2w(vS
zAO_!NAEuO8M(aq%yh5hHOa*`dV(`xGa4%rYN>1%$tYfNmRsaYfhDz6Tm24#=X67Cx
zJC%4#V}Jl+FzibdoXEs1B*e_5E!b-{1t5SJio=_PMYPN$CB3vngq>{50Ro6YwaBAJ
zUP6wSS588{BDl;2Ab=RAdUCO{va$mKkmBNM0SGVv{T(ma@e6-+00000NkvXXu0mjf
Dl_$#h

diff --git a/images/icon-draggable.png b/images/icon-draggable.png
deleted file mode 100644
index dba8b67cdf37714c933bc9514cfdf5e35df89fb3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 236
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!63?wyl`GbKJOS+@4BLl;=8&~`zjDUQ}64!{5
z;QX|b^2DN42FH~Aq*MjZ+{E<Mpwz^a%EFVWHb6z30X`wF>5Gp`1XlogE0+9>1X9c;
zL4Lvi|1(@a#S1i$A<EOmF{I*FQi2mR1LKhfJq7^>2_^={7DXU~$A?Fwfm5MDVunN@
zgRlcbVg@6J0*@|Gb|I@mgTWRC7J)Xg28Kfyn1Gt17??Pm8Gynp5XJ$9GrJj^MZ_$0
QfwnMsy85}Sb4q9e0Cu@K)&Kwi

diff --git a/images/icon-hidepane.png b/images/icon-hidepane.png
deleted file mode 100644
index 851698056e69dd3058fe1cc0456064ebb49909be..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 735
zcmV<50wDc~P)<h;3K|Lk000e1NJLTq000mG000mO0{{R3C@l|D00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBUzL{LmrMf&~!
z`~Lsl;^Wit|8tnH$nO6{cbMDc>b~axzUTkL>HkQ5ol1V5OoF4k<^N}tuloM~y5;}S
z-Q-Jvp#1*-{{R28&E4bU<8h(C*yQYvv&rN5|J2~<gsa2A=l`+G+rH)gzt7p<>hbRO
z`dE~>X`a8e-uJQ3;kLK8F>jT<=Ku8h{K3=S&*AL*{Qc<m{KM$~;qUmDy3tdOvGe-<
zn7h%JyV0S=(NmGO_WAl>nY?wW$*9ZU`TG2Zw9r3&qF9cuyx;S@<^S#V``_Z@&g}o2
zqNk;$rTYB-lDN^_>hX@Oz?Zzy&f4SP<mJWJ<L>tR&+Pxo&(f2+(|oDK-Rkjssl&9;
z<L&nQ?)UrV=<2%2(b4Yzmb}r&-s`*5<Hza$q|D;)_xs@e|Hj_ymYABgwzmBL|M~s@
zn3<XI_xu0<|Hy<%lmGw$AxT6*RCwBAFw8;$h5!M?pq(wkkS^+x4gw4!*+BpS#E`|9
zk&(f`n4Zqa0A%=S00a<27LZEM7BDdp$WG75U`hiBAdre|Wpz7iYddx2Y@h%@05N2V
zX6ve2SgEL3S*Yq}Go=9p5JQ%&SBRLBys@#ol2}-%OBz4`0R^Nav-KS8?H%;8C8fmE
z00M|1OJ7zd+mcsPlh-m^MpirxAb=Q>^yB!2vURw*b+U!{Q+(3^0*E0pS=xq&MUkCd
zk%h-b+CL2-fEXf}U6~yvgxT1HB^;Rp<I?~Fh`~9*fP;%wK}}78m5ak5TmvA07y@GC
z1o@n_I61YP_ypw=(*Od9K|3ng)XXT>+}y{=%+%A{9Uy=hqTMo)K`KCi0RX@TJ@sLm
R;!6Mk002ovPDHLkV1m?ApvV9K

diff --git a/images/icon-showpane.png b/images/icon-showpane.png
deleted file mode 100644
index 7549dd94d646ef74cb640beeeb911bfec9895bf5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 701
zcmV;u0z&<XP)<h;3K|Lk000e1NJLTq000mG000mO0{{R3C@l|D00004XF*Lt007q5
z)K6G40000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBUzFHlTWMf&~!
z`~LqiY>~j{|K8%`)A9dHfS~mG{7;LozUTj4l(oI)|ChGP9a?`iZI9#Q<0M~%@Avx6
z;_o?lpDAUFQjoU%{{Q;^|G41!vC-sJlDG5v{j<^H`TG3B=>Led(NBu5eX7O&|NqGD
z|KacWy5;{eZIPI}(c$d#)#dNQ>HmPJ!Ed9&wzs#=?EmQY{Gr9sKzEr?i?6=s|ChVb
zPmi^BsmZ|N^&nh<M}@11ug1IO|ChSayygGj;^Xf3`|kGp`uzUl_y6tn`_b<I=IH9m
z&(c45n#I@S;Qjx{>Hn9!(X`OxlDN^EqNhN3n&9N+y2#Pa+T)g(nv=TIyVK*AywQ%V
zz@*IL?e_cQ_y47(rSJFqMuDZCyUqOn|FyQZn3<XR{r~Xy`~Uy{@*D;=0003LNkl<Z
zc-mr6Nk#!G00G3no+8E&ujCjH0t{j)ZU6zqkj$8rl*GUoAJ51DWCZ8}1Q0_qkcv+c
zmzEY!iBC#mNdO2Skct#R8F@1^c^SbJpa4JsF(fOcXzG}XN=b>D>S(60Bme{uL$a&}
zm!*Oc2Zxb@C6|U>0zd!(1+0W)p+MM*KLH?s7?Sn1dE%geN1HzZAb=QR^o9IInADhn
zNW@(zC;=dV80<ZrBn^2j1OzO24JD&I5&!~-A(B;()m)K{kB?2!oK-J00U&@FoW10X
zwUn79B$$=8jOBcE0Ro7@!G&4X+LoJ>liSu>l{q2-Ab=RyT|?AOY{Co-ylqU>eZ!*x
j0*E2dFA*680|XcVbb&gfLU7qY00000NkvXXu0mjf1`}?m

diff --git a/images/no-icon.png b/images/no-icon.png
deleted file mode 100644
index 30584e6f2540ad49dac98060d1a7f8a5af1b27b7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3398
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

diff --git a/images/no-layout-preview.png b/images/no-layout-preview.png
deleted file mode 100644
index e78116b18116350c2ac515dce64cdfedc4b79747..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1851
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
F{{poqe767q

diff --git a/images/portlet-collapsed.png b/images/portlet-collapsed.png
deleted file mode 100644
index 95a214a6e6d17fee2f098804997f3826ffc9d4ca..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 108
zcmeAS@N?(olHy`uVBq!ia0vp^>>$j@3?%=}IXVGIu?6^qxc>kDAIJ<nbh!>lF_r}R
z1v5B2yO9Ruh<Lg<hE&W+4oEOa*pRS+F^QRtm4Q=<(U&oK@&%wggQu&X%Q~loCIDb?
B8=C+C

diff --git a/images/portlet-expanded.png b/images/portlet-expanded.png
deleted file mode 100644
index 46f39ecb351cff65243fa9a614a69d039e1302a5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 106
zcmeAS@N?(olHy`uVBq!ia0vp^>>$j@3?%=}IXVGIu?6^qxc>kDAIJ<nbh!>lF_r}R
z1v5B2yO9Ru2zk0VhE&W+{&76uaKb@_0}N~oA{!VF-#vS9IZ&3t)78&qol`;+0EMF;
ATL1t6

diff --git a/images/screenshot-1.jpg b/images/screenshot-1.jpg
deleted file mode 100644
index 72043574bbc5cc56842f00ea90b2b92dd1f45edc..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 14072
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
P|97^;|Aya4Zg>A5%~F*(

diff --git a/images/screenshot-2.jpg b/images/screenshot-2.jpg
deleted file mode 100644
index 80203d82a0b96c769242781a6db848983d53d20d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 43830
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
VD5;<RwRq`2wEOR;iOc+$`(G_aj=ul^

diff --git a/images/screenshot-3.jpg b/images/screenshot-3.jpg
deleted file mode 100644
index 2d6ce09b28447500b57d1ef5d08cb37d58917269..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 43224
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
RiA79|e~0yWl==J2{{mB|5F`Kq

diff --git a/images/screenshot-4.jpg b/images/screenshot-4.jpg
deleted file mode 100644
index bf7d77db7af8f5364bc8aed4be3e3d5297e45034..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 73474
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

diff --git a/images/sky.png b/images/sky.png
deleted file mode 100644
index 35b9380f434d9bdff12765bc77ace195dc260764..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2275
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
U2)HJ(KYh%Kal|?Bj|E=-8%w2aI{*Lx

diff --git a/images/sprite.png b/images/sprite.png
deleted file mode 100644
index fe74899e2b1f8ea62292b8b8de79c59f6eb07a71..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 14325
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

diff --git a/images/throbber.gif b/images/throbber.gif
deleted file mode 100644
index 8a084b8447d506e9b655ad52405cbf7a73034550..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3208
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

diff --git a/images/user-trash.png b/images/user-trash.png
deleted file mode 100644
index 71e4c46265aaf28ac59b0aaaa8d90d450d1af25d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 507
zcmV<X0R;YuP)<h;3K|Lk000e1NJLTq000mG000mO1^@s6AM^iV00006VoOIv00000
z008+zyMF)x010qNS#tmY3ljhU3ljkVnw%H_000McNliru)&UU<Hx(@T=jH$a05x<)
zSad^gZEa<4bO0!0DIhX1Ff<@aVQY0_AX9W@X>Mh53JODVWnpw>WFU8GbZ8({Xk{Qr
zNlj3Y*^6%g00BoyL_t(I%f*wwN&`U<hrc`TV*V&miy&elVrA<S*jlBsx)c%Yd;om{
zLG%@ZkW^Nw1PdQPFc2aE!A7uD5yis0?Cw}x?vm3LQwUBoyR*!<GrwWrzs(uHtZW@N
zfnb8X*8TZGEdxlB>$Pf@YOzMMokF~^c(A{>&C&4*u9w60a`?sh*cZyUem;)-d3I`5
z8qIb9WB|jaT#Qx#n88Qvbu@Z*vh}%N^K+$zZ$KQ^nhcPs;Pj%;ZvA%+uY0$4z~;s(
zXO}l12BRXxXhbCaU5p0DrBX6>06=AN38f6$2(K@X)(U24qMrd7J&JQ_|A;|_@2S96
zz?9=K?Kvnl5-jl|;1|k>(fFl-9iT-p0!BbY;{JykB<DmEE1-Y(!1~%Ujt=AbD;JW{
xi4bW+7#g0R-mHLDuhR{Bo$jQ2boD3O_z8^pe#hawwow28002ovPDHLkV1n_N&o}@8

diff --git a/includes/add-content.inc b/includes/add-content.inc
deleted file mode 100644
index 53e133b..0000000
--- a/includes/add-content.inc
+++ /dev/null
@@ -1,83 +0,0 @@
-<?php
-
-/**
- * @file
- * Contains template preprocess files for the add content modal themes.
- */
-
-/**
- * Preprocess the primary entry level theme.
- */
-function template_preprocess_panels_add_content_modal(&$vars) {
-  // Process the list of categories.
-  foreach ($vars['categories'] as $key => $category_info) {
-    // 'root' category is actually displayed under the categories, so
-    // skip it.
-    if ($key == 'root') {
-      continue;
-    }
-
-    $class = 'panels-modal-add-category';
-    if ($key == $vars['category']) {
-      $class .= ' active';
-    }
-
-    $url = $vars['renderer']->get_url('select-content', $vars['region'], $key);
-    $vars['categories_array'][] = ctools_ajax_text_button($category_info['title'], $url, '', $class);
-  }
-
-  // Now render the top level buttons (aka the root category) if any.
-  $vars['root_content'] = '';
-  if (!empty($vars['categories']['root'])) {
-    foreach ($vars['categories']['root']['content'] as $content_type) {
-      $vars['root_content'] .= theme('panels_add_content_link', array('renderer' => $vars['renderer'], 'region' => $vars['region'], 'content_type' => $content_type));
-    }
-  }
-}
-
-/**
- * Process the panels add content modal.
- *
- * This is run here so that preprocess can make changes before links are
- * actually rendered.
- */
-function template_process_panels_add_content_modal(&$vars) {
-  $content = !empty($vars['categories'][$vars['category']]['content']) ? $vars['categories'][$vars['category']]['content'] : array();
-
-  // If no category is selected or the category is empty or our special empty
-  // category render a 'header' that will appear instead of the columns.
-  if (empty($vars['category']) || empty($content) || $vars['category'] == 'root') {
-    $vars['header'] = t('Content options are divided by category. Please select a category from the left to proceed.');
-  }
-  else {
-    $titles = array_keys($content);
-    natcasesort($titles);
-
-    // This will default to 2 columns in the theme definition but could be
-    // changed by a preprocess. Ensure there is at least one column.
-    $columns = max(1, $vars['column_count']);
-    $vars['columns'] = array_fill(1, $columns, '');
-
-    $col_size = count($titles) / $columns;
-    $count = 0;
-    foreach ($titles as $title) {
-      $which = floor($count++ / $col_size) + 1;
-      $vars['columns'][$which] .= theme('panels_add_content_link', array('renderer' => $vars['renderer'], 'region' => $vars['region'], 'content_type' => $content[$title]));
-    }
-  }
-
-  $vars['messages'] = theme('status_messages');
-}
-
-/**
- * Preprocess the add content link used in the modal.
- */
-function template_preprocess_panels_add_content_link(&$vars) {
-  $vars['title'] = filter_xss_admin($vars['content_type']['title']);
-  $vars['description'] = isset($vars['content_type']['description']) ? $vars['content_type']['description'] : $vars['title'];
-  $vars['icon'] = ctools_content_admin_icon($vars['content_type']);
-  $vars['url'] = $vars['renderer']->get_url('add-pane', $vars['region'], $vars['content_type']['type_name'], $vars['content_type']['subtype_name']);
-  $subtype_class = 'add-content-link-' . str_replace('_', '-', $vars['content_type']['subtype_name']);
-  $vars['image_button'] = ctools_ajax_image_button($vars['icon'], $vars['url'], $vars['description'], $subtype_class . '-image-button panels-modal-add-config');
-  $vars['text_button'] = ctools_ajax_text_button($vars['title'], $vars['url'], $vars['description'], $subtype_class . '-text-button panels-modal-add-config');
-}
diff --git a/includes/callbacks.inc b/includes/callbacks.inc
deleted file mode 100644
index 255a3cd..0000000
--- a/includes/callbacks.inc
+++ /dev/null
@@ -1,205 +0,0 @@
-<?php
-/**
- * @file callbacks.inc
- * Minor menu callbacks for Panels helpers.
- */
-
-/**
- * A central administrative page for Panels.
- */
-function panels_admin_page() {
-  // @todo I think this should return a renderable array somehow?
-  return theme('panels_dashboard');
-}
-
-function panels_dashboard_final_blocks(&$vars) {
-  // Add in links for missing modules that we still want to mention:
-  if (empty($vars['links']['page_manager'])) {
-    $vars['links']['page_manager'] = array(
-      'weight' => -100,
-      'title' => t('Panel page'),
-      'description' => '<em>' . t('You must activate the page manager module for this functionality.') . '</em>',
-    );
-  }
-  if (empty($vars['links']['panels_mini'])) {
-    $vars['links']['panels_mini'] = array(
-      'title' => t('Mini panel'),
-      'description' => '<em>' . t('You must activate the Mini panels module for this functionality.') . '</em>',
-    );
-  }
-  if (empty($vars['links']['panels_node'])) {
-    $vars['links']['panels_mini'] = array(
-      'title' => t('Panel node'),
-      'description' => '<em>' . t('You must activate the panel node module for this functionality.') . '</em>',
-    );
-  }
-}
-
-/**
- * Implementation of hook_panels_dashboard_blocks().
- *
- * Adds page information to the Panels dashboard.
- */
-function panels_panels_dashboard_blocks(&$vars) {
-  $vars['links']['panels_layout'] = array(
-    'title' => l(t('Custom layout'), 'admin/structure/panels/layouts/add'),
-    'description' => t('Custom layouts can add more, site-specific layouts that you can use in your panels.'),
-  );
-
-   // Load all mini panels and their displays.
-  ctools_include('export');
-  $items = ctools_export_crud_load_all('panels_layout');
-  $count = 0;
-  $rows = array();
-
-  foreach ($items as $item) {
-    $rows[] = array(
-      check_plain($item->admin_title),
-      array(
-        'data' => l(t('Edit'), "admin/structure/panels/layouts/list/$item->name/edit"),
-        'class' => 'links',
-      ),
-    );
-
-    // Only show 10.
-    if (++$count >= 10) {
-      break;
-    }
-  }
-
-  if ($rows) {
-    $content = theme('table', array('rows' => $rows, 'attributes' => array('class' => 'panels-manage')));
-  }
-  else {
-    $content = '<p>' . t('There are no custom layouts.') . '</p>';
-  }
-
-  $vars['blocks']['panels_layout'] = array(
-    'title' => t('Manage custom layouts'),
-    'link' => l(t('Go to list'), 'admin/structure/panels/layouts'),
-    'content' => $content,
-    'class' => 'dashboard-layouts',
-    'section' => 'right',
-  );
-}
-
-function template_preprocess_panels_dashboard(&$vars) {
-  ctools_add_css('panels-dashboard', 'panels');
-  ctools_include('plugins');
-
-  $vars['image_path'] = ctools_image_path('', 'panels');
-
-  $vars['links'] = array();
-  $vars['blocks'] = array();
-
-  foreach (module_implements('panels_dashboard_blocks') as $module) {
-    $function = $module . '_panels_dashboard_blocks';
-    $function($vars);
-  }
-
-  // Add in any default links for modules that are not active
-  panels_dashboard_final_blocks($vars);
-
-  // If page manager module is enabled, add a very low eight block to
-  // list the page wizards.
-  if (module_exists('page_manager')) {
-    $vars['blocks']['wizards'] = array(
-      'weight' => -101,
-      'section' => 'right',
-      'title' => t('Page wizards'),
-      'content' => '',
-      'class' => 'dashboard-wizards',
-    );
-
-    ctools_include('page-wizard');
-    $plugins = page_manager_get_page_wizards();
-    uasort($plugins, 'ctools_plugin_sort');
-
-    foreach ($plugins as $id => $plugin) {
-      if (isset($plugin['type']) && $plugin['type'] == 'panels') {
-        $link = array(
-          'title' => l($plugin['title'], 'admin/structure/pages/wizard/' . $id),
-          'description' => $plugin['description'],
-        );
-
-        $vars['blocks']['wizards']['content'] .= theme('panels_dashboard_link', array('link' => $link));
-      }
-    }
-
-  }
-
-  uasort($vars['links'], 'ctools_plugin_sort');
-
-  $vars['blocks']['links'] = array(
-    'weight' => -100,
-    'section' => 'left',
-    'title' => t('Create new') . '...',
-    'content' => '',
-    'class' => 'dashboard-create',
-  );
-
-  // Turn the links into a block
-  foreach ($vars['links'] as $link) {
-    $vars['blocks']['links']['content'] .= theme('panels_dashboard_link', array('link' => $link));
-  }
-
-  uasort($vars['blocks'], 'ctools_plugin_sort');
-
-  $vars['left'] = '';
-  $vars['right'] = '';
-
-  // Render all the blocks
-  foreach ($vars['blocks'] as $block) {
-    $section = !empty($block['section']) ? $block['section'] : 'left';
-    $vars[$section] .= theme('panels_dashboard_block', array('block' => $block));
-  }
-}
-
-function panels_admin_settings_page() {
-  $form = array();
-  if (module_exists('page_manager')) {
-    foreach (page_manager_get_tasks() as $task) {
-      if ($function = ctools_plugin_get_function($task, 'admin settings')) {
-        $function($form);
-      }
-    }
-  }
-
-  ctools_include('content');
-  foreach (ctools_get_content_types() as $content) {
-    if ($function = ctools_plugin_get_function($content, 'admin settings')) {
-      $function($form);
-    }
-  }
-
-  ctools_include('plugins', 'panels');
-  $pipelines = panels_get_renderer_pipelines();
-  $options = array();
-  foreach ($pipelines as $key => $value) {
-    $options[$key] = $value->admin_title;
-  }
-  if (count($options) > 1) {
-    $form['panels_renderer_default'] = array(
-      '#type' => 'select',
-      '#title' => t('Default renderer'),
-      '#options' => $options,
-      '#default_value' => variable_get('panels_renderer_default', 'standard'),
-      '#description' => t('The default renderer for new panel pages.'),
-    );
-  }
-
-  if (empty($form)) {
-    return array('#value' => t('There are currently no settings to change, but additional plugins or modules may provide them in the future.'));
-  }
-
-  return system_settings_form($form);
-}
-
-/**
- * Settings for panel contexts created by the page manager.
- */
-function panels_admin_panel_context_page() {
-  ctools_include('common', 'panels');
-  return drupal_get_form('panels_common_settings', 'panels_page');
-}
-
diff --git a/includes/legacy.inc b/includes/legacy.inc
deleted file mode 100644
index c65f781..0000000
--- a/includes/legacy.inc
+++ /dev/null
@@ -1,41 +0,0 @@
-<?php
-
-/**
- * Legacy state manager for Panels.
- *
- * Checks all possible ways (using discovery of patterned method names) in which
- * Panels may need to operate in legacy mode,
- * sets variables as appropriate, and returns an informational
- *
- */
-class PanelsLegacyState {
-  var $legacy = NULL;
-
-  function t() {
-    $func = get_t();
-    $args = func_get_args();
-    return call_user_func_array($func, $args);
-  }
-
-  function getStatus() {
-    if (!isset($this->legacy)) {
-      $this->determineStatus();
-    }
-    return $this->legacy;
-  }
-
-  /**
-   * Run all compatibility checks.
-   */
-  function determineStatus() {
-    $this->legacy = array();
-    foreach(get_class_methods($this) as $method) {
-      if (strtolower(substr($method, 0, 5)) == 'check') {
-        $this->legacy[$method] = $this->$method();
-      }
-    }
-    $this->legacy = array_filter($this->legacy);
-  }
-
-  // At this time there are no legacy checks.
-}
diff --git a/js/display_editor.js b/js/display_editor.js
deleted file mode 100644
index 40e1146..0000000
--- a/js/display_editor.js
+++ /dev/null
@@ -1,546 +0,0 @@
-/**
- * @file display_editor.js
- *
- * Contains the javascript for the Panels display editor.
- */
-
-(function ($) {
-
-// randomly lock a pane.
-// @debug only
-Drupal.settings.Panels = Drupal.settings.Panels || {};
-
-
-/** Delete pane button **/
-Drupal.Panels.bindClickDelete = function(context) {
-  $('a.pane-delete:not(.pane-delete-processed)', context)
-    .addClass('pane-delete-processed')
-    .click(function() {
-    if (confirm(Drupal.t('Remove this pane?'))) {
-      var id = '#' + $(this).attr('id').replace('pane-delete-', '');
-      $(id).remove();
-      Drupal.Panels.Draggable.savePositions();
-    }
-    return false;
-  });
-};
-
-Drupal.Panels.bindPortlet = function() {
-  var handle = $(this).find('.panel-pane-collapsible > div.pane-title');
-  var content = $(this).find('.panel-pane-collapsible > div.pane-content');
-  if (content.length) {
-    var toggle = $('<span class="toggle toggle-collapsed"></span>');
-    handle.before(toggle);
-    toggle.click(function() {
-      content.slideToggle(20);
-      toggle.toggleClass('toggle-collapsed');
-    });
-    handle.click(function() {
-      content.slideToggle(20);
-      toggle.toggleClass('toggle-collapsed');
-    });
-    content.hide();
-  }
-};
-
-Drupal.Panels.Draggable = {
-  // The draggable object
-  object: null,
-
-  // Where objects can be dropped
-  dropzones: [],
-  current_dropzone: null,
-
-  // positions within dropzones where an object can be plazed
-  landing_pads: [],
-  current_pad: null,
-
-  // Where the object is
-  mouseOffset: { x: 0, y: 0 },
-  windowOffset: { x: 0, y: 0 },
-  offsetDivHeight: 0,
-
-  // original settings to be restored
-  original: {},
-  // a placeholder so that if the object is let go but not over a drop zone,
-  // it can be put back where it belongs
-  placeholder: {},
-
-  hoverclass: 'hoverclass',
-  helperclass: 'helperclass',
-  accept: 'div.panel-region',
-  handle: 'div.grabber',
-  draggable: 'div.panel-portlet',
-  main: 'div#panels-dnd-main',
-
-  // part of the id to remove to get just the number
-  draggableId: 'panel-pane-',
-
-  // part of the id to remove to get just the number
-  regionId: 'panel-region-',
-
-  // What to add to the front of a the id to get the form id for a panel
-  formId: 'input#edit-',
-
-  maxWidth: 250,
-
-  unsetDropZone: function() {
-    $(this.current_dropzone.obj).removeClass(this.hoverclass);
-    this.current_dropzone = null;
-    for (var i in this.landing_pads) {
-      $(this.landing_pads[i].obj).remove();
-    }
-    this.landing_pads = [];
-    this.current_pad = null;
-  },
-
-  createLandingPad: function(where, append) {
-    var obj = $('<div class="' + this.helperclass +'" id="' +
-      $(where).attr('id') + '-dropzone">&nbsp;</div>');
-    if (append) {
-      $(where).append(obj);
-    }
-    else {
-      $(where).before(obj);
-    }
-    var offset = $(obj).offset();
-
-    $(obj).css({
-      display: 'none'
-    });
-    this.landing_pads.push({
-      centerX: offset.left + ($(obj).innerWidth() / 2),
-      centerY: offset.top + ($(obj).innerHeight() / 2),
-      obj: obj
-    });
-    return obj;
-  },
-
-  calculateDropZones: function(event, dropzone) {
-    var draggable = Drupal.Panels.Draggable;
-    var dropzones = [];
-    $(this.accept).each(function() {
-      var offset = $(this).offset();
-      offset.obj = this;
-      offset.region = this.id.replace(draggable.regionId, '');
-      offset.width = $(this).outerWidth();
-      offset.height = $(this).outerHeight();
-      dropzones.push(offset);
-    });
-    this.dropzones = dropzones;
-  },
-
-  reCalculateDropZones: function() {
-    for (var i in this.dropzones) {
-      var offset = $(this.dropzones[i].obj).offset();
-      offset.width = $(this.dropzones[i].obj).outerWidth();
-      offset.height = $(this.dropzones[i].obj).outerHeight();
-      $.extend(this.dropzones[i], offset);
-    }
-  },
-
-  changeDropZone: function(new_dropzone) {
-    // Unset our old dropzone.
-    if (this.current_dropzone) {
-      this.unsetDropZone();
-    }
-
-    // Set up our new dropzone.
-    this.current_dropzone = new_dropzone;
-    $(this.current_dropzone.obj).addClass(this.hoverclass);
-    // add a landing pad
-    this.createLandingPad(this.current_dropzone.obj, true);
-
-    var that = this;
-    // Create a landing pad before each existing portlet.
-    $(this.current_dropzone.obj).find(this.draggable).each(function() {
-      if (that.object.id != this.id) {
-        that.createLandingPad(this, false);
-      }
-    });
-  },
-
-  findLandingPad: function(x, y) {
-    var shortest_distance = null;
-    var nearest_pad = null;
-    // find the nearest pad.
-    for (var i in this.landing_pads) {
-      // This isn't the real distance, this is the square of the
-      // distance -- no point in spending processing time on
-      // sqrt.
-      var dstx = Math.abs(x - this.landing_pads[i].centerX);
-      var dsty = Math.abs(y - this.landing_pads[i].centerY);
-      var distance =  (dstx * dstx) + (dsty * dsty);
-      if (shortest_distance == null || distance < shortest_distance) {
-        shortest_distance = distance;
-        nearest_pad = this.landing_pads[i];
-      }
-    }
-    if (nearest_pad != this.current_pad) {
-      if (this.current_pad) {
-        $(this.current_pad.obj).hide();
-      }
-      this.current_pad = nearest_pad;
-      $(nearest_pad.obj).show();
-    }
-  },
-
-  findDropZone: function(x, y) {
-    // Go through our dropzones and see if we're over one.
-    var new_dropzone = null;
-    for (var i in this.dropzones) {
-//      console.log('x:' + x + ' left:' + this.dropzones[i].left + ' right: ' + this.dropzones[i].left + this.dropzones[i].width);
-      if (this.dropzones[i].left < x &&
-        x < this.dropzones[i].left + this.dropzones[i].width &&
-        this.dropzones[i].top < y &&
-        y < this.dropzones[i].top + this.dropzones[i].height) {
-          new_dropzone = this.dropzones[i];
-          break;
-      }
-    }
-    // If we're over one, see if it's different.
-    if (new_dropzone && (!this.regionLock || this.regionLockRegions[new_dropzone.region])) {
-      var changed = false;
-      if (!this.current_dropzone || new_dropzone.obj.id != this.current_dropzone.obj.id) {
-        this.changeDropZone(new_dropzone);
-        changed = true;
-      }
-      this.findLandingPad(x, y);
-      if (changed)  {
-        // recalculate the size of our drop zones due to the fact that we're drawing landing pads.
-        this.reCalculateDropZones();
-      }
-    }
-    // If we're not over one, be sure to unhilite one if we were just
-    // over it.
-    else if (this.current_dropzone) {
-      this.unsetDropZone();
-    }
-  },
-
-  /** save button clicked, or pane deleted **/
-  savePositions: function() {
-    var draggable = Drupal.Panels.Draggable;
-    $(draggable.accept).each(function() {
-      var val = '';
-      $(this).find(draggable.draggable).each(function() {
-        if (val) {
-          val += ',';
-        }
-
-        val += this.id.replace(draggable.draggableId, '');
-      });
-      var region = this.id.replace(draggable.regionId, '');
-      $('input[name="panel[pane][' +  region + ']"]').val(val);
-    });
-    return false;
-  }
-};
-
-Drupal.Panels.DraggableHandler = function() {
-  $(this).addClass('panel-draggable');
-  var draggable = Drupal.Panels.Draggable;
-  var scrollBuffer = 10;
-  var scrollDistance = 10;
-  var scrollTimer = 30;
-
-  getMouseOffset = function(docPos, mousePos, windowPos) {
-    return { x: mousePos.x - docPos.x + windowPos.x, y: mousePos.y - docPos.y + windowPos.y};
-  };
-
-  getMousePos = function(ev) {
-    ev = ev || window.event;
-
-    if (ev.pageX || ev.pageY) {
-      return { x:ev.pageX, y:ev.pageY };
-    }
-    return {
-      x:ev.clientX + document.body.scrollLeft - document.body.clientLeft,
-      y:ev.clientY + document.body.scrollTop  - document.body.clientTop
-    };
-  };
-
-  getPosition = function(e) {
-    /*
-    if (document.defaultView && document.defaultView.getComputedStyle) {
-      var css = document.defaultView.getComputedStyle(e, null);
-      return {
-        x: parseInt(css.getPropertyValue('left')),
-        y: parseInt(css.getPropertyValue('top'))
-      };
-    }
-    */
-    var left = 0;
-    var top  = 0;
-
-    while (e.offsetParent) {
-      left += e.offsetLeft;
-      top  += e.offsetTop;
-      e     = e.offsetParent;
-    }
-
-    left += e.offsetLeft;
-    top  += e.offsetTop;
-
-    return { x:left, y:top };
-  };
-
-  mouseUp = function(e) {
-    clearTimeout(draggable.timeoutId);
-    draggable.dropzones = [];
-
-    if (draggable.current_pad) {
-      // Drop the object where we're hovering
-      $(draggable.object).insertAfter($(draggable.current_pad.obj));
-      Drupal.Panels.changed($(draggable.object));
-    }
-    else {
-      // or put it back where it came from
-      $(draggable.object).insertAfter(draggable.placeholder);
-    }
-    // remove the placeholder
-    draggable.placeholder.remove();
-
-    // restore original settings.
-    $(draggable.object).css(draggable.original);
-    if (draggable.current_dropzone) {
-      draggable.unsetDropZone();
-    }
-
-    $(document).unbind('mouseup').unbind('mousemove');
-    draggable.savePositions();
-  };
-
-  mouseMove = function(e) {
-    draggable.mousePos = getMousePos(e);
-
-    draggable.findDropZone(draggable.mousePos.x, draggable.mousePos.y);
-
-    var windowMoved = parseInt(draggable.offsetDivHeight - $(draggable.main).innerHeight());
-
-    draggable.object.style.top = draggable.mousePos.y - draggable.mouseOffset.y + windowMoved + 'px';
-    draggable.object.style.left = draggable.mousePos.x - draggable.mouseOffset.x  + 'px';
-    $(draggable.object).toggleClass('moving');
-  };
-
-  mouseDown = function(e) {
-    // If we mouse-downed over something clickable, don't drag!
-    if (e.target.nodeName == 'A' || e.target.nodeName == 'INPUT' || e.target.parentNode.nodeName == 'A' || e.target.nodeName.nodeName == 'INPUT') {
-      return;
-    }
-
-    draggable.object = $(this).parent(draggable.draggable).get(0);
-    draggable.paneId = draggable.object.id.replace(draggable.draggableId, '');
-
-    // create a placeholder so we can put this object back if dropped in an invalid location.
-    draggable.placeholder = $('<div class="draggable-placeholder-object" style="display:none"></div>"');
-    $(draggable.object).after(draggable.placeholder);
-
-    // Store original CSS so we can put it back.
-    draggable.original = {
-      position: $(draggable.object).css('position'),
-      width: 'auto',
-      left: $(draggable.object).css('left'),
-      top: $(draggable.object).css('top'),
-      'z-index': $(draggable.object).css('z-index'),
-      'margin-bottom': $(draggable.object).css('margin-bottom'),
-      'margin-top': $(draggable.object).css('margin-top'),
-      'margin-left': $(draggable.object).css('margin-left'),
-      'margin-right': $(draggable.object).css('margin-right'),
-      'padding-bottom': $(draggable.object).css('padding-bottom'),
-      'padding-top': $(draggable.object).css('padding-top'),
-      'padding-left': $(draggable.object).css('padding-left'),
-      'padding-right': $(draggable.object).css('padding-right')
-    };
-
-    draggable.mousePos = getMousePos(e);
-    var originalPos = $(draggable.object).offset();
-    var width = Math.min($(draggable.object).innerWidth(), draggable.maxWidth);
-
-    draggable.offsetDivHeight = $(draggable.main).innerHeight();
-    draggable.findDropZone(draggable.mousePos.x, draggable.mousePos.y);
-
-    // Make copies of these because in FF3, they actually change when we
-    // move the item, whereas they did not in FF2.
-
-    if (e.layerX || e.layerY) {
-      var layerX = e.layerX;
-      var layerY = e.layerY;
-    }
-    else if (e.originalEvent && e.originalEvent.layerX) {
-      var layerX = e.originalEvent.layerX;
-      var layerY = e.originalEvent.layerY;
-    }
-
-    // Make the draggable relative, get it out of the way and make it
-    // invisible.
-    $(draggable.object).css({
-      position: 'relative',
-      'z-index': 100,
-      width: width + 'px',
-      'margin-bottom': (-1 * parseInt($(draggable.object).outerHeight())) + 'px',
-      'margin-top': 0,
-      'margin-left': 0,
-      'margin-right': (-1 * parseInt($(draggable.object).outerWidth())) + 'px',
-      'padding-bottom': 0,
-      'padding-top': 0,
-      'padding-left': 0,
-      'padding-right': 0,
-      'left': 0,
-      'top': 0
-    })
-      .insertAfter($(draggable.main));
-    var newPos = $(draggable.object).offset();
-
-    var windowOffset = { left: originalPos.left - newPos.left, top: originalPos.top - newPos.top }
-
-    // if they grabbed outside the area where we make the draggable smaller, move it
-    // closer to the cursor.
-    if (layerX != 'undefined' && layerX > width) {
-      windowOffset.left += layerX - 10;
-    }
-    else if (layerX != 'undefined' && e.offsetX > width) {
-      windowOffset.left += e.offsetX - 10;
-    }
-
-    // This is stored so we can move with it.
-    draggable.mouseOffset = { x: draggable.mousePos.x - windowOffset.left, y: draggable.mousePos.y - windowOffset.top};
-    draggable.offsetDivHeight = $(draggable.main).innerHeight();
-
-    draggable.object.style.top = windowOffset.top + 'px';
-    draggable.object.style.left = windowOffset.left + 'px';
-    $(document).unbind('mouseup').unbind('mousemove').mouseup(mouseUp).mousemove(mouseMove);
-
-    draggable.calculateDropZones(draggable.mousePos, e);
-    draggable.timeoutId = setTimeout('timer()', scrollTimer);
-
-    // If locking to a particular set of regions, set that:
-    if (Drupal.settings.Panels && Drupal.settings.Panels.RegionLock && Drupal.settings.Panels.RegionLock[draggable.paneId]) {
-      draggable.regionLock = true;
-      draggable.regionLockRegions = Drupal.settings.Panels.RegionLock[draggable.paneId];
-    }
-    else {
-      draggable.regionLock = false;
-      draggable.regionLockRegions = null;
-    }
-
-    return false;
-  };
-
-  timer = function() {
-    if (!draggable.timeCount) {
-      draggable.timeCount = 0;
-    }
-    draggable.timeCount = draggable.timeCount + 1;
-    var left = $(window).scrollLeft();
-    var right = left + $(window).width();
-    var top = $(window).scrollTop();
-    var bottom = top + $(window).height();
-
-    if (draggable.mousePos.x < left + scrollBuffer && left > 0) {
-      window.scrollTo(left - scrollDistance, top);
-      draggable.mousePos.x -= scrollDistance;
-      draggable.object.style.top = draggable.mousePos.y - draggable.mouseOffset.y + 'px';
-    }
-    else if (draggable.mousePos.x > right - scrollBuffer) {
-      window.scrollTo(left + scrollDistance, top);
-      draggable.mousePos.x += scrollDistance;
-      draggable.object.style.top = draggable.mousePos.y - draggable.mouseOffset.y + 'px';
-    }
-    else if (draggable.mousePos.y < top + scrollBuffer && top > 0) {
-      window.scrollTo(left, top - scrollDistance);
-      draggable.mousePos.y -= scrollDistance;
-      draggable.object.style.top = draggable.mousePos.y - draggable.mouseOffset.y + 'px';
-    }
-    else if (draggable.mousePos.y > bottom - scrollBuffer) {
-      window.scrollTo(left, top + scrollDistance);
-      draggable.mousePos.y += scrollDistance;
-      draggable.object.style.top = draggable.mousePos.y - draggable.mouseOffset.y + 'px';
-    }
-
-    draggable.timeoutId = setTimeout('timer()', scrollTimer);
-  }
-
-  $(this).mousedown(mouseDown);
-};
-
-$.fn.extend({
-  panelsDraggable: Drupal.Panels.DraggableHandler
-});
-
-/**
- * Implement Drupal behavior for autoattach
- */
-Drupal.behaviors.PanelsDisplayEditor = {
-  attach: function(context) {
-    // Show javascript only items.
-    $('span#panels-js-only').css('display', 'inline');
-
-    $('#panels-dnd-main div.panel-pane:not(.panel-portlet)')
-      .addClass('panel-portlet')
-      .each(Drupal.Panels.bindPortlet);
-
-    // The above doesn't work if context IS the pane, so do this to catch that.
-    if ($(context).hasClass('panel-pane') && !$(context).hasClass('panel-portlet')) {
-      $(context)
-        .addClass('panel-portlet')
-        .each(Drupal.Panels.bindPortlet);
-    }
-
-    // Make draggables and make sure their positions are saved.
-    $(context).find('div.grabber:not(.panel-draggable)').panelsDraggable();
-    Drupal.Panels.Draggable.savePositions();
-
-    // Bind buttons.
-    $('input#panels-hide-all', context).click(Drupal.Panels.clickHideAll);
-    $('input#panels-show-all', context).click(Drupal.Panels.clickShowAll);
-
-    Drupal.Panels.bindClickDelete(context);
-
-    $('#panels-live-preview-button:not(.panels-preview-processed)')
-      .addClass('panels-preview-processed')
-      .click(function () {
-        if (!$('#panels-preview').size()) {
-          $('#panels-dnd-main').parents('form').after('<div id="panels-preview" class="clearfix"></div>');
-        }
-        var html = '';
-        html += '  <div id="modal-throbber">';
-        html += '    <div class="modal-throbber-wrapper">';
-        html +=        Drupal.settings.CToolsModal.throbber;
-        html += '    </div>';
-        html += '  </div>';
-
-        $('#panels-preview').html(html);
-      });
-
-    var setTitleClass = function () {
-      if ($('#edit-display-title-hide-title').val() == 2) {
-        $('#panels-dnd-main').removeClass('panels-set-title-hide');
-      }
-      else {
-        $('#panels-dnd-main').addClass('panels-set-title-hide');
-      }
-    }
-
-    // The panes have an option to set the display title, but only if
-    // a select is set to the proper value. This sets a class on the
-    // main edit div so that the option to set the display title
-    // is hidden if that is not selected, and visible if it is.
-    $('#edit-display-title-hide-title:not(.panels-title-processed)')
-      .addClass('panels-title-processed')
-      .change(setTitleClass);
-
-    setTitleClass();
-  }
-}
-
-$(function() {
-  /**
-   * AJAX responder command to render the preview.
-   */
-  Drupal.ajax.prototype.commands.panel_preview = function(ajax, command, status) {
-    $('#panels-preview').html(command.output);
-  }
-});
-
-})(jQuery);
diff --git a/js/layout.js b/js/layout.js
deleted file mode 100644
index e54fd02..0000000
--- a/js/layout.js
+++ /dev/null
@@ -1,18 +0,0 @@
-/**
- * @file layout.js
- *
- * Contains javascript to make layout modification a little nicer.
- */
-
-(function ($) {
-  Drupal.Panels.Layout = {};
-  Drupal.Panels.Layout.autoAttach = function() {
-    $('div.form-item div.layout-icon').click(function() {
-      $widget = $('input', $(this).parent());
-      // Toggle if a checkbox, turn on if a radio.
-      $widget.attr('checked', !$widget.attr('checked') || $widget.is('input[type=radio]'));
-    });
-  };
-
-  $(Drupal.Panels.Layout.autoAttach);
-})(jQuery);
diff --git a/js/panels-base.js b/js/panels-base.js
deleted file mode 100644
index 4df3c80..0000000
--- a/js/panels-base.js
+++ /dev/null
@@ -1,28 +0,0 @@
-/**
- * @file
- * Implement basic methods required by all of panels.
- */
-
-(function ($) {
-  Drupal.Panels = Drupal.Panels || {};
-
-  Drupal.Panels.changed = function(item) {
-    if (!item.is('.changed')) {
-      item.addClass('changed');
-      item.find('div.grabber span.text').append(' <span class="star">*</span> ');
-    }
-  };
-
-  Drupal.Panels.restripeTable = function(table) {
-    // :even and :odd are reversed because jquery counts from 0 and
-    // we count from 1, so we're out of sync.
-    $('tbody tr:not(:hidden)', $(table))
-      .removeClass('even')
-      .removeClass('odd')
-      .filter(':even')
-        .addClass('odd')
-      .end()
-      .filter(':odd')
-        .addClass('even');
-  };
-})(jQuery);
diff --git a/panels.module b/panels.module
index a701ffe..05e0a2e 100644
--- a/panels.module
+++ b/panels.module
@@ -73,130 +73,6 @@ function panels_page_variant_presave(PageVariantInterface $page_variant) {
 
 // --------------------------------------------------------------------------
 // Core Drupal hook implementations
-
-/**
- * Implementation of hook_theme()
- */
-function panels_theme() {
-  $theme = array();
-
-  /*
-  $layouts = panels_get_layouts();
-  foreach ($layouts as $name => $data) {
-    foreach (array('theme', 'admin theme') as $callback) {
-      if (!empty($data[$callback])) {
-        $theme[$data[$callback]] = array(
-          'variables' => array('css_id' => NULL, 'content' => NULL, 'settings' => NULL, 'display' => NULL, 'layout' => NULL, 'renderer' => NULL),
-          'path' => $data['path'],
-          'file' => $data['file'],
-        );
-
-        // if no theme function exists, assume template.
-        if (!function_exists("theme_$data[theme]")) {
-          $theme[$data[$callback]]['template'] = str_replace('_', '-', $data[$callback]);
-          $theme[$data[$callback]]['file'] = $data['file']; // for preprocess.
-        }
-      }
-    }
-  }
-  */
-
-  // @todo: Port the follow to Drupal 8!
-  /*
-  $theme['panels_layout_link'] = array(
-    'variables' => array('title' => NULL, 'id' => NULL, 'image' => NULL, 'link' => NULL, 'class' => NULL),
-  );
-  $theme['panels_layout_icon'] = array(
-    'variables' => array('id' => NULL, 'image' => NULL, 'title' => NULL),
-  );
-  $theme['panels_pane'] = array(
-    'variables' => array('output' => array(), 'pane' => array(), 'display' => array()),
-    'path' => drupal_get_path('module', 'panels') . '/templates',
-    'template' => 'panels-pane',
-  );
-  $theme['panels_common_content_list'] = array(
-    'variables' => array('display' => NULL),
-    'file' => 'includes/common.inc',
-  );
-  $theme['panels_render_display_form'] = array(
-    'render element' => 'element',
-  );
-
-  $theme['panels_dashboard'] = array(
-    'variables' => array(),
-    'path' => drupal_get_path('module', 'panels') . '/templates',
-    'file' => '../includes/callbacks.inc',
-    'template' => 'panels-dashboard',
-  );
-
-  $theme['panels_dashboard_link'] = array(
-    'variables' => array('link' => array()),
-    'path' => drupal_get_path('module', 'panels') . '/templates',
-    'file' => '../includes/callbacks.inc',
-    'template' => 'panels-dashboard-link',
-  );
-
-  $theme['panels_dashboard_block'] = array(
-    'variables' => array('block' => array()),
-    'path' => drupal_get_path('module', 'panels') . '/templates',
-    'file' => '../includes/callbacks.inc',
-    'template' => 'panels-dashboard-block',
-  );
-
-  $theme['panels_add_content_modal'] = array(
-    'variables' => array('renderer' => NULL, 'categories' => array(), 'region' => NULL, 'category' => NULL, 'column_count' => 2),
-    'path' => drupal_get_path('module', 'panels') . '/templates',
-    'file' => '../includes/add-content.inc',
-    'template' => 'panels-add-content-modal',
-  );
-
-  $theme['panels_add_content_link'] = array(
-    'variables' => array('renderer' => NULL, 'region' => NULL, 'content_type' => NULL),
-    'path' => drupal_get_path('module', 'panels') . '/templates',
-    'file' => '../includes/add-content.inc',
-    'template' => 'panels-add-content-link',
-  );
-
-  // We don't need layout and style themes in maintenance mode.
-  // Disabling this: See http://drupal.org/node/979912 for information.
-//  if (defined('MAINTENANCE_MODE')) {
-//    return $theme;
-//  }
-
-  // Register layout and style themes on behalf of all of these items.
-  ctools_include('plugins', 'panels');
-
-  $styles = panels_get_styles();
-  foreach ($styles as $name => $data) {
-    if (!empty($data['render pane'])) {
-      $theme[$data['render pane']] = array(
-        'variables' => array('content' => NULL, 'pane' => NULL, 'display' => NULL, 'style' => NULL, 'settings' => NULL),
-        'path' => $data['path'],
-        'file' => $data['file'],
-      );
-    }
-    if (!empty($data['render region'])) {
-      $theme[$data['render region']] = array(
-        'variables' => array('display' => NULL, 'owner_id' => NULL, 'panes' => NULL, 'settings' => NULL, 'region_id' => NULL, 'style' => NULL),
-        'path' => $data['path'],
-        'file' => $data['file'],
-      );
-    }
-
-    if (!empty($data['hook theme'])) {
-      if (is_array($data['hook theme'])) {
-        $theme += $data['hook theme'];
-      }
-      else if (function_exists($data['hook theme'])) {
-        $data['hook theme']($theme, $data);
-      }
-    }
-  }
-  */
-
-  return $theme;
-}
-
 /**
  * Implementation of hook_menu
  */
@@ -220,19 +96,6 @@ function panels_menu() {
     'file' => 'includes/callbacks.inc',
     'access arguments' => array('use panels dashboard'),
   );
-  // Provide a nice location for a panels admin panel.
-  $items['admin/structure/panels'] = array(
-    'title' => 'Panels',
-    'page callback' => 'panels_admin_page',
-    'description' => 'Get a bird\'s eye view of items related to Panels.',
-  ) + $admin_base;
-
-  $items['admin/structure/panels/dashboard'] = array(
-    'title' => 'Dashboard',
-    'page callback' => 'panels_admin_page',
-    'type' => MENU_DEFAULT_LOCAL_TASK,
-    'weight' => -10,
-  ) + $admin_base;
 
   $items['admin/structure/panels/settings'] = array(
     'title' => 'Settings',
@@ -272,118 +135,17 @@ function panels_menu() {
     }
   }
 
-
   return $items;
 }
 
 /**
- * Menu loader function to load a cache item for Panels AJAX.
- *
- * This load all of the includes needed to perform AJAX, and loads the
- * cache object and makes sure it is valid.
- */
-function panels_edit_cache_load($cache_key) {
-  ctools_include('display-edit', 'panels');
-  ctools_include('plugins', 'panels');
-  ctools_include('ajax');
-  ctools_include('modal');
-  ctools_include('context');
-
-  return panels_edit_cache_get($cache_key);
-}
-
-/**
- * Implementation of hook_init()
- */
-function panels_init() {
-  // Safety: go away if CTools is not at an appropriate version.
-  if (!module_invoke('ctools', 'api_version', PANELS_REQUIRED_CTOOLS_API)) {
-    if (user_access('administer site configuration')) {
-      drupal_set_message(t('Panels is enabled but CTools is out of date. All Panels modules are disabled until CTools is updated. See the status page for more information.'), 'error');
-    }
-    return;
+ * Implements hook_cache_flush().
+ * TODO: Implement the cache_panels, if applicable for 8.x
+  function panels_cache_flush() {
+      return array('cache_panels');
   }
-
-  ctools_add_css('panels', 'panels');
-}
-
-/**
- * Implementation of hook_flush_caches().
- *
- * We implement this so that we can be sure our legacy rendering state setting
- * in $conf is updated whenever caches are cleared.
- */
-//function panels_flush_caches() {
-//  $legacy = panels_get_legacy_state();
-//  $legacy->determineStatus();
-//}
-
-/**
- * Implements hook_flush_caches().
  */
-function panels_flush_caches() {
-  if (db_table_exists('cache_panels')) {
-    return array('cache_panels');
-  }
-}
 
-// ---------------------------------------------------------------------------
-// CTools hook implementations
-//
-// These aren't core Drupal hooks but they are just as important.
-
-/**
- * Implementation of hook_ctools_plugin_directory() to let the system know
- * we implement task and task_handler plugins.
- */
-function panels_ctools_plugin_directory($module, $plugin) {
-  // Safety: go away if CTools is not at an appropriate version.
-  if (!module_invoke('ctools', 'api_version', PANELS_REQUIRED_CTOOLS_API)) {
-    return;
-  }
-
-  // We don't support the 'ctools' 'cache' plugin and pretending to causes
-  // errors when they're in use.
-  if ($module == 'ctools' && $plugin == 'cache') {
-    return;
-    // if we did we'd make a plugin/ctools_cache or something.
-  }
-
-  if ($module == 'page_manager' || $module == 'panels' || $module == 'ctools' || $module == 'stylizer') {
-    // Panels and CTools both implement a 'cache' plugin but we don't implement
-    // the CTools version.
-    if ($module == 'ctools' && $plugin == 'cache') {
-      return;
-    }
-
-    return 'plugins/' . $plugin;
-  }
-}
-
-/**
- * Implements hook_ctools_plugin_type().
- *
- * Register layout, style, cache, and display_renderer plugin types, declaring
- * relevant plugin type information as necessary.
- */
-function panels_ctools_plugin_type() {
-  return array(
-    'layouts' => array(
-      'load themes' => TRUE, // Can define layouts in themes
-      'process' => 'panels_layout_process',
-      'child plugins' => TRUE,
-    ),
-    'styles' => array(
-      'load themes' => TRUE,
-      'process' => 'panels_plugin_styles_process',
-      'child plugins' => TRUE,
-    ),
-    'cache' => array(),
-    'display_renderers' => array(
-      'classes' => array('renderer'),
-    ),
-  );
-}
 
 /**
  * Ensure a layout has a minimal set of data.
@@ -396,42 +158,6 @@ function panels_layout_process(&$plugin) {
 }
 
 /**
- * Implementation of hook_ctools_plugin_api().
- *
- * Inform CTools about version information for various plugins implemented by
- * Panels.
- *
- * @param string $owner
- *   The system name of the module owning the API about which information is
- *   being requested.
- * @param string $api
- *   The name of the API about which information is being requested.
- */
-function panels_ctools_plugin_api($owner, $api) {
-  if ($owner == 'panels' && $api == 'styles') {
-    // As of 6.x-3.6, Panels has a slightly new system for style plugins.
-    return array('version' => 2.0);
-  }
-
-  if ($owner == 'panels' && $api == 'pipelines') {
-    return array(
-      'version' => 1,
-      'path' => drupal_get_path('module', 'panels') . '/includes',
-    );
-  }
-}
-
-/**
- * Implementation of hook_views_api().
- */
-function panels_views_api() {
-  return array(
-    'api' => 2,
-    'path' => drupal_get_path('module', 'panels') . '/plugins/views',
-  );
-}
-
-/**
  * Perform additional processing on a style plugin.
  *
  * Currently this is only being used to apply versioning information to style
@@ -1405,12 +1131,10 @@ function panels_ajax_router() {
 // When editing displays and the like, Panels has a caching system that relies
 // on a callback to determine where to get the actual cache.
 
-// @todo This system needs to be better documented so that it can be
-// better used.
+// @todo This system needs to be ported to Drupal 8
 
 /**
  * Get an object from cache.
- */
 function panels_cache_get($obj, $did, $skip_cache = FALSE) {
   ctools_include('object-cache');
   // we often store contexts in cache, so let's just make sure we can load
@@ -1418,22 +1142,23 @@ function panels_cache_get($obj, $did, $skip_cache = FALSE) {
   ctools_include('context');
   return ctools_object_cache_get($obj, 'panels_display:' . $did, $skip_cache);
 }
+ */
 
 /**
  * Save the edited object into the cache.
- */
 function panels_cache_set($obj, $did, $cache) {
   ctools_include('object-cache');
   return ctools_object_cache_set($obj, 'panels_display:' . $did, $cache);
 }
+ */
 
 /**
  * Clear a object from the cache; used if the editing is aborted.
- */
 function panels_cache_clear($obj, $did) {
   ctools_include('object-cache');
   return ctools_object_cache_clear($obj, 'panels_display:' . $did);
 }
+ */
 
 /**
  * Create the default cache for editing panel displays.
@@ -1441,7 +1166,6 @@ function panels_cache_clear($obj, $did) {
  * If an application is using the Panels display editor without having
  * specified a cache key, this method can be used to create the default
  * cache.
- */
 function panels_edit_cache_get_default(&$display, $content_types = NULL, $title = FALSE) {
   if (empty($content_types)) {
     $content_types = ctools_content_get_available_types();
@@ -1458,11 +1182,12 @@ function panels_edit_cache_get_default(&$display, $content_types = NULL, $title
   panels_edit_cache_set($cache);
   return $cache;
 }
+ */
 
 /**
  * Method to allow modules to provide their own caching mechanism for the
  * display editor.
- */
+
 function panels_edit_cache_get($cache_key) {
   if (strpos($cache_key, ':') !== FALSE) {
     list($module, $argument) = explode(':', $cache_key, 2);
@@ -1472,11 +1197,11 @@ function panels_edit_cache_get($cache_key) {
   // Fall back to our normal method:
   return panels_cache_get('display', $cache_key);
 }
+ */
 
 /**
  * Method to allow modules to provide their own caching mechanism for the
  * display editor.
- */
 function panels_edit_cache_set($cache) {
   $cache_key = $cache->display->cache_key;
   if (strpos($cache_key, ':') !== FALSE) {
@@ -1487,11 +1212,12 @@ function panels_edit_cache_set($cache) {
   // Fall back to our normal method:
   return panels_cache_set('display', $cache_key, $cache);
 }
+ */
 
 /**
  * Method to allow modules to provide their own mechanism to write the
  * cache used in the display editor.
- */
+
 function panels_edit_cache_save($cache) {
   $cache_key = $cache->display->cache_key;
   if (strpos($cache_key, ':') !== FALSE) {
@@ -1504,11 +1230,11 @@ function panels_edit_cache_save($cache) {
   // Fall back to our normal method:
   return panels_save_display($cache->display);
 }
-
+ */
 /**
  * Method to allow modules to provide their own mechanism to clear the
  * cache used in the display editor.
- */
+
 function panels_edit_cache_clear($cache) {
   $cache_key = $cache->display->cache_key;
   if (strpos($cache_key, ':') !== FALSE) {
@@ -1521,10 +1247,10 @@ function panels_edit_cache_clear($cache) {
   // Fall back to our normal method:
   return panels_cache_clear('display', $cache_key);
 }
-
+ */
 /**
  * Method to allow modules to provide a mechanism to break locks.
- */
+
 function panels_edit_cache_break_lock($cache) {
   if (empty($cache->locked)) {
     return;
@@ -1542,7 +1268,7 @@ function panels_edit_cache_break_lock($cache) {
   // no fallback.
   return;
 }
-
+ */
 // --------------------------------------------------------------------------
 // Callbacks on behalf of the panel_context plugin.
 //
@@ -1765,35 +1491,4 @@ function panels_print_layout($layout, $content, $meta = 'standard') {
  */
 function _panels_builder_filter($layout) {
   return empty($layout['builder']);
-}
-
-// --------------------------------------------------------------------------
-// Deprecated functions
-//
-// Everything below this line will eventually go away.
-
-/**
- * panels path helper function
- */
-function panels_get_path($file, $base_path = FALSE, $module = 'panels') {
-  $output = $base_path ? base_path() : '';
-  return $output . drupal_get_path('module', $module) . '/' . $file;
-}
-
-/**
- * Remove default sidebar related body classes and provide own css classes
- */
-function panels_preprocess_html(&$vars) {
-  $panel_body_css = &drupal_static('panel_body_css');
-  if (!empty($panel_body_css['body_classes_to_remove'])) {
-    $classes_to_remove = explode(' ', $panel_body_css['body_classes_to_remove']);
-    foreach ($vars['classes_array'] as $key => $css_class) {
-      if (in_array($css_class, $classes_to_remove)) {
-        unset($vars['classes_array'][$key]);
-      }
-    }
-  }
-  if (!empty($panel_body_css['body_classes_to_add'])) {
-    $vars['classes_array'][] = check_plain($panel_body_css['body_classes_to_add']);
-  }
-}
+}
\ No newline at end of file
diff --git a/plugins/cache/simple.inc b/plugins/cache/simple.inc
deleted file mode 100644
index 6b76678..0000000
--- a/plugins/cache/simple.inc
+++ /dev/null
@@ -1,161 +0,0 @@
-<?php
-
-/**
- * @file
- * Provides a simple time-based caching option for panel panes.
- */
-
-// Plugin definition
-$plugin = array(
-  'title' => t("Simple cache"),
-  'description' => t('Simple caching is a time-based cache. This is a hard limit, and once cached it will remain that way until the time limit expires.'),
-  'cache get' => 'panels_simple_cache_get_cache',
-  'cache set' => 'panels_simple_cache_set_cache',
-  'cache clear' => 'panels_simple_cache_clear_cache',
-  'settings form' => 'panels_simple_cache_settings_form',
-  'settings form submit' => 'panels_simple_cache_settings_form_submit',
-  'defaults' => array(
-    'lifetime' => 15,
-    'granularity' => 'none',
-  ),
-);
-
-/**
- * Get cached content.
- */
-function panels_simple_cache_get_cache($conf, $display, $args, $contexts, $pane = NULL) {
-  $cid = panels_simple_cache_get_id($conf, $display, $args, $contexts, $pane);
-  $cache = cache_get($cid, 'cache_panels');
-  if (!$cache) {
-    return FALSE;
-  }
-
-  if ((time() - $cache->created) > $conf['lifetime']) {
-    return FALSE;
-  }
-
-  return $cache->data;
-}
-
-/**
- * Set cached content.
- */
-function panels_simple_cache_set_cache($conf, $content, $display, $args, $contexts, $pane = NULL) {
-  $cid = panels_simple_cache_get_id($conf, $display, $args, $contexts, $pane);
-  cache_set($cid, $content, 'cache_panels');
-}
-
-/**
- * Clear cached content.
- *
- * Cache clears are always for an entire display, regardless of arguments.
- */
-function panels_simple_cache_clear_cache($display) {
-  $cid = 'panels_simple_cache';
-
-  // If the panel is stored in the database it'll have a numeric did value.
-  if (is_numeric($display->did)) {
-    $cid .= ':' . $display->did;
-  }
-  // Exported panels won't have a numeric did but may have a usable cache_key.
-  elseif (!empty($display->cache_key)) {
-    $cid .= ':' . str_replace('panel_context:', '', $display->cache_key);
-  }
-  // Alternatively use the css_id.
-  elseif (!empty($display->css_id)) {
-    $cid .= ':' . $display->css_id;
-  }
-  // Failover to just appending the did, which may be the completely unusable
-  // string 'new'.
-  else {
-    $cid .= ':' . $display->did;
-  }
-
-  cache_clear_all($cid, 'cache_panels', TRUE);
-}
-
-/**
- * Figure out an id for our cache based upon input and settings.
- */
-function panels_simple_cache_get_id($conf, $display, $args, $contexts, $pane) {
-  $id = 'panels_simple_cache';
-
-  // If the panel is stored in the database it'll have a numeric did value.
-  if (is_numeric($display->did)) {
-    $id .= ':' . $display->did;
-  }
-  // Exported panels won't have a numeric did but may have a usable cache_key.
-  elseif (!empty($display->cache_key)) {
-    $id .= ':' . str_replace('panel_context:', '', $display->cache_key);
-  }
-  // Alternatively use the css_id.
-  elseif (!empty($display->css_id)) {
-    $id .= ':' . $display->css_id;
-  }
-  // Failover to just appending the did, which may be the completely unusable
-  // string 'new'.
-  else {
-    $id .= ':' . $display->did;
-  }
-
-  if ($pane) {
-    $id .= ':' . $pane->pid;
-  }
-
-  if (user_access('view pane admin links')) {
-    $id .= ':admin';
-  }
-
-  switch ($conf['granularity']) {
-    case 'args':
-      foreach ($args as $arg) {
-        $id .= ':' . $arg;
-      }
-      break;
-
-    case 'context':
-      if (!is_array($contexts)) {
-        $contexts = array($contexts);
-      }
-      foreach ($contexts as $context) {
-        if (isset($context->argument)) {
-          $id .= ':' . $context->argument;
-        }
-      }
-  }
-  if (module_exists('locale')) {
-    global $language;
-    $id .= ':' . $language->language;
-  }
-
-  if(!empty($pane->configuration['use_pager']) && !empty($_GET['page'])) {
-    $id .= ':p' . check_plain($_GET['page']);
-  }
-
-  return $id;
-}
-
-function panels_simple_cache_settings_form($conf, $display, $pid) {
-  $options = drupal_map_assoc(array(15, 30, 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 3600, 7200, 14400, 28800, 43200, 86400, 172800, 259200, 345600, 604800), 'format_interval');
-  $form['lifetime'] = array(
-    '#title' => t('Lifetime'),
-    '#type' => 'select',
-    '#options' => $options,
-    '#default_value' => $conf['lifetime'],
-  );
-
-  $form['granularity'] = array(
-    '#title' => t('Granularity'),
-    '#type' => 'select',
-    '#options' => array(
-      'args' => t('Arguments'),
-      'context' => t('Context'),
-      'none' => t('None'),
-    ),
-    '#description' => t('If "arguments" are selected, this content will be cached per individual argument to the entire display; if "contexts" are selected, this content will be cached per unique context in the pane or display; if "neither" there will be only one cache for this pane.'),
-    '#default_value' => $conf['granularity'],
-  );
-
-  return $form;
-}
-
diff --git a/plugins/display_renderers/editor.inc b/plugins/display_renderers/editor.inc
deleted file mode 100644
index 6bfdf84..0000000
--- a/plugins/display_renderers/editor.inc
+++ /dev/null
@@ -1,5 +0,0 @@
-<?php
-
-$plugin = array(
-  'renderer' => 'panels_renderer_editor',
-);
diff --git a/plugins/display_renderers/panels_renderer_editor.class.php b/plugins/display_renderers/panels_renderer_editor.class.php
deleted file mode 100644
index 4876ff3..0000000
--- a/plugins/display_renderers/panels_renderer_editor.class.php
+++ /dev/null
@@ -1,1995 +0,0 @@
-<?php
-
-/**
- * @file
- * Class file to control the main Panels editor.
- */
-
-class panels_renderer_editor extends panels_renderer_standard {
-
-  /**
-   * An array of AJAX commands to return. If populated it will automatically
-   * be used by the AJAX router.
-   */
-  var $commands = array();
-  var $admin = TRUE;
-
-  /**
-   * Set to true if edit links (for panes and regions) should not be displayed.
-   * This can be used for special edit modes such as layout change and layout
-   * builder that do not actually have real content.
-   */
-  var $no_edit_links = FALSE;
-  // -------------------------------------------------------------------------
-  // Display edit rendering.
-
-  function edit() {
-    $form_state = array(
-      'display' => &$this->display,
-      'renderer' => &$this,
-      'content_types' => $this->cache->content_types,
-      'no_redirect' => TRUE,
-      'display_title' => !empty($this->cache->display_title),
-      'cache key' => $this->display->cache_key,
-    );
-
-    $output = drupal_build_form('panels_edit_display_form', $form_state);
-    if (empty($form_state['executed']) || !empty($form_state['clicked_button']['preview'])) {
-      return $output;
-    }
-
-    if (!empty($form_state['clicked_button']['#save-display'])) {
-      drupal_set_message(t('Panel content has been updated.'));
-      panels_save_display($this->display);
-    }
-    else {
-      drupal_set_message(t('Your changes have been discarded.'));
-    }
-
-    panels_cache_clear('display', $this->display->did);
-    return $this->display;
-  }
-
-  function add_meta() {
-    parent::add_meta();
-    if ($this->admin) {
-      ctools_include('ajax');
-      ctools_include('modal');
-      ctools_modal_add_js();
-
-      ctools_add_js('panels-base', 'panels');
-      ctools_add_js('display_editor', 'panels');
-      ctools_add_css('panels_dnd', 'panels');
-      ctools_add_css('panels_admin', 'panels');
-    }
-  }
-
-  function render() {
-    // Pass through to normal rendering if not in admin mode.
-    if (!$this->admin) {
-      return parent::render();
-    }
-
-    $this->add_meta();
-
-    $output = '<div class="panels-dnd" id="panels-dnd-main">';
-    $output .= $this->render_layout();
-    $output .= '</div>';
-
-    return $output;
-  }
-
-  function render_region($region_id, $panes) {
-    // Pass through to normal rendering if not in admin mode.
-    if (!$this->admin) {
-      return parent::render_region($region_id, $panes);
-    }
-
-    $content = implode('', $panes);
-
-    $panel_buttons = $this->get_region_links($region_id);
-
-    $output = "<div class='panel-region' id='panel-region-$region_id'>";
-    $output .= $panel_buttons;
-    $output .= "<h2 class='label'>" . check_plain($this->plugins['layout']['regions'][$region_id]) . "</h2>";
-    $output .= $content;
-    $output .= "</div>";
-
-    return $output;
-  }
-
-  function render_pane(&$pane) {
-    // Pass through to normal rendering if not in admin mode.
-    if (!$this->admin) {
-      return parent::render_pane($pane);
-    }
-
-    ctools_include('content');
-    $content_type = ctools_get_content_type($pane->type);
-
-    // This is just used for the title bar of the pane, not the content itself.
-    // If we know the content type, use the appropriate title for that type,
-    // otherwise, set the title using the content itself.
-    $title = ctools_content_admin_title($content_type, $pane->subtype, $pane->configuration, $this->display->context);
-    if (!$title) {
-      $title = t('Deleted/missing content type @type', array('@type' => $pane->type));
-    }
-
-    $buttons = $this->get_pane_links($pane, $content_type);
-
-    // Render administrative buttons for the pane.
-
-    $block = new stdClass();
-    if (empty($content_type)) {
-      $block->title = '<em>' . t('Missing content type') . '</em>';
-      $block->content = t('This pane\'s content type is either missing or has been deleted. This pane will not render.');
-    }
-    else {
-      $block = ctools_content_admin_info($content_type, $pane->subtype, $pane->configuration, $this->display->context);
-    }
-
-    $grabber_class = 'grab-title grabber';
-    // If there are region locks, add them.
-    if (!empty($pane->locks['type'])) {
-      if ($pane->locks['type'] == 'regions') {
-        $settings['Panels']['RegionLock'][$pane->pid] = $pane->locks['regions'];
-        drupal_add_js($settings, 'setting');
-      }
-      else if ($pane->locks['type'] == 'immovable') {
-        $grabber_class = 'grab-title not-grabber';
-      }
-    }
-
-    $output = '';
-    $class = 'panel-pane';
-
-    if (empty($pane->shown)) {
-      $class .= ' hidden-pane';
-    }
-
-    if (isset($this->display->title_pane) && $this->display->title_pane == $pane->pid) {
-      $class .= ' panel-pane-is-title';
-    }
-
-    $output = '<div class="' . $class . '" id="panel-pane-' . $pane->pid . '">';
-
-    if (empty($block->title)) {
-      $block->title = t('No title');
-    }
-
-    $output .= '<div class="' . $grabber_class . '">';
-    if ($buttons) {
-      $output .= '<span class="buttons">' . $buttons . '</span>';
-    }
-    $output .= '<span class="text">' . $title . '</span>';
-    $output .= '</div>'; // grabber
-
-    $output .= '<div class="panel-pane-collapsible">';
-    $output .= '<div class="pane-title">' . $block->title . '</div>';
-    $output .= '<div class="pane-content">' . filter_xss_admin(render($block->content)) . '</div>';
-    $output .= '</div>'; // panel-pane-collapsible
-
-    $output .= '</div>'; // panel-pane
-
-    return $output;
-  }
-
-  /**
-   * Get the style links.
-   *
-   * This is abstracted out since we have styles on both panes and regions.
-   */
-  function get_style_links($type, $id = NULL) {
-    $info = $this->get_style($type, $id);
-    $style = $info[0];
-    $conf = $info[1];
-
-    $style_title = isset($style['title']) ? $style['title'] : t('Default');
-
-    $style_links['title'] = array(
-      'title' => $style_title,
-      'attributes' => array('class' => array('panels-text')),
-    );
-
-    $style_links['change'] = array(
-      'title' => t('Change'),
-      'href' => $this->get_url('style-type', $type, $id),
-      'attributes' => array('class' => array('ctools-use-modal')),
-    );
-
-    $function = $type != 'pane' ? 'settings form' : 'pane settings form';
-    if (panels_plugin_get_function('styles', $style, $function)) {
-      $style_links['settings'] = array(
-        'title' => t('Settings'),
-        'href' => $this->get_url('style-settings', $type, $id),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-    }
-
-    return $style_links;
-  }
-
-  /**
-   * Get the links for a panel display.
-   *
-   * This is abstracted out for easy ajax replacement.
-   */
-  function get_display_links() {
-    $links = array();
-
-    if (user_access('administer panels styles')) {
-      $style_links = $this->get_style_links('display');
-      $links[] = array(
-        'title' => '<span class="dropdown-header">' . t('Style') . '</span>' . theme_links(array('links' => $style_links, 'attributes' => array(), 'heading' => array())),
-        'html' => TRUE,
-        'attributes' => array('class' => array('panels-sub-menu')),
-      );
-    }
-
-    if (user_access('use panels caching features')) {
-      $links[] = array(
-        'title' => '<hr />',
-        'html' => TRUE,
-      );
-
-      $method = isset($this->display->cache['method']) ? $this->display->cache['method'] : 0;
-      $info = panels_get_cache($method);
-      $cache_method = isset($info['title']) ? $info['title'] : t('No caching');
-
-      $cache_links[] = array(
-        'title' => $cache_method,
-        'attributes' => array('class' => array('panels-text')),
-      );
-      $cache_links[] = array(
-        'title' => t('Change'),
-        'href' => $this->get_url('cache-method', 'display'),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-      if (panels_plugin_get_function('cache', $info, 'settings form')) {
-        $cache_links[] = array(
-          'title' => t('Settings'),
-          'href' => $this->get_url('cache-settings', 'display'),
-          'attributes' => array('class' => array('ctools-use-modal')),
-        );
-      }
-
-      $links[] = array(
-        'title' => '<span class="dropdown-header">' . t('Caching') . '</span>' . theme_links(array('links' => $cache_links, 'attributes' => array(), 'heading' => array())),
-        'html' => TRUE,
-        'attributes' => array('class' => array('panels-sub-menu')),
-      );
-    }
-
-    return theme('ctools_dropdown', array('title' => t('Display settings'), 'links' => $links, 'class' => 'panels-display-links'));
-  }
-
-  /**
-   * Render the links to display when editing a region.
-   */
-  function get_region_links($region_id) {
-    if (!empty($this->no_edit_links)) {
-      return '';
-    }
-    $links = array();
-    $links[] = array(
-      'title' => t('Add content'),
-      'href' => $this->get_url('select-content', $region_id),
-      'attributes' => array(
-        'class' => array('ctools-use-modal'),
-      ),
-    );
-
-    if (user_access('administer panels styles')) {
-      $links[] = array(
-        'title' => '<hr />',
-        'html' => TRUE,
-      );
-
-      $style_links = $this->get_style_links('region', $region_id);
-
-      $links[] = array(
-        'title' => '<span class="dropdown-header">' . t('Style') . '</span>' . theme_links(array('links' => $style_links, 'attributes' => array(), 'heading' => array())),
-        'html' => TRUE,
-        'attributes' => array('class' => array('panels-sub-menu')),
-      );
-    }
-
-    return theme('ctools_dropdown', array('title' => theme('image', array('path' => ctools_image_path('icon-addcontent.png', 'panels'))), 'links' => $links, 'image' => TRUE, 'class' => 'pane-add-link panels-region-links-' . $region_id));
-  }
-
-  /**
-   * Render the links to display when editing a pane.
-   */
-  function get_pane_links($pane, $content_type) {
-    if (!empty($this->no_edit_links)) {
-      return '';
-    }
-    $links = array();
-
-    if (!empty($pane->shown)) {
-      $links['top']['disabled'] = array(
-        'title' => t('Disable this pane'),
-        'href' => $this->get_url('hide', $pane->pid),
-        'attributes' => array('class' => array('use-ajax')),
-      );
-    }
-    else {
-      $links['top']['enable'] = array(
-        'title' => t('Enable this pane'),
-        'href' => $this->get_url('show', $pane->pid),
-        'attributes' => array('class' => array('use-ajax')),
-      );
-    }
-
-    if (isset($this->display->title_pane) && $this->display->title_pane == $pane->pid) {
-      $links['top']['panels-set-title'] = array(
-        'title' => t('&#x2713;Panel title'),
-        'html' => TRUE,
-      );
-    }
-    else {
-      $links['top']['panels-set-title'] = array(
-        'title' => t('Panel title'),
-        'href' => $this->get_url('panel-title', $pane->pid),
-        'attributes' => array('class' => array('use-ajax')),
-      );
-    }
-
-    $subtype = ctools_content_get_subtype($content_type, $pane->subtype);
-
-    if (ctools_content_editable($content_type, $subtype, $pane->configuration)) {
-      $links['top']['settings'] = array(
-        'title' => isset($content_type['edit text']) ? $content_type['edit text'] : t('Settings'),
-        'href' => $this->get_url('edit-pane', $pane->pid),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-    }
-
-    if (user_access('administer advanced pane settings')) {
-      $links['top']['css'] = array(
-        'title' => t('CSS properties'),
-        'href' => $this->get_url('pane-css', $pane->pid),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-    }
-
-    if (user_access('administer panels styles')) {
-      $links['style'] = $this->get_style_links('pane', $pane->pid);
-    }
-
-    if (user_access('administer pane access')) {
-      $contexts = $this->display->context;
-      // Make sure we have the logged in user context
-      if (!isset($contexts['logged-in-user'])) {
-        $contexts['logged-in-user'] = ctools_access_get_loggedin_context();
-      }
-
-      $visibility_links = array();
-
-      if (!empty($pane->access['plugins'])) {
-        foreach ($pane->access['plugins'] as $id => $test) {
-          $plugin = ctools_get_access_plugin($test['name']);
-          $access_title = isset($plugin['title']) ? $plugin['title'] : t('Broken/missing access plugin %plugin', array('%plugin' => $test['name']));
-          $access_description = ctools_access_summary($plugin, $contexts, $test);
-
-          $visibility_links[] = array(
-            'title' => $access_description,
-            'href' => $this->get_url('access-configure-test', $pane->pid, $id),
-            'attributes' => array('class' => array('ctools-use-modal', 'panels-italic')),
-          );
-        }
-      }
-      if (empty($visibility_links)) {
-        $visibility_links['no_rules'] = array(
-          'title' => t('No rules'),
-          'attributes' => array('class' => array('panels-text')),
-        );
-      }
-
-      $visibility_links['add_rule'] = array(
-        'title' => t('Add new rule'),
-        'href' => $this->get_url('access-add-test', $pane->pid),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-
-      $visibility_links['settings'] = array(
-        'title' => t('Settings'),
-        'href' => $this->get_url('access-settings', $pane->pid),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-
-      $links['visibility'] = $visibility_links;
-    }
-
-    if (user_access('use panels locks')) {
-      $lock_type = !empty($pane->locks['type']) ? $pane->locks['type'] : 'none';
-      switch ($lock_type) {
-        case 'immovable':
-          $lock_method = t('Immovable');
-          break;
-        case 'regions':
-          $lock_method = t('Regions');
-          break;
-        case 'none':
-        default:
-          $lock_method = t('No lock');
-          break;
-      }
-
-      $lock_links['lock'] = array(
-        'title' => $lock_method,
-        'attributes' => array('class' => array('panels-text')),
-      );
-      $lock_links['change'] = array(
-        'title' => t('Change'),
-        'href' => $this->get_url('lock', $pane->pid),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-
-      $links['lock'] = $lock_links;
-    }
-
-    if (panels_get_caches() && user_access('use panels caching features')) {
-      $method = isset($pane->cache['method']) ? $pane->cache['method'] : 0;
-      $info = panels_get_cache($method);
-      $cache_method = isset($info['title']) ? $info['title'] : t('No caching');
-      $cache_links['title'] = array(
-        'title' => $cache_method,
-        'attributes' => array('class' => array('panels-text')),
-      );
-      $cache_links['change'] = array(
-        'title' => t('Change'),
-        'href' => $this->get_url('cache-method', $pane->pid),
-        'attributes' => array('class' => array('ctools-use-modal')),
-      );
-      if (panels_plugin_get_function('cache', $info, 'settings form')) {
-        $cache_links['settings'] = array(
-          'title' => t('Settings'),
-          'href' => $this->get_url('cache-settings', $pane->pid),
-          'attributes' => array('class' => array('ctools-use-modal')),
-        );
-      }
-
-      $links['cache'] = $cache_links;
-    }
-
-    $links['bottom']['remove'] = array(
-      'title' => t('Remove'),
-      'href' => '#',
-      'attributes' => array(
-        'class' => array('pane-delete'),
-        'id' => "pane-delete-panel-pane-$pane->pid",
-      ),
-    );
-
-    // Allow others to add/remove links from pane context menu.
-    // Grouped by 'top', 'style', 'visibility', 'lock', 'cache' and 'bottom'
-    drupal_alter('get_pane_links', $links, $pane, $content_type);
-
-    $dropdown_links = $links['top'];
-    foreach (array(
-  'style' => 'Style',
-  'visibility' => 'Visibility rules',
-  'lock' => 'Locking',
-  'cache' => 'Caching'
-    ) as $category => $label) {
-      $dropdown_links[] = array(
-        'title' => '<hr />',
-        'html' => TRUE,
-      );
-      $dropdown_links[] = array(
-        'title' => '<span class="dropdown-header">' . t($label) . '</span>' . theme_links(array('links' => $links[$category], 'attributes' => array(), 'heading' => array())),
-        'html' => TRUE,
-        'attributes' => array('class' => array('panels-sub-menu')),
-      );
-    }
-
-    $dropdown_links[] = array(
-      'title' => '<hr />',
-      'html' => TRUE,
-    );
-    $dropdown_links = array_merge($dropdown_links, $links['bottom']);
-
-    return theme('ctools_dropdown', array('title' => theme('image', array('path' => ctools_image_path('icon-configure.png', 'panels'))), 'links' => $dropdown_links, 'image' => TRUE));
-  }
-
-  // -----------------------------------------------------------------------
-  // Display edit AJAX callbacks and helpers.
-
-  /**
-   * Generate a URL path for the AJAX editor.
-   */
-  function get_url() {
-    $args = func_get_args();
-    $command = array_shift($args);
-    $url = 'panels/ajax/' . $this->plugin['name'] . '/' . $command . '/' . $this->display->cache_key;
-    if ($args) {
-      $url .= '/' . implode('/', $args);
-    }
-
-    return $url;
-  }
-
-  /**
-   * AJAX command to show a pane.
-   */
-  function ajax_show($pid = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_ajax_render_error(t('Invalid pane id.'));
-    }
-
-    $this->display->content[$pid]->shown = TRUE;
-    panels_edit_cache_set($this->cache);
-
-    $this->command_update_pane($pid);
-  }
-
-  /**
-   * AJAX command to show a pane.
-   */
-  function ajax_hide($pid = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_ajax_render_error(t('Invalid pane id.'));
-    }
-
-    $this->display->content[$pid]->shown = FALSE;
-    panels_edit_cache_set($this->cache);
-
-    $this->command_update_pane($pid);
-  }
-
-  /**
-   * AJAX command to present a dialog with a list of available content.
-   */
-  function ajax_select_content($region = NULL, $category = NULL) {
-    if (!array_key_exists($region, $this->plugins['layout']['regions'])) {
-      ctools_modal_render(t('Error'), t('Invalid input'));
-    }
-
-    $title = t('Add content to !s', array('!s' => $this->plugins['layout']['regions'][$region]));
-
-    $categories = $this->get_categories($this->cache->content_types);
-
-    if (empty($categories)) {
-      $output = t('There are no content types you may add to this display.');
-    }
-    else {
-      $output = theme('panels_add_content_modal', array('renderer' => $this, 'categories' => $categories, 'category' => $category, 'region' => $region));
-    }
-    $this->commands[] = ctools_modal_command_display($title, $output);
-  }
-
-  /**
-   * Return the category name and the category key of a given content
-   * type.
-   *
-   * @todo -- this should be in CTools.
-   */
-  function get_category($content_type) {
-    if (!empty($content_type['top level'])) {
-      $category = 'root';
-    }
-    else if (isset($content_type['category'])) {
-      if (is_array($content_type['category'])) {
-        list($category, $weight) = $content_type['category'];
-      }
-      else {
-        $category = $content_type['category'];
-      }
-    }
-    else {
-      $category = t('Uncategorized');
-    }
-
-    return array(preg_replace('/[^a-z0-9]/', '-', strtolower($category)), $category);
-  }
-
-
-  /**
-   * Create a list of categories from all of the content type.
-   *
-   * @return array
-   *   An array of categories. Each entry in the array will also be an array
-   *   with 'title' as the printable title of the category, and 'content'
-   *   being an array of all content in the category. Each item in the 'content'
-   *   array contain the array plugin definition so that it can be later
-   *   found in the content array. They will be keyed by the title so that they
-   *   can be sorted.
-   */
-  function get_categories($content_types) {
-    $categories = array();
-    $category_names = array();
-
-    foreach ($content_types as $type_name => $subtypes) {
-      foreach ($subtypes as $subtype_name => $content_type) {
-        list($category_key, $category) = $this->get_category($content_type);
-
-        if (empty($categories[$category_key])) {
-          $categories[$category_key] = array(
-            'title' => $category,
-            'content' => array(),
-          );
-          $category_names[$category_key] = $category;
-        }
-
-        $content_title = filter_xss_admin($content_type['title']);
-
-        // Ensure content with the same title doesn't overwrite each other.
-        while (isset($categories[$category_key]['content'][$content_title])) {
-          $content_title .= '-';
-        }
-
-        $categories[$category_key]['content'][$content_title] = $content_type;
-        $categories[$category_key]['content'][$content_title]['type_name'] = $type_name;
-        $categories[$category_key]['content'][$content_title]['subtype_name'] = $subtype_name;
-      }
-    }
-
-    // Now sort
-    natcasesort($category_names);
-    foreach ($category_names as $category => $name) {
-      $output[$category] = $categories[$category];
-    }
-
-    return $output;
-  }
-
-  /**
-   * AJAX entry point to add a new pane.
-   */
-  function ajax_add_pane($region = NULL, $type_name = NULL, $subtype_name = NULL, $step = NULL) {
-    $content_type = ctools_get_content_type($type_name);
-    $subtype = ctools_content_get_subtype($content_type, $subtype_name);
-
-    // Determine if we are adding a different pane than previously cached. This
-    // is used to load the different pane into cache so that multistep forms
-    // have the correct context instead of a previously cached version that
-    // does not match the pane currently being added.
-    $is_different_pane = FALSE;
-    if (isset($this->cache) && isset($this->cache->new_pane)) {
-      $diff_type = $type_name != $this->cache->new_pane->type;
-      $diff_subtype = $subtype_name != $this->cache->new_pane->subtype;
-
-      $is_different_pane = $diff_type || $diff_subtype;
-    }
-
-    if (!isset($step) || !isset($this->cache->new_pane) || $is_different_pane) {
-      $pane = panels_new_pane($type_name, $subtype_name, TRUE);
-      $this->cache->new_pane = &$pane;
-    }
-    else {
-      $pane = &$this->cache->new_pane;
-    }
-
-    $form_state = array(
-      'display' => &$this->cache->display,
-      'contexts' => $this->cache->display->context,
-      'pane' => &$pane,
-      'cache_key' => $this->display->cache_key,
-      'display cache' => &$this->cache,
-      'ajax' => TRUE,
-      'modal' => TRUE,
-      // This will force the system to not automatically render.
-      'modal return' => TRUE,
-      'commands' => array(),
-    );
-
-    $form_info = array(
-      'path' => $this->get_url('add-pane', $region, $type_name, $subtype_name, '%step'),
-      'show cancel' => TRUE,
-      'next callback' => 'panels_ajax_edit_pane_next',
-      'finish callback' => 'panels_ajax_edit_pane_finish',
-      'cancel callback' => 'panels_ajax_edit_pane_cancel',
-    );
-
-    $output = ctools_content_form('add', $form_info, $form_state, $content_type, $pane->subtype, $subtype, $pane->configuration, $step);
-
-    // If $rc is FALSE, there was no actual form.
-    if ($output === FALSE || !empty($form_state['complete'])) {
-      // References get blown away with AJAX caching. This will fix that.
-      $pane = $form_state['pane'];
-      unset($this->cache->new_pane);
-
-      // Add the pane to the display
-      $this->display->add_pane($pane, $region);
-      panels_edit_cache_set($this->cache);
-
-      // Tell the client to draw the pane
-      $this->command_add_pane($pane);
-
-      // Dismiss the modal.
-      $this->commands[] = ctools_modal_command_dismiss();
-    }
-    else if (!empty($form_state['cancel'])) {
-      // If cancelling, return to the activity.
-      list($category_key, $category) = $this->get_category($subtype);
-      $this->ajax_select_content($region, $category_key);
-    }
-    else {
-      // This overwrites any previous commands.
-      $this->commands = ctools_modal_form_render($form_state, $output);
-    }
-  }
-
-  /**
-   * AJAX entry point to edit a pane.
-   */
-  function ajax_edit_pane($pid = NULL, $step = NULL) {
-    if (empty($this->cache->display->content[$pid])) {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    $pane = &$this->cache->display->content[$pid];
-
-    $content_type = ctools_get_content_type($pane->type);
-    $subtype = ctools_content_get_subtype($content_type, $pane->subtype);
-
-    $form_state = array(
-      'display' => &$this->cache->display,
-      'contexts' => $this->cache->display->context,
-      'pane' => &$pane,
-      'display cache' => &$this->cache,
-      'ajax' => TRUE,
-      'modal' => TRUE,
-      'modal return' => TRUE,
-      'commands' => array(),
-    );
-
-    $form_info = array(
-      'path' => $this->get_url('edit-pane', $pid, '%step'),
-      'show cancel' => TRUE,
-      'next callback' => 'panels_ajax_edit_pane_next',
-      'finish callback' => 'panels_ajax_edit_pane_finish',
-      'cancel callback' => 'panels_ajax_edit_pane_cancel',
-    );
-
-    $output = ctools_content_form('edit', $form_info, $form_state, $content_type, $pane->subtype,  $subtype, $pane->configuration, $step);
-
-    // If $rc is FALSE, there was no actual form.
-    if ($output === FALSE || !empty($form_state['cancel'])) {
-      // Dismiss the modal.
-      $this->commands[] = ctools_modal_command_dismiss();
-    }
-    else if (!empty($form_state['complete'])) {
-      // References get blown away with AJAX caching. This will fix that.
-      $this->cache->display->content[$pid] = $form_state['pane'];
-
-      // Conditionally overwrite the context for this panel if present in the form state.
-      if (!empty($form_state['display_cache']->display->context)) {
-        $this->cache->display->context = $form_state['display_cache']->display->context;
-      }
-
-      panels_edit_cache_set($this->cache);
-      $this->command_update_pane($pid);
-      $this->commands[] = ctools_modal_command_dismiss();
-    }
-    else {
-      // This overwrites any previous commands.
-      $this->commands = ctools_modal_form_render($form_state, $output);
-    }
-  }
-
-  /**
-   * AJAX entry point to select which pane is currently the title.
-   *
-   * @param string $pid
-   *   The pane id for the pane object whose title state we're setting.
-   */
-  function ajax_panel_title($pid = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_ajax_render_error(t('Invalid pane id.'));
-    }
-
-    $pane = &$this->display->content[$pid];
-
-    $old_title = !empty($this->display->title_pane) ? $this->display->title_pane : NULL;
-    $this->display->title_pane = $pid;
-
-    panels_edit_cache_set($this->cache);
-
-    $this->command_update_pane($pane);
-
-    if ($old_title && !empty($this->cache->display->content[$old_title])) {
-      $this->command_update_pane($this->cache->display->content[$old_title]);
-    }
-  }
-
-  /**
-   * AJAX entry point to configure the cache method for a pane or the display.
-   *
-   * @param string $pid
-   *   Either a pane id for a pane in the display, or 'display' to edit the
-   *   display cache settings.
-   */
-  function ajax_cache_method($pid = NULL) {
-    ctools_include('content');
-    // This lets us choose whether we're doing the display's cache or
-    // a pane's.
-    if ($pid == 'display') {
-      $conf = &$this->display->cache;
-      $title = t('Cache method for this display');
-    }
-    else if (!empty($this->display->content[$pid])) {
-      $pane = &$this->display->content[$pid];
-      $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-      $conf = &$pane->cache;
-      $title = t('Cache method for !subtype_title', array('!subtype_title' => $subtype['title']));
-    }
-    else {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    $form_state = array(
-      'display' => &$this->display,
-      'conf' => &$conf,
-      'title' => $title,
-      'ajax' => TRUE,
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_cache_method_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    // Preserve this; this way we don't actually change the method until they
-    // have saved the form.
-    $info = panels_get_cache($form_state['method']);
-    $function = panels_plugin_get_function('cache', $info, 'settings form');
-    if (!$function) {
-      $conf['method'] = $form_state['method'];
-      $conf['settings'] = array();
-      panels_edit_cache_set($this->cache);
-
-      $this->commands[] = ctools_modal_command_dismiss();
-
-      if ($pid != 'display') {
-        $this->command_update_pane($pane);
-      }
-      else {
-        $this->command_update_display_links();
-      }
-    }
-    else {
-      $this->cache->method = $form_state['method'];
-      panels_edit_cache_set($this->cache);
-      // send them to next form.
-      return $this->ajax_cache_settings($pid);
-    }
-  }
-
-  /**
-   * AJAX entry point to configure the cache settings for a pane or the display.
-   *
-   * @param string $pid
-   *   Either a pane id for a pane in the display, or 'display' to edit the
-   *   display cache settings.
-   */
-  function ajax_cache_settings($pid = 0) {
-    ctools_include('content');
-
-    // This lets us choose whether we're doing the display's cache or
-    // a pane's.
-    if ($pid == 'display') {
-      $conf = &$this->display->cache;
-      $title = t('Cache settings for this display');
-    }
-    else if (!empty($this->display->content[$pid])) {
-      $pane = &$this->display->content[$pid];
-      $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-
-      $conf = &$pane->cache;
-      $title = t('Cache settings for !subtype_title', array('!subtype_title' => $subtype['title']));
-    }
-    else {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    if (isset($this->cache->method) && (empty($conf['method']) || $conf['method'] != $this->cache->method)) {
-      $conf['method'] = $this->cache->method;
-      $info = panels_get_cache($conf['method']);
-      $conf['settings'] = isset($info['defaults']) ? $info['defaults'] : array();
-    }
-
-    $form_state = array(
-      'display' => &$this->display,
-      'pid' => $pid,
-      'conf' => &$conf,
-      'ajax' => TRUE,
-      'title' => $title,
-      'url' => url($this->get_url('cache-settings', $pid), array('absolute' => TRUE)),
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_cache_settings_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    panels_edit_cache_set($this->cache);
-
-    $this->commands[] = ctools_modal_command_dismiss();
-
-    if ($pid != 'display') {
-      $this->command_update_pane($pane);
-    }
-    else {
-      $this->command_update_display_links();
-    }
-  }
-
-  /**
-   * AJAX entry point to select the style for a display, region or pane.
-   *
-   * @param string $type
-   *   Either display, region or pane
-   * @param $pid
-   *   The pane id, if a pane. The region id, if a region.
-   */
-  function ajax_style_type($type, $pid = NULL) {
-    // This lets us choose whether we're doing the display's cache or
-    // a pane's.
-    switch ($type) {
-      case 'display':
-        $style = isset($this->display->panel_settings['style']) ? $this->display->panel_settings['style'] : 'default';
-        $title = t('Default style for this display');
-        break;
-
-      case 'region':
-        $style = isset($this->display->panel_settings[$pid]['style']) ? $this->display->panel_settings[$pid]['style'] : '-1'; // -1 signifies to use the default setting.
-        $title = t('Panel style for region "!region"', array('!region' => $this->plugins['layout']['regions'][$pid]));
-        break;
-
-      case 'pane':
-        ctools_include('content');
-        $pane = &$this->display->content[$pid];
-        $style = isset($pane->style['style']) ? $pane->style['style'] : 'default';
-        $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-        $title = t('Pane style for "!pane"', array('!pane' => $subtype['title']));
-        break;
-
-      default:
-        ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-    $info = $this->get_style($type, $pid);
-    $style_plugin = $info[0];
-    $style_settings = $info[1];
-
-    // Backward compatibility: Translate old-style stylizer to new style
-    // stylizer.
-    if ($style == 'stylizer' && !empty($style_settings['style']) && $style_settings['style'] != '$') {
-      $style = 'stylizer:' . $style_settings['style'];
-    }
-
-    $form_state = array(
-      'display' => &$this->display,
-      'style' => $style,
-      'pane' => ($type == 'pane') ? $this->display->content[$pid] : NULL,
-      'title' => $title,
-      'ajax' => TRUE,
-      'type' => $type,
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_style_type_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    // Preserve this; this way we don't actually change the method until they
-    // have saved the form.
-    $style = panels_get_style($form_state['style']);
-    $function = panels_plugin_get_function('styles', $style, ($type == 'pane') ? 'pane settings form' : 'settings form');
-    if (!$function) {
-      if (isset($this->cache->style)) {
-        unset($this->cache->style);
-      }
-
-      // If there's no settings form, just change the style and exit.
-      switch($type) {
-        case 'display':
-          $this->display->panel_settings['style'] = $form_state['style'];
-          if (isset($this->display->panel_settings['style_settings']['default'])) {
-            unset($this->display->panel_settings['style_settings']['default']);
-          }
-          break;
-
-        case 'region':
-          $this->display->panel_settings[$pid]['style'] = $form_state['style'];
-          if (isset($this->display->panel_settings['style_settings'][$pid])) {
-            unset($this->display->panel_settings['style_settings'][$pid]);
-          }
-          break;
-
-        case 'pane':
-          $pane->style['style'] = $form_state['style'];
-          if (isset($pane->style['settings'])) {
-            unset($pane->style['settings']);
-          }
-
-          break;
-      }
-      panels_edit_cache_set($this->cache);
-
-      $this->commands[] = ctools_modal_command_dismiss();
-
-      if ($type == 'pane') {
-        $this->command_update_pane($pane);
-      }
-      else if ($type == 'region') {
-        $this->command_update_region_links($pid);
-      }
-      else {
-        $this->command_update_display_links();
-      }
-    }
-    else {
-      if ($form_state['style'] != $form_state['old_style']) {
-        $this->cache->style = $form_state['style'];
-        panels_edit_cache_set($this->cache);
-      }
-
-      // send them to next form.
-      return $this->ajax_style_settings($type, $pid);
-    }
-  }
-
-  /**
-   * Get the appropriate style from the panel in the cache.
-   *
-   * Since we have styles for regions, panes and the display itself, and
-   * they are stored differently, we use this method to simplify getting
-   * style information into a way that's easy to cope with.
-   */
-  function get_style($type, $pid = '') {
-    if (isset($this->cache->style)) {
-      $style = panels_get_style($this->cache->style);
-      $defaults = isset($style['defaults']) ? $style['defaults'] : array();
-      // Get the &$conf variable based upon whose style we're editing.
-      switch ($type) {
-        case 'display':
-          $this->display->panel_settings['style'] = $this->cache->style;
-          $this->display->panel_settings['style_settings']['default'] = $defaults;
-          break;
-
-        case 'region':
-          $this->display->panel_settings[$pid]['style'] = $this->cache->style;
-          $this->display->panel_settings['style_settings'][$pid] = $defaults;
-          break;
-
-        case 'pane':
-          $pane = &$this->display->content[$pid];
-          $pane->style['style'] = $this->cache->style;
-          $pane->style['settings'] = $defaults;
-          $conf = &$pane->style['settings'];
-          break;
-      }
-    }
-    else {
-      switch ($type) {
-        case 'display':
-          $style = panels_get_style((!empty($this->display->panel_settings['style'])) ? $this->display->panel_settings['style'] : 'default');
-          break;
-
-        case 'region':
-          $style = panels_get_style((!empty($this->display->panel_settings[$pid]['style'])) ? $this->display->panel_settings[$pid]['style'] : '-1');
-          break;
-
-        case 'pane':
-          $pane = &$this->display->content[$pid];
-          $style = panels_get_style(!empty($pane->style['style']) ? $pane->style['style'] : 'default');
-          break;
-      }
-    }
-
-    // Set up our $conf reference.
-    switch ($type) {
-      case 'display':
-        $conf = &$this->display->panel_settings['style_settings']['default'];
-        break;
-
-      case 'region':
-        $conf = &$this->display->panel_settings['style_settings'][$pid];
-        break;
-
-      case 'pane':
-        ctools_include('content');
-        $pane = &$this->display->content[$pid];
-        $conf = &$pane->style['settings'];
-        break;
-    }
-
-    // Backward compatibility: Translate old-style stylizer to new style
-    // stylizer.
-    if ($style['name'] == 'stylizer' && !empty($conf['style']) && $conf['style'] != '$') {
-      $style = panels_get_style('stylizer:' . $conf['style']);
-    }
-
-    return array($style, &$conf);
-  }
-
-  /**
-   * AJAX entry point to configure the style for a display, region or pane.
-   *
-   * @param string $type
-   *   Either display, region or pane
-   * @param $pid
-   *   The pane id, if a pane. The region id, if a region.
-   */
-  function ajax_style_settings($type, $pid = '') {
-    $info = $this->get_style($type, $pid);
-    $style = $info[0];
-    $conf = &$info[1];
-
-    switch ($type) {
-      case 'display':
-        $title = t('Style settings for @style (display)', array('@style' => $style['title']));
-        break;
-
-      case 'region':
-        $title = t('Style settings for style @style (Region "!region")', array('@style' => $style['title'], '!region' => $this->plugins['layout']['regions'][$pid]));
-        break;
-
-      case 'pane':
-        ctools_include('content');
-        $pane = &$this->display->content[$pid];
-        $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-        $title = t('Style settings for style @style (Pane "!pane")', array('@style' => $style['title'], '!pane' => $subtype['title']));
-        break;
-    }
-
-    $form_state = array(
-      'display' => &$this->display,
-      'type' => $type,
-      'pid' => $pid,
-      'conf' => &$conf,
-      'style' => $style,
-      'ajax' => TRUE,
-      'title' => $title,
-      'url' => url($this->get_url('style-settings', $type, $pid), array('absolute' => TRUE)),
-      'renderer' => &$this,
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_style_settings_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    if (isset($this->cache->style)) {
-      unset($this->cache->style);
-    }
-
-    // Copy settings from form state back into the cache.
-    if(!empty($form_state['values']['settings'])) {
-      $this->cache->display->content[$pid]->style['settings'] = $form_state['values']['settings'];
-    }
-
-    panels_edit_cache_set($this->cache);
-
-    $this->commands[] = ctools_modal_command_dismiss();
-
-    if ($type == 'pane') {
-      $this->command_update_pane($pane);
-    }
-    else if ($type == 'region') {
-      $this->command_update_region_links($pid);
-    }
-    else {
-      $this->command_update_display_links();
-    }
-  }
-
-  /**
-   * AJAX entry point to configure CSS for a pane.
-   *
-   * @param $pid
-   *   The pane id to edit.
-   */
-  function ajax_pane_css($pid = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    $pane = &$this->display->content[$pid];
-    $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-
-    $form_state = array(
-      'display' => &$this->display,
-      'pane' => &$pane,
-      'ajax' => TRUE,
-      'title' => t('Configure CSS on !subtype_title', array('!subtype_title' => $subtype['title'])),
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_configure_pane_css_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    panels_edit_cache_set($this->cache);
-    $this->command_update_pane($pid);
-    $this->commands[] = ctools_modal_command_dismiss();
-  }
-
-  /**
-   * AJAX entry point to configure CSS for a pane.
-   *
-   * @param $pid
-   *   The pane id to edit.
-   */
-  function ajax_lock($pid = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    $pane = &$this->display->content[$pid];
-    $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-
-    $form_state = array(
-      'display' => &$this->display,
-      'pane' => &$pane,
-      'ajax' => TRUE,
-      'title' => t('Configure lock on !subtype_title', array('!subtype_title' => $subtype['title'])),
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_configure_pane_lock_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    panels_edit_cache_set($this->cache);
-    $this->command_update_pane($pid);
-    $this->commands[] = ctools_modal_command_dismiss();
-  }
-
-  /**
-   * AJAX entry point to configure access settings for a pane.
-   *
-   * @param $pid
-   *   The pane id to edit.
-   */
-  function ajax_access_settings($pid = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    $pane = &$this->display->content[$pid];
-    $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-
-    $form_state = array(
-      'display' => &$this->display,
-      'pane' => &$pane,
-      'ajax' => TRUE,
-      'title' => t('Access settings on !subtype_title', array('!subtype_title' => $subtype['title'])),
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_configure_access_settings_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    panels_edit_cache_set($this->cache);
-    $this->command_update_pane($pid);
-    $this->commands[] = ctools_modal_command_dismiss();
-  }
-
-  /**
-   * AJAX entry point for to add a visibility rule.
-   */
-  function ajax_access_add_test($pid = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    $pane = &$this->display->content[$pid];
-    $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-
-    $form_state = array(
-      'display' => &$this->display,
-      'pane' => &$pane,
-      'ajax' => TRUE,
-      'title' => t('Add visibility rule for !subtype_title', array('!subtype_title' => $subtype['title'])),
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_add_access_test_form', $form_state);
-    if (!empty($form_state['executed'])) {
-      // Set up the plugin in cache
-      $plugin = ctools_get_access_plugin($form_state['values']['type']);
-      $this->cache->new_plugin = ctools_access_new_test($plugin);
-      panels_edit_cache_set($this->cache);
-
-      // go to the next step.
-      return $this->ajax_access_configure_test($pid, 'add');
-    }
-
-    $this->commands = $output;
-  }
-
-  /**
-   * AJAX entry point for to configure vsibility rule.
-   */
-  function ajax_access_configure_test($pid = NULL, $id = NULL) {
-    if (empty($this->display->content[$pid])) {
-      ctools_modal_render(t('Error'), t('Invalid pane id.'));
-    }
-
-    $pane = &$this->display->content[$pid];
-    $subtype = ctools_content_get_subtype($pane->type, $pane->subtype);
-
-    // Set this up here because $id gets changed later.
-    $url = $this->get_url('access-configure-test', $pid, $id);
-
-    // If we're adding a new one, get the stored data from cache and
-    // add it. It's stored as a cache so that if this is closed
-    // we don't accidentally add an unconfigured plugin.
-    if ($id == 'add') {
-      $pane->access['plugins'][] = $this->cache->new_plugin;
-      $id = max(array_keys($pane->access['plugins']));
-    }
-    else if (empty($pane->access['plugins'][$id])) {
-      ctools_modal_render(t('Error'), t('Invalid test id.'));
-    }
-
-    $form_state = array(
-      'display' => &$this->display,
-      'pane' => &$pane,
-      'ajax' => TRUE,
-      'title' => t('Configure visibility rule for !subtype_title', array('!subtype_title' => $subtype['title'])),
-      'test' => &$pane->access['plugins'][$id],
-      'plugin' => ctools_get_access_plugin($pane->access['plugins'][$id]['name']),
-      'url' => url($url, array('absolute' => TRUE)),
-    );
-
-    $output = ctools_modal_form_wrapper('panels_edit_configure_access_test_form', $form_state);
-    if (empty($form_state['executed'])) {
-      $this->commands = $output;
-      return;
-    }
-
-    // Unset the new plugin
-    if (isset($this->cache->new_plugin)) {
-      unset($this->cache->new_plugin);
-    }
-
-    if (!empty($form_state['remove'])) {
-      unset($pane->access['plugins'][$id]);
-    }
-
-    panels_edit_cache_set($this->cache);
-    $this->command_update_pane($pid);
-    $this->commands[] = ctools_modal_command_dismiss();
-  }
-
-  /**
-   * AJAX Router function for layout owned AJAX calls.
-   *
-   * Layouts like the flexible layout builder need callbacks of their own.
-   * This allows those layouts to simply declare their callbacks and use
-   * them with $this->get_url('layout', $command).
-   */
-  function ajax_layout() {
-    $args = func_get_args();
-    if (empty($args)) {
-      return MENU_NOT_FOUND;
-    }
-
-    $command = array_shift($args);
-    if (empty($this->plugins['layout']['ajax'][$command]) || !function_exists($this->plugins['layout']['ajax'][$command])) {
-      return MENU_NOT_FOUND;
-    }
-
-    // Make sure the this is always available to the called functions.
-    array_unshift($args, $this);
-    return call_user_func_array($this->plugins['layout']['ajax'][$command], $args);
-  }
-
-  /**
-   * AJAX Router function for style owned AJAX calls.
-   *
-   * Styles like the stylizer need AJAX callbacks of their own. This
-   * allows the system to figure out which style is being referenced,
-   * load it, and execute the callback.
-   *
-   * This allows those layouts to simply declare their callbacks and use
-   * them using $this->get_url('style', $command, $type, $pid).
-   */
-  function ajax_style() {
-    $args = func_get_args();
-    if (count($args) < 3) {
-      return MENU_NOT_FOUND;
-    }
-
-    $command = array_shift($args);
-    $type = array_shift($args);
-    $pid = array_shift($args);
-
-    $info = $this->get_style($type, $pid);
-
-    $style = $info[0];
-    $conf = &$info[1];
-
-    if (empty($style['ajax'][$command]) || !function_exists($style['ajax'][$command])) {
-      return MENU_NOT_FOUND;
-    }
-
-    // Make sure the this is always available to the called functions.
-    $args = array_merge(array(&$this, $style, &$conf, $type, $pid), $args);
-    return call_user_func_array($style['ajax'][$command], $args);
-  }
-
-  // ------------------------------------------------------------------------
-  // AJAX command generators
-  //
-  // These are used to make sure that child implementations can control their
-  // own AJAX commands as needed.
-
-  /**
-   * Create a command array to redraw a pane.
-   */
-  function command_update_pane($pid) {
-    if (is_object($pid)) {
-      $pane = $pid;
-    }
-    else {
-      $pane = $this->display->content[$pid];
-    }
-
-    $this->commands[] = ajax_command_replace("#panel-pane-$pane->pid", $this->render_pane($pane));
-    $this->commands[] = ajax_command_changed("#panel-pane-$pane->pid", "div.grab-title span.text");
-  }
-
-  /**
-   * Create a command array to add a new pane.
-   */
-  function command_add_pane($pid) {
-    if (is_object($pid)) {
-      $pane = $pid;
-    }
-    else {
-      $pane = $this->display->content[$pid];
-    }
-
-    $this->commands[] = ajax_command_append("#panel-region-$pane->panel", $this->render_pane($pane));
-    $this->commands[] = ajax_command_changed("#panel-pane-$pane->pid", "div.grab-title span.text");
-  }
-
-  /**
-   * Create a command to update the links on a display after a change was made.
-   */
-  function command_update_display_links() {
-    $this->commands[] = ajax_command_replace('.panels-display-links', $this->get_display_links());
-  }
-
-  /**
-   * Create a command to update the links on a region after a change was made.
-   */
-  function command_update_region_links($id) {
-    $this->commands[] = ajax_command_replace('.panels-region-links-' . $id, $this->get_region_links($id));
-  }
-}
-
-/**
- * Handle the 'next' click on the add/edit pane form wizard.
- *
- * All we need to do is store the updated pane in the cache.
- */
-function panels_ajax_edit_pane_next(&$form_state) {
-  $form_state['display cache']->new_pane = $form_state['pane'];
-  panels_edit_cache_set($form_state['display cache']);
-}
-
-/**
- * Handle the 'finish' click on teh add/edit pane form wizard.
- *
- * All we need to do is set a flag so the return can handle adding
- * the pane.
- */
-function panels_ajax_edit_pane_finish(&$form_state) {
-  $form_state['complete'] = TRUE;
-  return;
-}
-
-/**
- * Handle the 'cancel' click on the add/edit pane form wizard.
- */
-function panels_ajax_edit_pane_cancel(&$form_state) {
-  $form_state['cancel'] = TRUE;
-  return;
-}
-
-// --------------------------------------------------------------------------
-// Forms for the editor object
-
-/**
- * Choose cache method form
- */
-function panels_edit_cache_method_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $conf = &$form_state['conf'];
-
-  // Set to 0 to ensure we get a selected radio.
-  if (!isset($conf['method'])) {
-    $conf['method'] = 0;
-  }
-
-  $caches = panels_get_caches();
-  if (empty($caches)) {
-    $form['markup'] = array('#value' => t('No caching options are available at this time. Please enable a panels caching module in order to use caching options.'));
-    return $form;
-  }
-
-  $options[0] = t('No caching');
-  foreach ($caches as $cache => $info) {
-    $options[$cache] = check_plain($info['title']);
-  }
-
-  $form['method'] = array(
-    '#prefix' => '<div class="no-float">',
-    '#suffix' => '</div>',
-    '#type' => 'radios',
-    '#title' => t('Method'),
-    '#options' => $options,
-    '#default_value' => $conf['method'],
-  );
-
-  $form['submit'] = array(
-    '#type' => 'submit',
-    '#value' => t('Next'),
-  );
-  return $form;
-}
-
-/**
- * Submit callback for panels_edit_cache_method_form.
- *
- * All this needs to do is return the method.
- */
-function panels_edit_cache_method_form_submit($form, &$form_state) {
-  $form_state['method'] = $form_state['values']['method'];
-}
-
-/**
- * Cache settings form
- */
-function panels_edit_cache_settings_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $conf = &$form_state['conf'];
-  $pid = $form_state['pid'];
-  $info = panels_get_cache($conf['method']);
-
-  $form['#action'] = $form_state['url'];
-
-  $form['description'] = array(
-    '#prefix' => '<div class="description">',
-    '#suffix' => '</div>',
-    '#value' => check_plain($info['description']),
-  );
-
-  $function = panels_plugin_get_function('cache', $conf['method'], 'settings form');
-
-  $form['settings'] = $function($conf['settings'], $display, $pid);
-  $form['settings']['#tree'] = TRUE;
-
-  $form['display'] = array(
-    '#type' => 'value',
-    '#value' => $display,
-  );
-
-  $form['pid'] = array(
-    '#type' => 'value',
-    '#value' => $pid,
-  );
-
-  $form['submit'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-/**
- * Validate cache settings.
- */
-function panels_edit_cache_settings_form_validate($form, &$form_state) {
-  if ($function = panels_plugin_get_function('cache', $form_state['conf']['method'], 'settings form validate')) {
-    $function($form, $form_state['values']['settings']);
-  }
-}
-
-/**
- * Allows panel styles to validate their style settings.
- */
-function panels_edit_cache_settings_form_submit($form, &$form_state) {
-  if ($function = panels_plugin_get_function('cache', $form_state['conf']['method'], 'settings form submit')) {
-    $function($form_state['values']['settings']);
-  }
-
-  $form_state['conf']['settings'] = $form_state['values']['settings'];
-}
-
-/**
- * Choose style form
- */
-function panels_edit_style_type_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $style = $form_state['style'];
-  $type = $form_state['type'];
-
-  $styles = panels_get_styles();
-
-  $function = ($type == 'pane' ? 'render pane' : 'render region');
-  $options = array();
-  if ($type == 'region') {
-    $options[-1] = t('Use display default style');
-  }
-
-  uasort($styles, 'ctools_plugin_sort');
-
-  foreach ($styles as $id => $info) {
-    if (empty($info['hidden']) && (!empty($info[$function]) || $id == 'default')) {
-      $options[$id] = check_plain($info['title']);
-    }
-  }
-
-  $form['style'] = array(
-    '#prefix' => '<div class="no-float">',
-    '#suffix' => '</div>',
-    '#type' => 'radios',
-    '#title' => t('Style'),
-    '#options' => $options,
-    '#default_value' => $style,
-  );
-
-  $form['submit'] = array(
-    '#type' => 'submit',
-    '#value' => t('Next'),
-  );
-  return $form;
-}
-
-/**
- * Submit callback for panels_edit_style_type_form.
- *
- * All this needs to do is return the method.
- */
-function panels_edit_style_type_form_submit($form, &$form_state) {
-  $form_state['old_style'] = $form_state['style'];
-  $form_state['style'] = $form_state['values']['style'];
-}
-
-/**
- * Style settings form
- */
-function panels_edit_style_settings_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $conf = &$form_state['conf'];
-  $pid = $form_state['pid'];
-  $style = $form_state['style'];
-  $type = $form_state['type'];
-
-  $form['#action'] = $form_state['url'];
-
-  $form['description'] = array(
-    '#prefix' => '<div class="description">',
-    '#suffix' => '</div>',
-    '#value' => check_plain($style['description']),
-  );
-
-  $function = panels_plugin_get_function('styles', $style, ($type == 'pane') ? 'pane settings form' : 'settings form');
-
-  $form['settings'] = $function($conf, $display, $pid, $type, $form_state);
-  $form['settings']['#tree'] = TRUE;
-
-  $form['submit'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-/**
- * Validate style settings.
- */
-function panels_edit_style_settings_form_validate($form, &$form_state) {
-  $name = $form_state['type'] == 'pane' ? 'pane settings form validate' : 'settings form validate';
-  if ($function = panels_plugin_get_function('styles', $form_state['style'], $name)) {
-    $function($form, $form_state['values']['settings'], $form_state);
-  }
-}
-
-/**
- * Allows panel styles to validate their style settings.
- */
-function panels_edit_style_settings_form_submit($form, &$form_state) {
-  $name = $form_state['type'] == 'pane' ? 'pane settings form submit' : 'settings form submit';
-  if ($function = panels_plugin_get_function('styles', $form_state['style'], $name)) {
-    $function($form, $form_state['values']['settings'], $form_state);
-  }
-
-  $form_state['conf'] = $form_state['values']['settings'];
-}
-
-
-/**
- * Configure CSS on a pane form.
- */
-function panels_edit_configure_pane_css_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $pane = &$form_state['pane'];
-
-  $form['css_id'] = array(
-    '#type' => 'textfield',
-    '#default_value' => isset($pane->css['css_id']) ? $pane->css['css_id'] : '',
-    '#title' => t('CSS ID'),
-    '#description' => t('CSS ID to apply to this pane. This may be blank.'),
-  );
-  $form['css_class'] = array(
-    '#type' => 'textfield',
-    '#default_value' => isset($pane->css['css_class']) ? $pane->css['css_class'] : '',
-    '#title' => t('CSS class'),
-    '#description' => t('CSS class to apply to this pane. This may be blank.'),
-  );
-
-  $form['next'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-/**
- * FAPI submission function for the CSS configure form.
- *
- * All this does is set up $pane properly. The caller is responsible for
- * actually storing this somewhere.
- */
-function panels_edit_configure_pane_css_form_submit($form, &$form_state) {
-  $pane = &$form_state['pane'];
-  $display = $form_state['display'];
-
-  $pane->css['css_id'] = $form_state['values']['css_id'];
-  $pane->css['css_class'] = $form_state['values']['css_class'];
-}
-
-/**
- * Configure lock on a pane form.
- */
-function panels_edit_configure_pane_lock_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $pane = &$form_state['pane'];
-
-  if (empty($pane->locks)) {
-    $pane->locks = array('type' => 'none', 'regions' => array());
-  }
-
-  $form['type'] = array(
-    '#type' => 'radios',
-    '#title' => t('Lock type'),
-    '#options' => array(
-      'none' => t('No lock'),
-      'immovable' => t('Immovable'),
-      'regions' => t('Regions'),
-    ),
-    '#default_value' => $pane->locks['type'],
-  );
-
-  $layout = panels_get_layout($display->layout);
-  $regions = panels_get_regions($layout, $display);
-
-  $form['regions'] = array(
-    '#type' => 'checkboxes',
-    '#title' => t('Regions'),
-    '#options' => $regions,
-    '#description' => t('Select which regions this pane can be moved to.'),
-    '#dependency' => array(
-      'radio:type' => array('regions'),
-    ),
-    '#default_value' => $pane->locks['regions'],
-  );
-
-  $form['#after_build'][] = 'panels_edit_configure_pane_lock_form_after_build';
-  $form['next'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-function panels_edit_configure_pane_lock_form_after_build($element, $form_state) {
-  $region = $form_state['pane']->panel;
-  $element['regions'][$region]['#required'] = TRUE;
-  $element['regions'][$region]['#disabled'] = TRUE;
-  $element['regions'][$region]['#value'] = TRUE;
-  $element['regions'][$region]['#checked'] = TRUE;
-  $element['regions'][$region]['#attributes']['disabled'] = TRUE;
-  return $element;
-}
-
-/**
- * FAPI submission function for the lock configure form.
- *
- * All this does is set up $pane properly. The caller is responsible for
- * actually storing this somewhere.
- */
-function panels_edit_configure_pane_lock_form_submit($form, &$form_state) {
-  $pane = &$form_state['pane'];
-  $display = $form_state['display'];
-
-  // We set this to true but forms do not submit disabled checkboxes
-  // and fapi is ignoring the #value directive probably because it
-  // is checkboxes:
-  $region = $form_state['pane']->panel;
-  $form_state['values']['regions'][$region] = $region;
-
-  $pane->locks['type'] = $form_state['values']['type'];
-  $pane->locks['regions'] = array_filter($form_state['values']['regions']);
-}
-
-/**
- * Form to control basic visibility settings.
- */
-function panels_edit_configure_access_settings_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $pane = &$form_state['pane'];
-
-  $form['logic'] = array(
-    '#type' => 'radios',
-    '#options' => array(
-      'and' => t('All criteria must pass.'),
-      'or' => t('Only one criterion must pass.'),
-    ),
-    '#default_value' => isset($pane->access['logic']) ? $pane->access['logic'] : 'and',
-  );
-
-  $form['next'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  return $form;
-}
-
-/**
- * FAPI submission function for the edit access settings form.
- *
- * All this does is set up $pane properly. The caller is responsible for
- * actually storing this somewhere.
- */
-function panels_edit_configure_access_settings_form_submit($form, &$form_state) {
-  $pane = &$form_state['pane'];
-  $display = $form_state['display'];
-
-  $pane->access['logic'] = $form_state['values']['logic'];
-}
-
-/**
- * Form to add a visibility rule.
- */
-function panels_edit_add_access_test_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $pane = &$form_state['pane'];
-
-  $plugins = ctools_get_relevant_access_plugins($display->context);
-  $options = array();
-  foreach ($plugins as $id => $plugin) {
-    $options[$id] = $plugin['title'];
-  }
-
-  asort($options);
-
-  $form['type'] = array(
-    // This ensures that the form item is added to the URL.
-    '#type' => 'radios',
-    '#options' => $options,
-  );
-
-  $form['next'] = array(
-    '#type' => 'submit',
-    '#value' => t('Next'),
-  );
-
-  return $form;
-}
-
-/**
- * Form to configure a visibility rule.
- */
-function panels_edit_configure_access_test_form($form, &$form_state) {
-  ctools_form_include($form_state, 'plugins', 'panels');
-  form_load_include($form_state, 'php', 'panels', '/plugins/display_renderers/panels_renderer_editor.class');
-  $display = &$form_state['display'];
-  $test = &$form_state['test'];
-  $plugin = &$form_state['plugin'];
-
-  $form['#action'] = $form_state['url'];
-
-  $contexts = $display->context;
-  if (!isset($contexts['logged-in-user'])) {
-    $contexts['logged-in-user'] = ctools_access_get_loggedin_context();
-  }
-
-  if (isset($plugin['required context'])) {
-    $form['context'] = ctools_context_selector($contexts, $plugin['required context'], $test['context']);
-  }
-
-  $form['settings'] = array('#tree' => TRUE);
-  if ($function = ctools_plugin_get_function($plugin, 'settings form')) {
-    $form = $function($form, $form_state, $test['settings']);
-  }
-
-  $form['not'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Reverse (NOT)'),
-    '#default_value' => !empty($test['not']),
-  );
-
-  $form['save'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save'),
-  );
-
-  $form['remove'] = array(
-    '#type' => 'submit',
-    '#value' => t('Remove'),
-    '#remove' => TRUE,
-  );
-
-  return $form;
-}
-
-/**
- * Validate handler for visibility rule settings
- */
-function panels_edit_configure_access_test_form_validate(&$form, &$form_state) {
-  if (!empty($form_state['clicked_button']['#remove'])) {
-    return;
-  }
-
-  if ($function = ctools_plugin_get_function($form_state['plugin'], 'settings form validate')) {
-    $function($form, $form_state);
-  }
-}
-
-/**
- * Submit handler for visibility rule settings
- */
-function panels_edit_configure_access_test_form_submit(&$form, &$form_state) {
-  if (!empty($form_state['clicked_button']['#remove'])) {
-    $form_state['remove'] = TRUE;
-    return;
-  }
-
-  if ($function = ctools_plugin_get_function($form_state['plugin'], 'settings form submit')) {
-    $function($form, $form_state);
-  }
-
-  $form_state['test']['settings'] = $form_state['values']['settings'];
-  if (isset($form_state['values']['context'])) {
-    $form_state['test']['context'] = $form_state['values']['context'];
-  }
-  $form_state['test']['not'] = !empty($form_state['values']['not']);
-}
-
diff --git a/plugins/display_renderers/panels_renderer_simple.class.php b/plugins/display_renderers/panels_renderer_simple.class.php
deleted file mode 100644
index a4779b8..0000000
--- a/plugins/display_renderers/panels_renderer_simple.class.php
+++ /dev/null
@@ -1,32 +0,0 @@
-<?php
-/**
- * @file
- * Contains the simple display renderer.
- */
-
-/**
- * The simple display renderer renders a display normally, except each pane
- * is already rendered content, rather than a pane containing CTools content
- * to be rendered. Styles are not supported.
- */
-class panels_renderer_simple extends panels_renderer_standard {
-  function render_regions() {
-    $this->rendered['regions'] = array();
-    foreach ($this->display->content as $region_id => $content) {
-      if (is_array($content)) {
-        $content = implode('', $content);
-      }
-
-      $this->rendered['regions'][$region_id] = $content;
-    }
-    return $this->rendered['regions'];
-  }
-
-  function render_panes() {
-    // NOP
-  }
-
-  function prepare($external_settings = NULL) {
-    $this->prep_run = TRUE;
-  }
-}
diff --git a/plugins/display_renderers/panels_renderer_standard.class.php b/plugins/display_renderers/panels_renderer_standard.class.php
deleted file mode 100644
index db71b6b..0000000
--- a/plugins/display_renderers/panels_renderer_standard.class.php
+++ /dev/null
@@ -1,645 +0,0 @@
-<?php
-
-/**
- * The standard render pipeline for a Panels display object.
- *
- * Given a fully-loaded panels_display object, this class will turn its
- * combination of layout, panes, and styles into HTML, invoking caching
- * appropriately along the way. Interacting with the renderer externally is
- * very simple - just pass it the display object and call the render() method:
- *
- * @code
- *   // given that $display is a fully loaded Panels display object
- *   $renderer = panels_get_renderer_handler('standard', $display)
- *   $html_output = $renderer->render();
- * @endcode
- *
- * Internally, the render pipeline is divided into two phases, prepare and
- * render:
- *   - The prepare phase transforms the skeletal data on the provided
- *     display object into a structure that is expected by the render phase.
- *     It is divided into a series of discrete sub-methods and operates
- *     primarily by passing parameters, all with the intention of making
- *     subclassing easier.
- *   - The render phase relies primarily on data stored in the renderer object's
- *     properties, presumably set in the prepare phase. It iterates through the
- *     rendering of each pane, pane styling, placement in panel regions, region
- *     styling, and finally the arrangement of rendered regions in the layout.
- *     Caching, if in use, is triggered per pane, or on the entire display.
- *
- * In short: prepare builds conf, render renders conf. Subclasses should respect
- * this separation of responsibilities by adhering to these loose guidelines,
- * given a loaded display object:
- *   - If your renderer needs to modify the datastructure representing what is
- *     to be rendered (panes and their conf, styles, caching, etc.), it should
- *     use the prepare phase.
- *   - If your renderer needs to modify the manner in which that renderable
- *     datastructure data is rendered, it should use the render phase.
- *
- * In the vast majority of use cases, this standard renderer will be sufficient
- * and need not be switched out/subclassed; style and/or layout plugins can
- * accommodate nearly every use case. If you think you might need a custom
- * renderer, consider the following criteria/examples:
- *   - Some additional markup needs to be added to EVERY SINGLE panel.
- *   - Given a full display object, just render one pane.
- *   - Show a Panels admin interface.
- *
- * The system is almost functionally identical to the old procedural approach,
- * with some exceptions (@see panels_renderer_legacy for details). The approach
- * here differs primarily in its friendliness to tweaking in subclasses.
- */
-class panels_renderer_standard {
-  /**
-   * The fully-loaded Panels display object that is to be rendered. "Fully
-   * loaded" is defined as:
-   *   1. Having been produced by panels_load_displays(), whether or this page
-   *      request or at some time in the past and the object was exported.
-   *   2. Having had some external code attach context data ($display->context),
-   *      in the exact form expected by panes. Context matching is delicate,
-   *      typically relying on exact string matches, so special attention must
-   *      be taken.
-   *
-   * @var panels_display
-   */
-  var $display;
-
-  /**
-   * An associative array of loaded plugins. Used primarily as a central
-   * location for storing plugins that require additional loading beyond
-   * reading the plugin definition, which is already statically cached by
-   * ctools_get_plugins(). An example is layout plugins, which can optionally
-   * have a callback that determines the set of panel regions available at
-   * runtime.
-   *
-   * @var array
-   */
-  var $plugins = array();
-
-  /**
-   * A multilevel array of rendered data. The first level of the array
-   * indicates the type of rendered data, typically with up to three keys:
-   * 'layout', 'regions', and 'panes'. The relevant rendered data is stored as
-   * the value for each of these keys as it is generated:
-   *  - 'panes' are an associative array of rendered output, keyed on pane id.
-   *  - 'regions' are an associative array of rendered output, keyed on region
-   *    name.
-   *  - 'layout' is the whole of the rendered output.
-   *
-   * @var array
-   */
-  var $rendered = array();
-
-  /**
-   * A multilevel array of data prepared for rendering. The first level of the
-   * array indicates the type of prepared data. The standard renderer populates
-   * and uses two top-level keys, 'panes' and 'regions':
-   *  - 'panes' are an associative array of pane objects to be rendered, keyed
-   *    on pane id and sorted into proper rendering order.
-   *  - 'regions' are an associative array of regions, keyed on region name,
-   *    each of which is itself an indexed array of pane ids in the order in
-   *    which those panes appear in that region.
-   *
-   * @var array
-   */
-  var $prepared = array();
-
-  /**
-   * Boolean state variable, indicating whether or not the prepare() method has
-   * been run.
-   *
-   * This state is checked in panels_renderer_standard::render_layout() to
-   * determine whether the prepare method should be automatically triggered.
-   *
-   * @var bool
-   */
-  var $prep_run = FALSE;
-
-  /**
-   * The plugin that defines this handler.
-   */
-  var $plugin = FALSE;
-
-  /**
-   * TRUE if this renderer is rendering in administrative mode
-   * which will allow layouts to have extra functionality.
-   *
-   * @var bool
-   */
-  var $admin = FALSE;
-
-  /**
-   * Where to add standard meta information. There are three possibilities:
-   * - standard: Put the meta information in the normal location. Default.
-   * - inline: Put the meta information directly inline. This will
-   *   not work for javascript.
-   *
-   * @var string
-   */
-  var $meta_location = 'standard';
-
-  /**
-   * Include rendered HTML prior to the layout.
-   *
-   * @var string
-   */
-  var $prefix = '';
-
-  /**
-   * Include rendered HTML after the layout.
-   *
-   * @var string
-   */
-  var $suffix = '';
-
-  /**
-   * Receive and store the display object to be rendered.
-   *
-   * This is a psuedo-constructor that should typically be called immediately
-   * after object construction.
-   *
-   * @param array $plugin
-   *   The definition of the renderer plugin.
-   * @param panels_display $display
-   *   The panels display object to be rendered.
-   */
-  function init($plugin, &$display) {
-    $this->plugin = $plugin;
-    $layout = panels_get_layout($display->layout);
-    $this->display = &$display;
-    $this->plugins['layout'] = $layout;
-    if (!isset($layout['regions'])) {
-      $this->plugins['layout']['regions'] = panels_get_regions($layout, $display);
-    }
-
-    if (empty($this->plugins['layout'])) {
-      watchdog('panels', "Layout: @layout couldn't been found, maybe the theme is disabled.", array('@layout' => $display->layout));
-    }
-  }
-
-  /**
-   * Prepare the attached display for rendering.
-   *
-   * This is the outermost prepare method. It calls several sub-methods as part
-   * of the overall preparation process. This compartmentalization is intended
-   * to ease the task of modifying renderer behavior in child classes.
-   *
-   * If you override this method, it is important that you either call this
-   * method via parent::prepare(), or manually set $this->prep_run = TRUE.
-   *
-   * @param mixed $external_settings
-   *  An optional parameter allowing external code to pass in additional
-   *  settings for use in the preparation process. Not used in the default
-   *  renderer, but included for interface consistency.
-   */
-  function prepare($external_settings = NULL) {
-    $this->prepare_panes($this->display->content);
-    $this->prepare_regions($this->display->panels, $this->display->panel_settings);
-    $this->prep_run = TRUE;
-  }
-
-  /**
-   * Prepare the list of panes to be rendered, accounting for visibility/access
-   * settings and rendering order.
-   *
-   * This method represents the standard approach for determining the list of
-   * panes to be rendered that is compatible with all parts of the Panels
-   * architecture. It first applies visibility & access checks, then sorts panes
-   * into their proper rendering order, and returns the result as an array.
-   *
-   * Inheriting classes should override this method if that renderer needs to
-   * regularly make additions to the set of panes that will be rendered.
-   *
-   * @param array $panes
-   *  An associative array of pane data (stdClass objects), keyed on pane id.
-   * @return array
-   *  An associative array of panes to be rendered, keyed on pane id and sorted
-   *  into proper rendering order.
-   */
-  function prepare_panes($panes) {
-    ctools_include('content');
-    // Use local variables as writing to them is very slightly faster
-    $first = $normal = $last = array();
-
-    // Prepare the list of panes to be rendered
-    foreach ($panes as $pid => $pane) {
-      if (empty($this->admin)) {
-        // TODO remove in 7.x and ensure the upgrade path weeds out any stragglers; it's been long enough
-        $pane->shown = !empty($pane->shown); // guarantee this field exists.
-        // If this pane is not visible to the user, skip out and do the next one
-        if (!$pane->shown || !panels_pane_access($pane, $this->display)) {
-          continue;
-        }
-      }
-
-      // If the pane's subtype is unique, get it so that
-      // hook_ctools_content_subtype_alter() and/or
-      // hook_ctools_block_info() will be called.
-      if ($pane->type != $pane->subtype) {
-        $content_type = ctools_content_get_subtype($pane->type, $pane->subtype);
-      }
-      else {
-        $content_type = ctools_get_content_type($pane->type);
-      }
-
-      // If this pane wants to render last, add it to the $last array. We allow
-      // this because some panes need to be rendered after other panes,
-      // primarily so they can do things like the leftovers of forms.
-      if (!empty($content_type['render last'])) {
-        $last[$pid] = $pane;
-      }
-      // If it wants to render first, add it to the $first array. This is used
-      // by panes that need to do some processing before other panes are
-      // rendered.
-      else if (!empty($content_type['render first'])) {
-        $first[$pid] = $pane;
-      }
-      // Otherwise, render it in the normal order.
-      else {
-        $normal[$pid] = $pane;
-      }
-    }
-    $this->prepared['panes'] = $first + $normal + $last;
-
-    // Allow other modules the alter the prepared panes array.
-    drupal_alter('panels_panes_prepared', $this->prepared['panes'], $this);
-
-    return $this->prepared['panes'];
-  }
-
-  /**
-   * Prepare the list of regions to be rendered.
-   *
-   * This method is primarily about properly initializing the style plugin that
-   * will be used to render the region. This is crucial as regions cannot be
-   * rendered without a style plugin (in keeping with Panels' philosophy of
-   * hardcoding none of its output), but for most regions no style has been
-   * explicitly set. The logic here is what accommodates that situation:
-   *  - If a region has had its style explicitly set, then we fetch that plugin
-   *    and continue.
-   *  - If the region has no explicit style, but a style was set at the display
-   *    level, then inherit the style from the display.
-   *  - If neither the region nor the dispay have explicitly set styles, then
-   *    fall back to the hardcoded 'default' style, a very minimal style.
-   *
-   * The other important task accomplished by this method is ensuring that even
-   * regions without any panes are still properly prepared for the rendering
-   * process. This is essential because the way Panels loads display objects
-   * (@see panels_load_displays) results only in a list of regions that
-   * contain panes - not necessarily all the regions defined by the layout
-   * plugin, which can only be determined by asking the plugin at runtime. This
-   * method consults that retrieved list of regions and prepares all of those,
-   * ensuring none are inadvertently skipped.
-   *
-   * @param array $region_pane_list
-   *   An associative array of pane ids, keyed on the region to which those pids
-   *   are assigned. In the default case, this is $display->panels.
-   * @param array $settings
-   *   All known region style settings, including both the top-level display's
-   *   settings (if any) and all region-specific settings (if any).
-   * @return array
-   *   An array of regions prepared for rendering.
-   */
-  function prepare_regions($region_pane_list, $settings) {
-    // Initialize defaults to be used for regions without their own explicit
-    // settings. Use display settings if they exist, else hardcoded defaults.
-    $default = array(
-      'style' => panels_get_style(!empty($settings['style']) ? $settings['style'] : 'default'),
-      'style settings' => isset($settings['style_settings']['default']) ? $settings['style_settings']['default'] : array(),
-    );
-
-    $regions = array();
-    if (empty($settings)) {
-      // No display/panel region settings exist, init all with the defaults.
-      foreach ($this->plugins['layout']['regions'] as $region_id => $title) {
-        // Ensure this region has at least an empty panes array.
-        $panes = !empty($region_pane_list[$region_id]) ? $region_pane_list[$region_id] : array();
-
-        $regions[$region_id] = $default;
-        $regions[$region_id]['pids'] = $panes;
-      }
-    }
-    else {
-      // Some settings exist; iterate through each region and set individually.
-      foreach ($this->plugins['layout']['regions'] as $region_id => $title) {
-        // Ensure this region has at least an empty panes array.
-        $panes = !empty($region_pane_list[$region_id]) ? $region_pane_list[$region_id] : array();
-        if (empty($settings[$region_id]['style']) || $settings[$region_id]['style'] == -1) {
-          $regions[$region_id] = $default;
-        }
-        else {
-          $regions[$region_id]['style'] = panels_get_style($settings[$region_id]['style']);
-          $regions[$region_id]['style settings'] = isset($settings['style_settings'][$region_id]) ? $settings['style_settings'][$region_id] : array();
-        }
-        $regions[$region_id]['pids'] = $panes;
-      }
-    }
-
-    $this->prepared['regions'] = $regions;
-    return $this->prepared['regions'];
-  }
-
-  /**
-   * Build inner content, then hand off to layout-specified theme function for
-   * final render step.
-   *
-   * This is the outermost method in the Panels render pipeline. It calls the
-   * inner methods, which return a content array, which is in turn passed to the
-   * theme function specified in the layout plugin.
-   *
-   * @return string
-   *  Themed & rendered HTML output.
-   */
-  function render() {
-    // Let the display refer back to the renderer.
-    $this->display->renderer_handler = $this;
-
-    // Attach out-of-band data first.
-    $this->add_meta();
-
-    if (empty($this->display->cache['method']) || !empty($this->display->skip_cache)) {
-      return $this->render_layout();
-    }
-    else {
-      $cache = panels_get_cached_content($this->display, $this->display->args, $this->display->context);
-      if ($cache === FALSE) {
-        $cache = new panels_cache_object();
-        $cache->set_content($this->render_layout());
-        panels_set_cached_content($cache, $this->display, $this->display->args, $this->display->context);
-      }
-      return $cache->content;
-    }
-  }
-
-  /**
-   * Perform display/layout-level render operations.
-   *
-   * This method triggers all the inner pane/region rendering processes, passes
-   * that to the layout plugin's theme callback, and returns the rendered HTML.
-   *
-   * If display-level caching is enabled and that cache is warm, this method
-   * will not be called.
-   *
-   * @return string
-   *   The HTML string representing the entire rendered, themed panel.
-   */
-  function render_layout() {
-    if (empty($this->prep_run)) {
-      $this->prepare();
-    }
-    $this->render_panes();
-    $this->render_regions();
-
-    if ($this->admin && !empty($this->plugins['layout']['admin theme'])) {
-      $theme = $this->plugins['layout']['admin theme'];
-    }
-    else {
-      $theme = $this->plugins['layout']['theme'];
-    }
-
-    $this->rendered['layout'] = theme($theme, array('css_id' => check_plain($this->display->css_id), 'content' => $this->rendered['regions'], 'settings' => $this->display->layout_settings, 'display' => $this->display, 'layout' => $this->plugins['layout'], 'renderer' => $this));
-    return $this->prefix . $this->rendered['layout'] . $this->suffix;
-  }
-
-  /**
-   * Attach out-of-band page metadata (e.g., CSS and JS).
-   *
-   * This must be done before render, because panels-within-panels must have
-   * their CSS added in the right order: inner content before outer content.
-   */
-  function add_meta() {
-    if (!empty($this->plugins['layout']['css'])) {
-      $css = $this->plugins['layout']['css'];
-      if (!is_array($css)) {
-        $css = array($css);
-      }
-      foreach($css as $file) {
-        if (file_exists(path_to_theme() . '/' . $file)) {
-          $this->add_css(path_to_theme() . '/' . $file);
-        }
-        else {
-          $this->add_css($this->plugins['layout']['path'] . '/' . $file);
-        }
-      }
-    }
-
-    if ($this->admin && isset($this->plugins['layout']['admin css'])) {
-      $admin_css = $this->plugins['layout']['admin css'];
-      if (!is_array($admin_css)) {
-        $admin_css = array($admin_css);
-      }
-      foreach($admin_css as $file) {
-        $this->add_css($this->plugins['layout']['path'] . '/' . $file);
-      }
-    }
-  }
-
-  /**
-   * Add CSS information to the renderer.
-   *
-   * To facilitate previews over Views, CSS can now be added in a manner
-   * that does not necessarily mean just using drupal_add_css. Therefore,
-   * during the panel rendering process, this method can be used to add
-   * css and make certain that ti gets to the proper location.
-   *
-   * The arguments should exactly match drupal_add_css().
-   *
-   * @see drupal_add_css
-   */
-  function add_css($filename) {
-    switch ($this->meta_location) {
-      case 'standard':
-        drupal_add_css($filename);
-        break;
-      case 'inline':
-        $url = base_path() . $filename;
-        $this->prefix .= '<link type="text/css" rel="stylesheet" href="' . file_create_url($url) . '" />'."\n";
-        break;
-    }
-  }
-
-  /**
-   * Render all prepared panes, first by dispatching to their plugin's render
-   * callback, then handing that output off to the pane's style plugin.
-   *
-   * @return array
-   *   The array of rendered panes, keyed on pane pid.
-   */
-  function render_panes() {
-    ctools_include('content');
-
-    // First, render all the panes into little boxes.
-    $this->rendered['panes'] = array();
-    foreach ($this->prepared['panes'] as $pid => $pane) {
-      $content = $this->render_pane($pane);
-      if ($content) {
-        $this->rendered['panes'][$pid] = $content;
-      }
-    }
-    return $this->rendered['panes'];
-  }
-
-  /**
-   * Render a pane using its designated style.
-   *
-   * This method also manages 'title pane' functionality, where the title from
-   * an individual pane can be bubbled up to take over the title for the entire
-   * display.
-   *
-   * @param stdClass $pane
-   *  A Panels pane object, as loaded from the database.
-   */
-  function render_pane(&$pane) {
-    module_invoke_all('panels_pane_prerender', $pane);
-
-    $content = $this->render_pane_content($pane);
-    if ($this->display->hide_title == PANELS_TITLE_PANE && !empty($this->display->title_pane) && $this->display->title_pane == $pane->pid) {
-
-      // If the user selected to override the title with nothing, and selected
-      // this as the title pane, assume the user actually wanted the original
-      // title to bubble up to the top but not actually be used on the pane.
-      if (empty($content->title) && !empty($content->original_title)) {
-        $this->display->stored_pane_title = $content->original_title;
-      }
-      else {
-        $this->display->stored_pane_title = !empty($content->title) ? $content->title : '';
-      }
-    }
-
-    if (!empty($content->content)) {
-      if (!empty($pane->style['style'])) {
-        $style = panels_get_style($pane->style['style']);
-
-        if (isset($style) && isset($style['render pane'])) {
-          $output = theme($style['render pane'], array('content' => $content, 'pane' => $pane, 'display' => $this->display, 'style' => $style, 'settings' => $pane->style['settings']));
-
-          // This could be null if no theme function existed.
-          if (isset($output)) {
-            return $output;
-          }
-        }
-      }
-
-      // fallback
-      return theme('panels_pane', array('content' => $content, 'pane' => $pane, 'display' => $this->display));
-    }
-  }
-
-  /**
-   * Render the interior contents of a single pane.
-   *
-   * This method retrieves pane content and produces a ready-to-render content
-   * object. It also manages pane-specific caching.
-   *
-   * @param stdClass $pane
-   *   A Panels pane object, as loaded from the database.
-   * @return stdClass $content
-   *   A renderable object, containing a subject, content, etc. Based on the
-   *   renderable objects used by the block system.
-   */
-  function render_pane_content(&$pane) {
-    ctools_include('context');
-    // TODO finally safe to remove this check?
-    if (!is_array($this->display->context)) {
-      watchdog('panels', 'renderer::render_pane_content() hit with a non-array for the context', $this->display, WATCHDOG_DEBUG);
-      $this->display->context = array();
-    }
-
-    $caching = !empty($pane->cache['method']) && empty($this->display->skip_cache);
-    if ($caching && ($cache = panels_get_cached_content($this->display, $this->display->args, $this->display->context, $pane))) {
-      $content = $cache->content;
-    }
-    else {
-      if ($caching) {
-        // This is created before rendering so that calls to drupal_add_js
-        // and drupal_add_css will be captured.
-        $cache = new panels_cache_object();
-      }
-
-      $content = ctools_content_render($pane->type, $pane->subtype, $pane->configuration, array(), $this->display->args, $this->display->context);
-
-      foreach (module_implements('panels_pane_content_alter') as $module) {
-        $function = $module . '_panels_pane_content_alter';
-        $function($content, $pane, $this->display->args, $this->display->context, $this, $this->display);
-      }
-      if ($caching && isset($cache)) {
-        $cache->set_content($content);
-        panels_set_cached_content($cache, $this->display, $this->display->args, $this->display->context, $pane);
-        $content = $cache->content;
-      }
-    }
-
-    // If there's content, check if we've css configuration to add.
-    if (!empty($content)) {
-      // Pass long the css_id that is usually available.
-      if (!empty($pane->css['css_id'])) {
-        $content->css_id = check_plain($pane->css['css_id']);
-      }
-
-      // Pass long the css_class that is usually available.
-      if (!empty($pane->css['css_class'])) {
-        $content->css_class = check_plain($pane->css['css_class']);
-      }
-    }
-
-    return $content;
-  }
-
-  /**
-   * Render all prepared regions, placing already-rendered panes into their
-   * appropriate positions therein.
-   *
-   * @return array
-   *   An array of rendered panel regions, keyed on the region name.
-   */
-  function render_regions() {
-    $this->rendered['regions'] = array();
-
-    // Loop through all panel regions, put all panes that belong to the current
-    // region in an array, then render the region. Primarily this ensures that
-    // the panes are arranged in the proper order.
-    $content = array();
-    foreach ($this->prepared['regions'] as $region_id => $conf) {
-      $region_panes = array();
-      foreach ($conf['pids'] as $pid) {
-        // Only include panes for region rendering if they had some output.
-        if (!empty($this->rendered['panes'][$pid])) {
-          $region_panes[$pid] = $this->rendered['panes'][$pid];
-        }
-      }
-      $this->rendered['regions'][$region_id] = $this->render_region($region_id, $region_panes);
-    }
-
-    return $this->rendered['regions'];
-  }
-
-  /**
-   * Render a single panel region.
-   *
-   * Primarily just a passthrough to the panel region rendering callback
-   * specified by the style plugin that is attached to the current panel region.
-   *
-   * @param $region_id
-   *   The ID of the panel region being rendered
-   * @param $panes
-   *   An array of panes that are assigned to the panel that's being rendered.
-   *
-   * @return string
-   *   The rendered, HTML string output of the passed-in panel region.
-   */
-  function render_region($region_id, $panes) {
-    $style = $this->prepared['regions'][$region_id]['style'];
-    $style_settings = $this->prepared['regions'][$region_id]['style settings'];
-
-    // Retrieve the pid (can be a panel page id, a mini panel id, etc.), this
-    // might be used (or even necessary) for some panel display styles.
-    // TODO: Got to fix this to use panel page name instead of pid, since pid is
-    // no longer guaranteed. This needs an API to be able to set the final id.
-    $owner_id = 0;
-    if (isset($this->display->owner) && is_object($this->display->owner) && isset($this->display->owner->id)) {
-      $owner_id = $this->display->owner->id;
-    }
-
-    $output = theme($style['render region'], array('display' => $this->display, 'owner_id' => $owner_id, 'panes' => $panes, 'settings' => $style_settings, 'region_id' => $region_id, 'style' => $style));
-    return $output;
-  }
-}
diff --git a/plugins/display_renderers/simple.inc b/plugins/display_renderers/simple.inc
deleted file mode 100644
index a370216..0000000
--- a/plugins/display_renderers/simple.inc
+++ /dev/null
@@ -1,8 +0,0 @@
-<?php
-/**
- * Create a simple renderer plugin that renders a layout but the content is
- * already rendered, not in panes.
- */
-$plugin = array(
-  'renderer' => 'panels_renderer_simple',
-);
diff --git a/plugins/display_renderers/standard.inc b/plugins/display_renderers/standard.inc
deleted file mode 100644
index 2e86b31..0000000
--- a/plugins/display_renderers/standard.inc
+++ /dev/null
@@ -1,5 +0,0 @@
-<?php
-
-$plugin = array(
-  'renderer' => 'panels_renderer_standard',
-);
diff --git a/plugins/export_ui/panels_layouts.inc b/plugins/export_ui/panels_layouts.inc
deleted file mode 100644
index 20bf44d..0000000
--- a/plugins/export_ui/panels_layouts.inc
+++ /dev/null
@@ -1,23 +0,0 @@
-<?php
-
-$plugin = array(
-  'schema' => 'panels_layout',
-  'access' => 'administer panels layouts',
-
-  'menu' => array(
-    'menu prefix' => 'admin/structure/panels',
-    'menu item' => 'layouts',
-    'menu title' => 'Layouts',
-    'menu description' => 'Add, edit or delete custom content layouts.',
-  ),
-
-  'title singular' => t('layout'),
-  'title singular proper' => t('Layout'),
-  'title plural' => t('layouts'),
-  'title plural proper' => t('Layouts'),
-
-  'handler' => array(
-    'class' => 'panels_layouts_ui',
-  ),
-);
-
diff --git a/plugins/export_ui/panels_layouts_ui.class.php b/plugins/export_ui/panels_layouts_ui.class.php
deleted file mode 100644
index ecf3b7b..0000000
--- a/plugins/export_ui/panels_layouts_ui.class.php
+++ /dev/null
@@ -1,245 +0,0 @@
-<?php
-
-/**
- * @file
- * Contains the administrative UI for reusable layouts.
- */
-
-class panels_layouts_ui extends ctools_export_ui {
-  var $lipsum = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam egestas congue nibh, vel dictum ante posuere vitae. Cras gravida massa tempor metus eleifend sed elementum tortor scelerisque. Vivamus egestas, tortor quis luctus tristique, sem velit adipiscing risus, et tempus enim felis in massa. Morbi viverra, nisl quis rhoncus imperdiet, turpis massa vestibulum turpis, egestas faucibus nibh metus vel nunc. In hac habitasse platea dictumst. Nunc sit amet nisi quis ipsum tincidunt semper. Donec ac urna enim, et placerat arcu. Morbi eu laoreet justo. Nullam nec velit eu neque mattis pulvinar sed non libero. Sed sed vulputate erat. Fusce sit amet dui nibh.";
-
-  function hook_menu(&$items) {
-    // During updates, this can run before our schema is set up, so our
-    // plugin can be empty.
-    if (empty($this->plugin['menu']['items']['add'])) {
-      return;
-    }
-
-    // Change the item to a tab on the Panels page.
-    $this->plugin['menu']['items']['list callback']['type'] = MENU_LOCAL_TASK;
-
-    // Establish a base for adding plugins
-    $base = $this->plugin['menu']['items']['add'];
-    // Remove the default 'add' menu item.
-    unset($this->plugin['menu']['items']['add']);
-
-    ctools_include('plugins', 'panels');
-    $this->builders = panels_get_layout_builders();
-    asort($this->builders);
-    foreach ($this->builders as $name => $builder) {
-      // Create a new menu item for the builder
-      $item = $base;
-      $item['title'] = !empty($builder['builder tab title']) ? $builder['builder tab title'] : 'Add ' . $builder['title'];
-      $item['page arguments'][] = $name;
-      $item['path'] = 'add-' . $name;
-      $this->plugin['menu']['items']['add ' . $name] = $item;
-    }
-
-    parent::hook_menu($items);
-  }
-
-  function edit_form(&$form, &$form_state) {
-    ctools_include('plugins', 'panels');
-    // If the plugin is not set, then it should be provided as an argument:
-    if (!isset($form_state['item']->plugin)) {
-      $form_state['item']->plugin = $form_state['function args'][2];
-    }
-
-    parent::edit_form($form, $form_state);
-
-    $form['category'] = array(
-      '#type' => 'textfield',
-      '#title' => t('Category'),
-      '#description' => t('What category this layout should appear in. If left blank the category will be "Miscellaneous".'),
-      '#default_value' => $form_state['item']->category,
-    );
-
-    ctools_include('context');
-    ctools_include('display-edit', 'panels');
-    ctools_include('content');
-
-    // Provide actual layout admin UI here.
-    // Create a display for editing:
-    $cache_key = 'builder-' . $form_state['item']->name;
-
-    // Load the display being edited from cache, if possible.
-    if (!empty($_POST) && is_object($cache = panels_edit_cache_get($cache_key))) {
-      $display = &$cache->display;
-    }
-    else {
-      $content_types = ctools_content_get_available_types();
-
-      panels_cache_clear('display', $cache_key);
-      $cache = new stdClass();
-
-      $display = panels_new_display();
-      $display->did = $form_state['item']->name;
-      $display->layout = $form_state['item']->plugin;
-      $display->layout_settings = $form_state['item']->settings;
-      $display->cache_key = $cache_key;
-      $display->editing_layout = TRUE;
-
-      $cache->display = $display;
-      $cache->content_types = $content_types;
-      $cache->display_title = FALSE;
-      panels_edit_cache_set($cache);
-    }
-
-    // Set up lipsum content in all of the existing panel regions:
-    $display->content = array();
-    $display->panels = array();
-    $custom = ctools_get_content_type('custom');
-    $layout = panels_get_layout($display->layout);
-
-    $regions = panels_get_regions($layout, $display);
-    foreach ($regions as $id => $title) {
-      $pane = panels_new_pane('custom', 'custom');
-      $pane->pid = $id;
-      $pane->panel = $id;
-      $pane->configuration = ctools_content_get_defaults($custom, 'custom');
-      $pane->configuration['title'] = 'Lorem Ipsum';
-      $pane->configuration['body'] = $this->lipsum;
-      $display->content[$id] = $pane;
-      $display->panels[$id] = array($id);
-    }
-
-    $form_state['display'] = &$display;
-    // Tell the Panels form not to display buttons.
-    $form_state['no buttons'] = TRUE;
-    $form_state['no display settings'] = TRUE;
-
-    $form_state['cache_key'] = $cache_key;
-    $form_state['content_types'] = $cache->content_types;
-    $form_state['display_title'] = FALSE;
-
-    $form_state['renderer'] = panels_get_renderer_handler('editor', $cache->display);
-    $form_state['renderer']->cache = &$cache;
-
-    $form = panels_edit_display_form($form, $form_state);
-
-    // If we leave the standard submit handler, it'll try to reconcile
-    // content from the input, but we've not exposed that to the user. This
-    // makes previews work with the content we forced in.
-    $form['preview']['button']['#submit'] = array('panels_edit_display_form_preview');
-  }
-
-  function edit_form_submit(&$form, &$form_state) {
-    parent::edit_form_submit($form, $form_state);
-
-    // While we short circuited the main submit hook, we need to keep this one.
-    panels_edit_display_settings_form_submit($form, $form_state);
-    $form_state['item']->settings = $form_state['display']->layout_settings;
-  }
-
-  function edit_form_validate(&$form, &$form_state) {
-    parent::edit_form_validate($form, $form_state);
-
-    // While we short circuited the main validate hook, we need to keep this one.
-    panels_edit_display_settings_form_validate($form, $form_state);
-  }
-
-  function list_form(&$form, &$form_state) {
-    ctools_include('plugins', 'panels');
-    $this->builders = panels_get_layout_builders();
-    parent::list_form($form, $form_state);
-
-    $categories = $plugins = array('all' => t('- All -'));
-    foreach ($this->items as $item) {
-      $categories[$item->category] = $item->category ? $item->category : t('Miscellaneous');
-    }
-
-    $form['top row']['category'] = array(
-      '#type' => 'select',
-      '#title' => t('Category'),
-      '#options' => $categories,
-      '#default_value' => 'all',
-      '#weight' => -10,
-    );
-
-    foreach ($this->builders as $name => $plugin) {
-      $plugins[$name] = $plugin['title'];
-    }
-
-    $form['top row']['plugin'] = array(
-      '#type' => 'select',
-      '#title' => t('Type'),
-      '#options' => $plugins,
-      '#default_value' => 'all',
-      '#weight' => -9,
-    );
-  }
-
-  function list_filter($form_state, $item) {
-    if ($form_state['values']['category'] != 'all' && $form_state['values']['category'] != $item->category) {
-      return TRUE;
-    }
-
-    if ($form_state['values']['plugin'] != 'all' && $form_state['values']['plugin'] != $item->plugin) {
-      return TRUE;
-    }
-
-    return parent::list_filter($form_state, $item);
-  }
-
-  function list_sort_options() {
-    return array(
-      'disabled' => t('Enabled, title'),
-      'title' => t('Title'),
-      'name' => t('Name'),
-      'category' => t('Category'),
-      'storage' => t('Storage'),
-      'plugin' => t('Type'),
-    );
-  }
-
-  function list_build_row($item, &$form_state, $operations) {
-    // Set up sorting
-    switch ($form_state['values']['order']) {
-      case 'disabled':
-        $this->sorts[$item->name] = empty($item->disabled) . $item->admin_title;
-        break;
-      case 'title':
-        $this->sorts[$item->name] = $item->admin_title;
-        break;
-      case 'name':
-        $this->sorts[$item->name] = $item->name;
-        break;
-      case 'category':
-        $this->sorts[$item->name] = ($item->category ? $item->category : t('Miscellaneous')) . $item->admin_title;
-        break;
-      case 'plugin':
-        $this->sorts[$item->name] = $item->plugin;
-        break;
-      case 'storage':
-        $this->sorts[$item->name] = $item->type . $item->admin_title;
-        break;
-    }
-
-    $type = !empty($this->builders[$item->plugin]) ? $this->builders[$item->plugin]['title'] : t('Broken/missing plugin');
-    $category = $item->category ? check_plain($item->category) : t('Miscellaneous');
-
-    $ops = theme('links__ctools_dropbutton', array('links' => $operations, 'attributes' => array('class' => array('links', 'inline'))));
-
-    $this->rows[$item->name] = array(
-      'data' => array(
-        array('data' => check_plain($type), 'class' => array('ctools-export-ui-type')),
-        array('data' => check_plain($item->name), 'class' => array('ctools-export-ui-name')),
-        array('data' => check_plain($item->admin_title), 'class' => array('ctools-export-ui-title')),
-        array('data' => $category, 'class' => array('ctools-export-ui-category')),
-        array('data' => $ops, 'class' => array('ctools-export-ui-operations')),
-      ),
-      'title' => check_plain($item->admin_description),
-      'class' => array(!empty($item->disabled) ? 'ctools-export-ui-disabled' : 'ctools-export-ui-enabled'),
-    );
-  }
-
-  function list_table_header() {
-    return array(
-      array('data' => t('Type'), 'class' => array('ctools-export-ui-type')),
-      array('data' => t('Name'), 'class' => array('ctools-export-ui-name')),
-      array('data' => t('Title'), 'class' => array('ctools-export-ui-title')),
-      array('data' => t('Category'), 'class' => array('ctools-export-ui-category')),
-      array('data' => t('Operations'), 'class' => array('ctools-export-ui-operations')),
-    );
-  }
-}
diff --git a/templates/panels-add-content-link.tpl.php b/templates/panels-add-content-link.tpl.php
deleted file mode 100644
index b426605..0000000
--- a/templates/panels-add-content-link.tpl.php
+++ /dev/null
@@ -1,10 +0,0 @@
-<?php
-/**
- * @file
- * Template to control the add content individual links in the add content modal.
- */
-?>
-<div class="content-type-button clearfix">
-  <?php print $image_button; ?>
-  <div><?php print $text_button; ?></div>
-</div>
diff --git a/templates/panels-add-content-modal.tpl.php b/templates/panels-add-content-modal.tpl.php
deleted file mode 100644
index 5041ff0..0000000
--- a/templates/panels-add-content-modal.tpl.php
+++ /dev/null
@@ -1,38 +0,0 @@
-<?php
-/**
- * @file
- * Template to control the add content modal.
- */
-?>
-<div class="panels-add-content-modal">
-  <div class="panels-section-column panels-section-column-categories">
-    <div class="inside">
-      <div class="panels-categories-box">
-      <?php foreach ($categories_array as $category): ?>
-        <?php print $category; ?>
-      <?php endforeach; ?>
-      </div>
-      <?php print $root_content; ?>
-    </div>
-  </div>
-
-  <?php print $messages; ?>
-
-  <?php if (!empty($header)): ?>
-    <div class="panels-categories-description">
-      <?php print $header; ?>
-    </div>
-  <?php endif; ?>
-
-  <?php if (!empty($columns)): ?>
-  <div class="panels-section-columns">
-    <?php foreach ($columns as $column_id => $column): ?>
-      <div class="panels-section-column panels-section-column-<?php print $column_id; ?> ">
-        <div class="inside">
-          <?php print $column; ?>
-        </div>
-      </div>
-    <?php endforeach; ?>
-  </div>
-  <?php endif; ?>
-</div>
diff --git a/templates/panels-dashboard-block.tpl.php b/templates/panels-dashboard-block.tpl.php
deleted file mode 100644
index c2a665e..0000000
--- a/templates/panels-dashboard-block.tpl.php
+++ /dev/null
@@ -1,13 +0,0 @@
-<?php
-?>
-<div class="dashboard-block">
-  <h3 class="dashboard-title"><?php print $block['title']; ?></h3>
-  <div class="dashboard-content <?php print $block['class']; ?>">
-    <?php print $block['content']; ?>
-    <?php if (!empty($block['link'])): ?>
-      <div class="links">
-        <?php print $block['link']; ?>
-      </div>
-    <?php endif; ?>
-  </div>
-</div>
diff --git a/templates/panels-dashboard-link.tpl.php b/templates/panels-dashboard-link.tpl.php
deleted file mode 100644
index 22f1241..0000000
--- a/templates/panels-dashboard-link.tpl.php
+++ /dev/null
@@ -1,12 +0,0 @@
-<?php
-?>
-<div class="dashboard-entry clearfix">
-  <div class="dashboard-text">
-    <div class="dashboard-link">
-      <?php print $link['title']; ?>
-    </div>
-    <div class="description">
-      <?php print $link['description']; ?>
-    </div>
-  </div>
-</div>
diff --git a/templates/panels-dashboard.tpl.php b/templates/panels-dashboard.tpl.php
deleted file mode 100644
index 109deab..0000000
--- a/templates/panels-dashboard.tpl.php
+++ /dev/null
@@ -1,11 +0,0 @@
-<?php
-?>
-<div class="panels-dashboard clearfix">
-  <div class="dashboard-left clearfix">
-    <?php print $left; ?>
-  </div>
-
-  <div class="dashboard-right clearfix">
-    <?php print $right; ?>
-  </div>
-</div>
diff --git a/templates/panels-pane.tpl.php b/templates/panels-pane.tpl.php
deleted file mode 100644
index b3ae51b..0000000
--- a/templates/panels-pane.tpl.php
+++ /dev/null
@@ -1,58 +0,0 @@
-<?php
-/**
- * @file panels-pane.tpl.php
- * Main panel pane template
- *
- * Variables available:
- * - $pane->type: the content type inside this pane
- * - $pane->subtype: The subtype, if applicable. If a view it will be the
- *   view name; if a node it will be the nid, etc.
- * - $title: The title of the content
- * - $content: The actual content
- * - $links: Any links associated with the content
- * - $more: An optional 'more' link (destination only)
- * - $admin_links: Administrative links associated with the content
- * - $feeds: Any feed icons or associated with the content
- * - $display: The complete panels display object containing all kinds of
- *   data including the contexts and all of the other panes being displayed.
- */
-?>
-<?php if ($pane_prefix): ?>
-  <?php print $pane_prefix; ?>
-<?php endif; ?>
-<div class="<?php print $classes; ?>" <?php print $id; ?> <?php print $attributes; ?>>
-  <?php if ($admin_links): ?>
-    <?php print $admin_links; ?>
-  <?php endif; ?>
-
-  <?php print render($title_prefix); ?>
-  <?php if ($title): ?>
-    <h2<?php print $title_attributes; ?>><?php print $title; ?></h2>
-  <?php endif; ?>
-  <?php print render($title_suffix); ?>
-
-  <?php if ($feeds): ?>
-    <div class="feed">
-      <?php print $feeds; ?>
-    </div>
-  <?php endif; ?>
-
-  <div class="pane-content">
-    <?php print render($content); ?>
-  </div>
-
-  <?php if ($links): ?>
-    <div class="links">
-      <?php print $links; ?>
-    </div>
-  <?php endif; ?>
-
-  <?php if ($more): ?>
-    <div class="more-link">
-      <?php print $more; ?>
-    </div>
-  <?php endif; ?>
-</div>
-<?php if ($pane_suffix): ?>
-  <?php print $pane_suffix; ?>
-<?php endif; ?>

From ed66105b1fdbcdf867ddc069065ed1241bf9e254 Mon Sep 17 00:00:00 2001
From: "samuel.mortenson" <samuel.mortenson@2582268.no-reply.drupal.org>
Date: Tue, 23 Feb 2016 15:31:20 -0800
Subject: [PATCH 06/24] Issue #2664002 by samuel.mortenson, japerry: Quickedit
 not working for Content Blocks rendered using the StandardDisplayBuilder

---
 panels_ipe/css/panels_ipe.css                      |  8 +++++++
 panels_ipe/js/panels_ipe.js                        |  4 ++--
 panels_ipe/js/views/AppView.js                     | 19 ++++++++++++----
 panels_ipe/js/views/BlockView.js                   | 25 ++++++++++++++++++----
 panels_ipe/js/views/LayoutView.js                  | 20 +++++++++--------
 panels_ipe/panels_ipe.routing.yml                  |  2 ++
 panels_ipe/src/Form/PanelsIPEBlockPluginForm.php   | 21 +++++++++++++++---
 .../DisplayBuilder/StandardDisplayBuilder.php      | 18 +++++++++++++++-
 8 files changed, 94 insertions(+), 23 deletions(-)

diff --git a/panels_ipe/css/panels_ipe.css b/panels_ipe/css/panels_ipe.css
index 676a183..d968b48 100644
--- a/panels_ipe/css/panels_ipe.css
+++ b/panels_ipe/css/panels_ipe.css
@@ -272,6 +272,14 @@ div.ipe-actions-block {
   text-transform: uppercase;
 }
 
+
+/* Fix contextual links hovering over action links. */
+
+[data-block-id] [data-contextual-id].contextual {
+  /* Top is normally hard-set at 6px, this puts it below the action bar. */
+  top: 35px;
+}
+
 /* Indicate that blocks are draggable */
 [data-block-id].active {
   cursor: move;
diff --git a/panels_ipe/js/panels_ipe.js b/panels_ipe/js/panels_ipe.js
index 247b32f..56374dd 100644
--- a/panels_ipe/js/panels_ipe.js
+++ b/panels_ipe/js/panels_ipe.js
@@ -171,8 +171,8 @@
     // initializing and ready to render.
     Backbone.trigger('PanelsIPEInitialized');
 
-    // Render our AppView.
-    $('body').append(Drupal.panels_ipe.app_view.render().$el);
+    // Render our AppView, without rendering the layout.
+    $('body').append(Drupal.panels_ipe.app_view.render(false).$el);
 
     function createTabModel(title, id) {
       return new Drupal.panels_ipe.TabModel({title: title, id: id});
diff --git a/panels_ipe/js/views/AppView.js b/panels_ipe/js/views/AppView.js
index 1a04740..979ce5c 100644
--- a/panels_ipe/js/views/AppView.js
+++ b/panels_ipe/js/views/AppView.js
@@ -75,10 +75,16 @@
     /**
      * Appends the IPE tray to the bottom of the screen.
      *
+     * @param {bool} render_layout
+     *   Whether or not the layout should be rendered. Useful for just calling
+     *   render on UI elements and not content.
+     *
      * @return {Drupal.panels_ipe.AppView}
      *   Returns this, for chaining.
      */
-    render: function () {
+    render: function (render_layout) {
+      render_layout = typeof render_layout !== 'undefined' ? render_layout : true;
+
       // Empty our list.
       this.$el.html(this.template(this.model.toJSON()));
       // Add our tab collection to the App.
@@ -88,7 +94,7 @@
       this.$el.toggleClass('unsaved', this.model.get('unsaved'));
 
       // Re-render our layout.
-      if (this.layoutView) {
+      if (this.layoutView && render_layout) {
         this.layoutView.render();
       }
       return this;
@@ -143,6 +149,10 @@
      *   The new layout model.
      */
     changeLayout: function (layout) {
+      // Early render the tabs and layout - if changing the Layout was the first
+      // action on the page the Layout would have never been rendered.
+      this.render();
+
       // Grab all the blocks from the current layout.
       var regions = this.model.get('layout').get('regionCollection');
       var block_collection = new Drupal.panels_ipe.BlockCollection();
@@ -292,8 +302,9 @@
       this.model.get('cancelTab').set('hidden', !this.model.get('unsaved'));
       this.model.get('saveTab').set('hidden', !this.model.get('unsaved'));
 
-      // Re-render ourselves.
-      this.render();
+      // Re-render ourselves, pass "false" as we don't need to re-render the
+      // layout, just the tabs.
+      this.render(false);
     }
 
   });
diff --git a/panels_ipe/js/views/BlockView.js b/panels_ipe/js/views/BlockView.js
index 77fd5de..c8a6cec 100644
--- a/panels_ipe/js/views/BlockView.js
+++ b/panels_ipe/js/views/BlockView.js
@@ -62,7 +62,6 @@
         this.model.set({html: this.$el.prop('outerHTML')});
       }
       this.listenTo(this.model, 'reset', this.render);
-      this.listenTo(this.model, 'change:active', this.render);
     },
 
     /**
@@ -76,9 +75,6 @@
       this.$el.replaceWith(this.model.get('html'));
       this.setElement("[data-block-id='" + this.model.get('uuid') + "']");
 
-      // Attach any Drupal behaviors.
-      Drupal.attachBehaviors(this.el);
-
       // We modify our content if the IPE is active.
       if (this.model.get('active')) {
         // Prepend the ipe-actions header.
@@ -112,6 +108,27 @@
       }
 
       return this;
+    },
+
+    /**
+     * Overrides the default remove function to make a copy of our current HTML
+     * into the Model for future rendering. This is required as modules like
+     * Quickedit modify Block HTML without our knowledge.
+     *
+     * @returns {Drupal.panels_ipe.BlockView}
+     */
+    remove: function() {
+      // Remove known augmentations to HTML so that they do not persist.
+      this.$('.ipe-actions-block').remove();
+      this.$el.removeClass('ipe-highlight active');
+
+      // Update our Block model HTML based on our current visual state.
+      this.model.set({html: this.$el.prop('outerHTML')});
+
+      // Call the normal Backbow.view.remove() routines.
+      this._removeElement();
+      this.stopListening();
+      return this;
     }
 
   });
diff --git a/panels_ipe/js/views/LayoutView.js b/panels_ipe/js/views/LayoutView.js
index 651564b..14223a0 100644
--- a/panels_ipe/js/views/LayoutView.js
+++ b/panels_ipe/js/views/LayoutView.js
@@ -154,7 +154,6 @@
         }, this);
       }, this);
 
-      // Attach any Drupal behaviors.
       Drupal.attachBehaviors(this.el);
 
       return this;
@@ -374,16 +373,19 @@
       var new_region = this.model.get('regionCollection').get(new_region_name);
       new_region.get('blockCollection').add(block, {at: index, silent: true});
 
-      // Re-render ourselves.
-      // We do this twice as jQuery UI mucks with the DOM as it lets go of a
-      // cloned element. Typically we would only ever need to re-render once.
-      this.render().render();
+      // Re-render after the current execution cycle, to account for DOM editing
+      // that jQuery.ui is going to do on this run. Modules like Contextual do
+      // something similar to ensure rendering order is preserved.
+      var self = this;
+      window.setTimeout(function (){
+        self.render();
 
-      // Highlight the block.
-      this.$('[data-block-id="' + id + '"]').addClass('ipe-highlight');
+        // Highlight the block.
+        self.$('[data-block-id="' + id + '"]').addClass('ipe-highlight');
 
-      // Mark that we have unsaved changes in our App.
-      Drupal.panels_ipe.app.set('unsaved', true);
+        // Mark that we have unsaved changes in our App.
+        Drupal.panels_ipe.app.set('unsaved', true);
+      });
     },
 
     /**
diff --git a/panels_ipe/panels_ipe.routing.yml b/panels_ipe/panels_ipe.routing.yml
index fdb69a9..91561df 100644
--- a/panels_ipe/panels_ipe.routing.yml
+++ b/panels_ipe/panels_ipe.routing.yml
@@ -22,6 +22,8 @@ panels_ipe.block_plugin.form:
   requirements:
     _panels_storage_access: read
     _permission: 'access panels in-place editing'
+  options:
+    _admin_route: FALSE
 
 panels_ipe.block_plugin_existing.form:
   path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layout/{layout_id}/block_plugins/{plugin_id}/block/{block_uuid}/form'
diff --git a/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php b/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
index 78fc6d4..0a544f9 100644
--- a/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
+++ b/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
@@ -15,8 +15,8 @@
 use Drupal\Core\Plugin\Context\ContextHandlerInterface;
 use Drupal\Core\Plugin\ContextAwarePluginAssignmentTrait;
 use Drupal\Core\Plugin\ContextAwarePluginInterface;
-use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Render\Element;
+use Drupal\Core\Render\RendererInterface;
 use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
 use Drupal\user\SharedTempStoreFactory;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -291,7 +291,18 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
 
     // Assemble data required for our App.
     $build = $this->buildBlockInstance($block_instance);
-    $form['build'] = $build;
+
+    // Bubble block attributes up if possible. This allows modules like
+    // Quickedit to function.
+    // See \Drupal\block\BlockViewBuilder::preRender() for reference.
+    if ($build['content'] !== NULL && !Element::isEmpty($build['content'])) {
+      foreach (['#attributes', '#contextual_links'] as $property) {
+        if (isset($build['content'][$property])) {
+          $build[$property] += $build['content'][$property];
+          unset($build['content'][$property]);
+        }
+      }
+    }
 
     // Add our data attribute for the Backbone app.
     $build['#attributes']['data-block-id'] = $uuid;
@@ -301,9 +312,11 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
       'label' => $block_instance->label(),
       'id' => $block_instance->getPluginId(),
       'region' => $block_config['region'],
-      'html' => $this->renderer->render($build)
+      'html' => $this->renderer->render($build),
     ];
 
+    $form['build'] = $build;
+
     // Add Block metadata and HTML as a drupalSetting.
     $form['#attached']['drupalSettings']['panels_ipe']['updated_block'] = $block_model;
 
@@ -436,6 +449,8 @@ protected function buildBlockInstance($block_instance) {
     // Compile the render array.
     $build = [
       '#theme' => 'block',
+      '#attributes' => [],
+      '#contextual_links' => [],
       '#configuration' => $configuration,
       '#plugin_id' => $block_instance->getPluginId(),
       '#base_plugin_id' => $block_instance->getBaseId(),
diff --git a/src/Plugin/DisplayBuilder/StandardDisplayBuilder.php b/src/Plugin/DisplayBuilder/StandardDisplayBuilder.php
index a831912..1e23671 100644
--- a/src/Plugin/DisplayBuilder/StandardDisplayBuilder.php
+++ b/src/Plugin/DisplayBuilder/StandardDisplayBuilder.php
@@ -11,6 +11,7 @@
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\Context\ContextHandlerInterface;
 use Drupal\Core\Plugin\ContextAwarePluginInterface;
+use Drupal\Core\Render\Element;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\layout_plugin\Plugin\Layout\LayoutInterface;
 use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
@@ -107,13 +108,28 @@ protected function buildRegions(array $regions, array $contexts) {
           $block_render_array = [
             '#theme' => 'block',
             '#attributes' => [],
+            '#contextual_links' => [],
             '#weight' => $weight++,
             '#configuration' => $block->getConfiguration(),
             '#plugin_id' => $block->getPluginId(),
             '#base_plugin_id' => $block->getBaseId(),
             '#derivative_plugin_id' => $block->getDerivativeId(),
           ];
-          $block_render_array['content'] = $block->build();
+
+          // Build the block and bubble its attributes up if possible. This
+          // allows modules like Quickedit to function.
+          // See \Drupal\block\BlockViewBuilder::preRender() for reference.
+          $content = $block->build();
+          if ($content !== NULL && !Element::isEmpty($content)) {
+            foreach (['#attributes', '#contextual_links'] as $property) {
+              if (isset($content[$property])) {
+                $block_render_array[$property] += $content[$property];
+                unset($content[$property]);
+              }
+            }
+          }
+
+          $block_render_array['content'] = $content;
 
           $build[$region][$block_id] = $block_render_array;
         }

From 314dae8cae5b1ef5664cf44d100833b355fb3ce8 Mon Sep 17 00:00:00 2001
From: felribeiro <felribeiro@1902796.no-reply.drupal.org>
Date: Tue, 23 Feb 2016 16:34:06 -0800
Subject: [PATCH 07/24] Issue #2667668 by felribeiro: Remove IPE permissions
 from the Panels module

---
 panels.permissions.yml | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/panels.permissions.yml b/panels.permissions.yml
index 0023a44..245d542 100644
--- a/panels.permissions.yml
+++ b/panels.permissions.yml
@@ -8,12 +8,6 @@ view pane admin links:
 administer pane access:
   title: 'Configure access settings on Panel panes'
   description: 'Access rules (often also called visibility rules) can be configured on a per-pane basis. This permission allows users to configure those settings.'
-use panels in place editing:
-  title: 'Use the Panels In-Place Editor'
-  description: 'Allows a user to utilize Panels'' In-Place Editor.'
-change layouts in place editing:
-  title: 'Change layouts with the Panels In-Place Editor'
-  description: 'Allows a user to change layouts with the IPE.'
 administer advanced pane settings:
   title: 'Configure advanced settings on Panel panes'
 administer panels layouts:

From 63863dbc45517639317a61381a3e18d9f8336009 Mon Sep 17 00:00:00 2001
From: Jakob Perry <japerry@45640.no-reply.drupal.org>
Date: Tue, 23 Feb 2016 16:43:56 -0800
Subject: [PATCH 08/24] Issue #2624684 by japerry, rakesh.gectcr: Add
 composer.json to module

---
 composer.json | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)
 create mode 100644 composer.json

diff --git a/composer.json b/composer.json
new file mode 100644
index 0000000..fc1802f
--- /dev/null
+++ b/composer.json
@@ -0,0 +1,29 @@
+{
+  "name": "drupal/panels",
+  "description": "Core Panels display functions; provides no external UI, at least one other Panels module should be enabled.",
+  "type": "drupal-module",
+  "homepage": "https://www.drupal.org/project/panels",
+  "authors": [
+    {
+      "name": "Jakob Perry",
+      "homepage": "https://www.drupal.org/u/japerry"
+    },
+    {
+      "name": "Samuel Mortenson",
+      "homepage": "https://www.drupal.org/u/samuel.mortenson"
+    },
+    {
+      "name": "See other contributors",
+      "homepage":"https://www.drupal.org/node/74958/committers"
+    }
+
+  ],
+  "support": {
+    "issues": "https://www.drupal.org/project/issues/panels",
+    "irc": "irc://irc.freenode.org/drupal-scotch",
+    "source": "http://git.drupal.org/project/panels.git"
+  },
+  "license": "GPL-2.0+",
+  "minimum-stability": "dev",
+  "require": {}
+}
\ No newline at end of file

From 5c6415c94da347fc9695512b072e619abfbe681d Mon Sep 17 00:00:00 2001
From: legolasbo <legolasbo@2480548.no-reply.drupal.org>
Date: Tue, 23 Feb 2016 19:34:15 -0800
Subject: [PATCH 09/24] Issue #2665836 by legolasbo, samuel.mortenson, japerry:
 Moving to different regions, changing weight, and removing blocks should
 trigger an AJAX call in the IPE

---
 panels_ipe/js/views/LayoutView.js                  |  48 +++++--
 panels_ipe/panels_ipe.routing.yml                  |  22 +++-
 .../src/Controller/PanelsIPEPageController.php     | 145 ++++++++-------------
 .../src/Exception/EmptyRequestContentException.php |   8 ++
 .../src/Helpers/RemoveBlockRequestHandler.php      |  23 ++++
 panels_ipe/src/Helpers/RequestHandlerBase.php      | 143 ++++++++++++++++++++
 panels_ipe/src/Helpers/RequestHandlerInterface.php |  24 ++++
 .../src/Helpers/UpdateLayoutRequestHandler.php     |  67 ++++++++++
 .../panels_ipe/RemoveBlockRequestHandlerTest.php   |  45 +++++++
 .../src/Unit/panels_ipe/RequestHandlerTestBase.php |  60 +++++++++
 .../panels_ipe/UpdateLayoutRequestHandlerTest.php  |  99 ++++++++++++++
 11 files changed, 582 insertions(+), 102 deletions(-)
 create mode 100644 panels_ipe/src/Exception/EmptyRequestContentException.php
 create mode 100644 panels_ipe/src/Helpers/RemoveBlockRequestHandler.php
 create mode 100644 panels_ipe/src/Helpers/RequestHandlerBase.php
 create mode 100644 panels_ipe/src/Helpers/RequestHandlerInterface.php
 create mode 100644 panels_ipe/src/Helpers/UpdateLayoutRequestHandler.php
 create mode 100644 tests/src/Unit/panels_ipe/RemoveBlockRequestHandlerTest.php
 create mode 100644 tests/src/Unit/panels_ipe/RequestHandlerTestBase.php
 create mode 100644 tests/src/Unit/panels_ipe/UpdateLayoutRequestHandlerTest.php

diff --git a/panels_ipe/js/views/LayoutView.js b/panels_ipe/js/views/LayoutView.js
index 14223a0..d2eba8e 100644
--- a/panels_ipe/js/views/LayoutView.js
+++ b/panels_ipe/js/views/LayoutView.js
@@ -154,6 +154,7 @@
         }, this);
       }, this);
 
+      // Attach any Drupal behaviors.
       Drupal.attachBehaviors(this.el);
 
       return this;
@@ -272,6 +273,37 @@
     },
 
     /**
+     * Saves the current state of the layout to the tempstore.
+     */
+    saveToTempStore: function () {
+      var model = this.model;
+      var urlRoot = Drupal.panels_ipe.urlRoot(drupalSettings);
+      var options = {url: urlRoot + '/layouts/' + model.get('id') + '/tempstore'};
+
+      Backbone.sync('update', model, options);
+
+      Drupal.panels_ipe.app.set('unsaved', true);
+    },
+
+    /**
+     * Removes the block on the server via an AJAX call.
+     *
+     * @param {string} block_uuid
+     *   The UUID/ID of a BlockModel.
+     */
+    removeServerSideBlock: function (block_uuid) {
+      var urlRoot = Drupal.panels_ipe.urlRoot(drupalSettings);
+      $.ajax({
+        url: urlRoot + '/layouts/' + this.model.get('id') + '/remove_block',
+        method: 'DELETE',
+        data: JSON.stringify(block_uuid),
+        contentType: "application/json; charset=UTF-8"
+      });
+
+      Drupal.panels_ipe.app.set('unsaved', true);
+    },
+
+    /**
      * Moves a block up or down in its RegionModel's BlockCollection.
      *
      * @param {Object} e
@@ -298,8 +330,7 @@
       // Highlight the block.
       this.$('[data-block-id="' + id + '"]').addClass('ipe-highlight');
 
-      // Mark that we have unsaved changes in our App.
-      Drupal.panels_ipe.app.set('unsaved', true);
+      this.saveToTempStore();
     },
 
     /**
@@ -319,14 +350,10 @@
       // Remove the block.
       region.get('blockCollection').remove(id);
 
-      // Add the UUID to an array our backend will later consume.
-      this.model.get('deletedBlocks').push(id);
-
       // Re-render ourselves.
       this.render();
 
-      // Mark that we have unsaved changes in our App.
-      Drupal.panels_ipe.app.set('unsaved', true);
+      this.removeServerSideBlock(id);
     },
 
     /**
@@ -377,15 +404,14 @@
       // that jQuery.ui is going to do on this run. Modules like Contextual do
       // something similar to ensure rendering order is preserved.
       var self = this;
-      window.setTimeout(function (){
+      window.setTimeout(function () {
         self.render();
 
         // Highlight the block.
         self.$('[data-block-id="' + id + '"]').addClass('ipe-highlight');
-
-        // Mark that we have unsaved changes in our App.
-        Drupal.panels_ipe.app.set('unsaved', true);
       });
+
+      this.saveToTempStore();
     },
 
     /**
diff --git a/panels_ipe/panels_ipe.routing.yml b/panels_ipe/panels_ipe.routing.yml
index 91561df..2ec4183 100644
--- a/panels_ipe/panels_ipe.routing.yml
+++ b/panels_ipe/panels_ipe.routing.yml
@@ -70,16 +70,34 @@ panels_ipe.layout.form:
 panels_ipe.layout.update:
   path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layouts/{layout_id}'
   defaults:
-    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::updateLayout'
+    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::handleUpdateLayoutRequest'
   requirements:
     _panels_storage_access: update
     _permission: 'access panels in-place editing'
     _method: 'PUT'
 
+panels_ipe.layout.update_tempstore:
+  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layouts/{layout_id}/tempstore'
+  defaults:
+    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::handleUpdateLayoutTempStorageRequest'
+  requirements:
+    _panels_storage_access: update
+    _permission: 'access panels in-place editing'
+    _method: 'PUT'
+
+panels_ipe.layout.remove_block:
+  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layouts/{layout_id}/remove_block'
+  defaults:
+    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::handleRemoveBlockRequest'
+  requirements:
+    _panels_storage_access: update
+    _permission: 'access panels in-place editing'
+    _method: 'DELETE'
+
 panels_ipe.layout.save:
   path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layouts/{layout_id}'
   defaults:
-    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::createLayout'
+    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::handleCreateLayoutRequest'
   requirements:
     _panels_storage_access: update
     _permission: 'access panels in-place editing'
diff --git a/panels_ipe/src/Controller/PanelsIPEPageController.php b/panels_ipe/src/Controller/PanelsIPEPageController.php
index cd9a2ef..b159686 100644
--- a/panels_ipe/src/Controller/PanelsIPEPageController.php
+++ b/panels_ipe/src/Controller/PanelsIPEPageController.php
@@ -7,17 +7,16 @@
 
 namespace Drupal\panels_ipe\Controller;
 
-use Drupal\Component\Serialization\Json;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\AppendCommand;
 use Drupal\Core\Block\BlockManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
-use Drupal\Core\Form\FormState;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\layout_plugin\Plugin\Layout\LayoutPluginManagerInterface;
-use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
 use Drupal\panels\Storage\PanelsStorageManagerInterface;
+use Drupal\panels_ipe\Helpers\RemoveBlockRequestHandler;
+use Drupal\panels_ipe\Helpers\UpdateLayoutRequestHandler;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
@@ -58,11 +57,22 @@ class PanelsIPEPageController extends ControllerBase {
   protected $tempStore;
 
   /**
+   * @var \Drupal\panels_ipe\Helpers\UpdateLayoutRequestHandler
+   */
+  private $updateLayoutRequestHandler;
+
+  /**
+   * @var \Drupal\panels_ipe\Helpers\RemoveBlockRequestHandler
+   */
+  private $removeBlockRequestHandler;
+
+  /**
    * Constructs a new PanelsIPEController.
    *
    * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
    * @param \Drupal\Core\Render\RendererInterface $renderer
    * @param \Drupal\layout_plugin\Plugin\Layout\LayoutPluginManagerInterface $layout_plugin_manager
+   * @param \Drupal\panels\Storage\PanelsStorageManagerInterface $panels_storage_manager
    * @param \Drupal\user\SharedTempStoreFactory $temp_store_factory
    */
   public function __construct(BlockManagerInterface $block_manager, RendererInterface $renderer, LayoutPluginManagerInterface $layout_plugin_manager, PanelsStorageManagerInterface $panels_storage_manager, SharedTempStoreFactory $temp_store_factory) {
@@ -71,6 +81,8 @@ public function __construct(BlockManagerInterface $block_manager, RendererInterf
     $this->layoutPluginManager = $layout_plugin_manager;
     $this->panelsStorage = $panels_storage_manager;
     $this->tempStore = $temp_store_factory->get('panels_ipe');
+    $this->updateLayoutRequestHandler = new UpdateLayoutRequestHandler($this->moduleHandler(), $this->panelsStorage, $this->tempStore);
+    $this->removeBlockRequestHandler = new RemoveBlockRequestHandler($this->moduleHandler(), $this->panelsStorage, $this->tempStore);
   }
 
   /**
@@ -110,49 +122,16 @@ protected function loadPanelsDisplay($panels_storage_type, $panels_storage_id) {
   }
 
   /**
-   * Saves the current Panels display in the tempstore or real storage..
-   *
-   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
-   *   The Panels display to be saved.
-   * @param bool $temp
-   *   Whether or not to save to temp store.
-   *
-   * @return \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant
-   *   The Panels display that was saved.
-   *
-   * @throws \Drupal\user\TempStoreException
-   *   If there are any issues manipulating the entry in the temp store.
-   */
-  protected function savePanelsDisplay(PanelsDisplayVariant $panels_display, $temp = TRUE) {
-    $temp_store_key = $panels_display->id();
-
-    // Save configuration to temp store.
-    if ($temp) {
-      $this->tempStore->set($temp_store_key, $panels_display->getConfiguration());
-    }
-    else {
-      // Check to see if temp store has configuration saved.
-      if ($variant_config = $this->tempStore->get($temp_store_key)) {
-        // Delete the existing temp store value.
-        $this->tempStore->delete($temp_store_key);
-      }
-
-      // Save to the real storage.
-      $this->panelsStorage->save($panels_display);
-    }
-
-    return $panels_display;
-  }
-
-  /**
    * Removes any temporary changes to the variant.
    *
-   * @param string $panels_display_id
-   *   The id of the current Panels display.
-   * @param \Symfony\Component\HttpFoundation\Request $request
-   *   The current request.
+   * @param string $panels_storage_type
+   *   The id of the storage plugin.
+   * @param string $panels_storage_id
+   *   The id within the storage plugin for the requested Panels display.
    *
    * @return \Symfony\Component\HttpFoundation\JsonResponse
+   *
+   * @throws \Drupal\user\TempStoreException
    */
   public function cancel($panels_storage_type, $panels_storage_id) {
     $panels_display = $this->loadPanelsDisplay($panels_storage_type, $panels_storage_id);
@@ -228,48 +207,25 @@ public function getLayoutForm($panels_storage_type, $panels_storage_id, $layout_
   }
 
   /**
-   * Updates the current Panels display based on the changes done in our app.
+   * Updates (PUT) an existing Layout in this Variant.
    *
-   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
-   *   The current Panels display.
-   * @param array $layout_model
-   *   The decoded LayoutModel from our App.
+   * @param string $panels_storage_type
+   *   The id of the storage plugin.
+   * @param string $panels_storage_id
+   *   The id within the storage plugin for the requested Panels display.
+   * @param \Symfony\Component\HttpFoundation\Request $request
+   *   The current request.
    *
    * @return \Symfony\Component\HttpFoundation\JsonResponse
    */
-  protected function updatePanelsDisplay(PanelsDisplayVariant $panels_display, array $layout_model) {
-    // Set our weight and region based on the metadata in our Backbone app.
-    foreach ($layout_model['regionCollection'] as $region) {
-      $weight = 0;
-      foreach ($region['blockCollection'] as $block) {
-        /** @var \Drupal\Core\Block\BlockBase $block_instance */
-        $block_instance = $panels_display->getBlock($block['uuid']);
-
-        $block_instance->setConfigurationValue('region', $region['name']);
-        $block_instance->setConfigurationValue('weight', ++$weight);
-
-        $panels_display->updateBlock($block['uuid'], $block_instance->getConfiguration());
-      }
-    }
-
-    // Remove blocks that need removing.
-    // @todo We should do this on the fly instead of at on save.
-    foreach ($layout_model['deletedBlocks'] as $uuid) {
-      $panels_display->removeBlock($uuid);
-    }
-
-    // Allow other modules to modify the display before saving based on the
-    // contents of our $layout_model.
-    $this->moduleHandler()->invokeAll('panels_ipe_panels_display_presave', [$panels_display, $layout_model]);
-
-    // Save the variant and remove temp storage.
-    $this->savePanelsDisplay($panels_display, FALSE);
-
-    return new JsonResponse(['deletedBlocks' => []]);
+  public function handleUpdateLayoutRequest($panels_storage_type, $panels_storage_id, Request $request) {
+    $panels_display = $this->loadPanelsDisplay($panels_storage_type, $panels_storage_id);
+    $this->updateLayoutRequestHandler->handleRequest($panels_display, $request);
+    return $this->updateLayoutRequestHandler->getJsonResponse();
   }
 
   /**
-   * Updates (PUT) an existing Layout in this Variant.
+   * Stores changes to the temporary storage.
    *
    * @param string $panels_storage_type
    *   The id of the storage plugin.
@@ -280,17 +236,10 @@ protected function updatePanelsDisplay(PanelsDisplayVariant $panels_display, arr
    *
    * @return \Symfony\Component\HttpFoundation\JsonResponse
    */
-  public function updateLayout($panels_storage_type, $panels_storage_id, Request $request) {
+  public function handleUpdateLayoutTempStorageRequest($panels_storage_type, $panels_storage_id, Request $request) {
     $panels_display = $this->loadPanelsDisplay($panels_storage_type, $panels_storage_id);
-
-    // Decode the request.
-    $content = $request->getContent();
-    if (!empty($content) && $layout_model = Json::decode($content)) {
-      return $this->updatePanelsDisplay($panels_display, $layout_model);
-    }
-    else {
-      return new JsonResponse(['success' => false], 400);
-    }
+    $this->updateLayoutRequestHandler->handleRequest($panels_display, $request, TRUE);
+    return $this->updateLayoutRequestHandler->getJsonResponse();
   }
 
   /**
@@ -305,9 +254,27 @@ public function updateLayout($panels_storage_type, $panels_storage_id, Request $
    *
    * @return \Symfony\Component\HttpFoundation\JsonResponse
    */
-  public function createLayout($panels_storage_type, $panels_storage_id, Request $request) {
+  public function handleCreateLayoutRequest($panels_storage_type, $panels_storage_id, Request $request) {
     // For now, creating and updating a layout is the same thing.
-    return $this->updateLayout($panels_storage_type, $panels_storage_id, $request);
+    return $this->handleUpdateLayoutRequest($panels_storage_type, $panels_storage_id, $request);
+  }
+
+  /**
+   * Removes a block from the layout.
+   *
+   * @param string $panels_storage_type
+   *   The id of the storage plugin.
+   * @param string $panels_storage_id
+   *   The id within the storage plugin for the requested Panels display.
+   * @param \Symfony\Component\HttpFoundation\Request $request
+   *   The current request.
+   *
+   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   */
+  public function handleRemoveBlockRequest($panels_storage_type, $panels_storage_id, Request $request) {
+    $panels_display = $this->loadPanelsDisplay($panels_storage_type, $panels_storage_id);
+    $this->removeBlockRequestHandler->handleRequest($panels_display, $request, TRUE);
+    return $this->updateLayoutRequestHandler->getJsonResponse();
   }
 
   /**
diff --git a/panels_ipe/src/Exception/EmptyRequestContentException.php b/panels_ipe/src/Exception/EmptyRequestContentException.php
new file mode 100644
index 0000000..7b18cd1
--- /dev/null
+++ b/panels_ipe/src/Exception/EmptyRequestContentException.php
@@ -0,0 +1,8 @@
+<?php
+
+namespace Drupal\panels_ipe\Exception;
+
+/**
+ * Defines an exception thrown when a request object has no contents.
+ */
+class EmptyRequestContentException extends \Exception {}
diff --git a/panels_ipe/src/Helpers/RemoveBlockRequestHandler.php b/panels_ipe/src/Helpers/RemoveBlockRequestHandler.php
new file mode 100644
index 0000000..708f673
--- /dev/null
+++ b/panels_ipe/src/Helpers/RemoveBlockRequestHandler.php
@@ -0,0 +1,23 @@
+<?php
+
+namespace Drupal\panels_ipe\Helpers;
+
+use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
+
+class RemoveBlockRequestHandler extends RequestHandlerBase {
+
+  /**
+   * @inheritdoc
+   */
+  protected function handle(PanelsDisplayVariant $panels_display, $decoded_request, $save_to_temp_store = FALSE) {
+    $panels_display->removeBlock($decoded_request);
+
+    if ($save_to_temp_store) {
+      $this->savePanelsDisplayToTempStore($panels_display);
+    }
+    else {
+      $this->savePanelsDisplay($panels_display);
+    }
+  }
+
+}
diff --git a/panels_ipe/src/Helpers/RequestHandlerBase.php b/panels_ipe/src/Helpers/RequestHandlerBase.php
new file mode 100644
index 0000000..4b04a5b
--- /dev/null
+++ b/panels_ipe/src/Helpers/RequestHandlerBase.php
@@ -0,0 +1,143 @@
+<?php
+
+namespace Drupal\panels_ipe\Helpers;
+
+use Drupal\Component\Serialization\Json;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
+use Drupal\panels\Storage\PanelsStorageManagerInterface;
+use Drupal\panels_ipe\Exception\EmptyRequestContentException;
+use Drupal\user\SharedTempStore;
+use Symfony\Component\HttpFoundation\JsonResponse;
+use Symfony\Component\HttpFoundation\Request;
+
+abstract class RequestHandlerBase implements RequestHandlerInterface {
+
+  /** @var int */
+  private $responseStatusCode = 200;
+
+  /** @var array */
+  private $response = [];
+
+  /** @var \Drupal\user\SharedTempStore */
+  private $tempStore;
+
+  /** @var \Drupal\panels\Storage\PanelsStorageManagerInterface */
+  private $panelsStore;
+
+  /** @var \Drupal\Core\Extension\ModuleHandlerInterface */
+  private $moduleHandler;
+
+  public function __construct(ModuleHandlerInterface $module_handler, PanelsStorageManagerInterface $panels_store, SharedTempStore $temp_store) {
+    $this->moduleHandler = $module_handler;
+    $this->panelsStore = $panels_store;
+    $this->tempStore = $temp_store;
+  }
+
+  /**
+   * @inheritdoc
+   */
+  public function handleRequest(PanelsDisplayVariant $panels_display, Request $request, $save_to_temp_store = FALSE) {
+    $this->setResponse([]);
+
+    try {
+      $this->handle($panels_display, self::decodeRequest($request), $save_to_temp_store);
+    }
+    catch (EmptyRequestContentException $e) {
+      $this->setResponse(['success' => FALSE], 400);
+    }
+  }
+
+  /**
+   * Handles the decoded request by making some change to the Panels Display.
+   *
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   * @param mixed $decoded_request
+   * @param bool $save_to_temp_store
+   *
+   * @throws \Drupal\panels_ipe\Exception\EmptyRequestContentException
+   */
+  protected abstract function handle(PanelsDisplayVariant $panels_display, $decoded_request, $save_to_temp_store = FALSE);
+
+  /**
+   * Attempts to decode the incoming request's content as JSON.
+   *
+   * @param \Symfony\Component\HttpFoundation\Request $request
+   *
+   * @return mixed
+   *
+   * @throws \Drupal\panels_ipe\Exception\EmptyRequestContentException
+   */
+  protected static function decodeRequest(Request $request) {
+    if (empty($request->getContent())) {
+      throw new EmptyRequestContentException();
+    }
+
+    return Json::decode($request->getContent());
+  }
+
+  /**
+   * Helper function for invoking hooks for all enabled modules.
+   *
+   * @param $hook
+   * @param array $arguments
+   */
+  protected function invokeHook($hook, array $arguments) {
+    $this->moduleHandler->invokeAll($hook, $arguments);
+  }
+
+  /**
+   * Deletes TempStore and saves the current Panels display.
+   *
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   *   The Panels display to be saved.
+   *
+   * @throws \Drupal\user\TempStoreException
+   *   If there are any issues manipulating the entry in the temp store.
+   */
+  protected function savePanelsDisplay(PanelsDisplayVariant $panels_display) {
+    $this->deletePanelsDisplayTempStore($panels_display);
+    $this->panelsStore->save($panels_display);
+  }
+
+  /**
+   * Saves the given Panels Display to TempStore.
+   *
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   * @throws \Drupal\user\TempStoreException
+   */
+  protected function savePanelsDisplayToTempStore(PanelsDisplayVariant $panels_display) {
+    $this->tempStore->set($panels_display->id(), $panels_display->getConfiguration());
+  }
+
+  /**
+   * Deletes the given Panels Display from TempStore.
+   *
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   * @throws \Drupal\user\TempStoreException
+   */
+  protected function deletePanelsDisplayTempStore(PanelsDisplayVariant $panels_display) {
+    $this->tempStore->delete($panels_display->id());
+  }
+
+  /**
+   * Returns the current response data as a JSON Response.
+   *
+   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   */
+  public function getJsonResponse() {
+    return new JsonResponse($this->response, $this->responseStatusCode);
+  }
+
+  /**
+   * Updates our response and response status code properties.
+   *
+   * @param array $response
+   * @param int $response_status_code
+   */
+  protected function setResponse(array $response, $response_status_code = 200) {
+    $this->response = $response;
+    $this->responseStatusCode = $response_status_code;
+  }
+
+}
diff --git a/panels_ipe/src/Helpers/RequestHandlerInterface.php b/panels_ipe/src/Helpers/RequestHandlerInterface.php
new file mode 100644
index 0000000..da0474d
--- /dev/null
+++ b/panels_ipe/src/Helpers/RequestHandlerInterface.php
@@ -0,0 +1,24 @@
+<?php
+
+namespace Drupal\panels_ipe\Helpers;
+
+use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
+use Symfony\Component\HttpFoundation\Request;
+
+interface RequestHandlerInterface {
+
+  /**
+   * Handles an incoming request for a given PanelsDisplayVariant.
+   *
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param bool $save_to_temp_store
+   */
+  public function handleRequest(PanelsDisplayVariant $panels_display, Request $request, $save_to_temp_store = FALSE);
+
+  /**
+   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   */
+  public function getJsonResponse();
+
+}
diff --git a/panels_ipe/src/Helpers/UpdateLayoutRequestHandler.php b/panels_ipe/src/Helpers/UpdateLayoutRequestHandler.php
new file mode 100644
index 0000000..bc54e2e
--- /dev/null
+++ b/panels_ipe/src/Helpers/UpdateLayoutRequestHandler.php
@@ -0,0 +1,67 @@
+<?php
+
+namespace Drupal\panels_ipe\Helpers;
+
+use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
+
+class UpdateLayoutRequestHandler extends RequestHandlerBase {
+
+  /**
+   * @inheritdoc
+   */
+  protected function handle(PanelsDisplayVariant $panels_display, $decodedRequest, $save_to_temp_store = FALSE) {
+    $this->updateLayout($panels_display, $decodedRequest, $save_to_temp_store);
+  }
+
+  /**
+   * Changes the layout for the given Panels Display.
+   *
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   * @param $layout_model
+   * @param bool $save_to_temp_store
+   */
+  private function updateLayout(PanelsDisplayVariant $panels_display, $layout_model, $save_to_temp_store = FALSE) {
+    $panels_display = self::updatePanelsDisplay($panels_display, $layout_model);
+
+    $this->invokeHook('panels_ipe_panels_display_presave', [
+      $panels_display,
+      $layout_model
+    ]);
+
+    if ($save_to_temp_store) {
+      $this->savePanelsDisplayToTempStore($panels_display);
+    }
+    else {
+      $this->savePanelsDisplay($panels_display);
+    }
+  }
+
+  /**
+   * Updates the current Panels display based on the changes done in our app.
+   *
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   *   The current Panels display.
+   * @param array $layout_model
+   *   The decoded LayoutModel from our App.
+   *
+   * @return \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant
+   */
+  private static function updatePanelsDisplay(PanelsDisplayVariant $panels_display, array $layout_model) {
+    // Set our weight and region based on the metadata in our Backbone app.
+    foreach ($layout_model['regionCollection'] as $region) {
+      $weight = 0;
+      foreach ($region['blockCollection'] as $block) {
+        /** @var \Drupal\Core\Block\BlockBase $block_instance */
+        $block_instance = $panels_display->getBlock($block['uuid']);
+
+        $block_instance->setConfigurationValue('region', $region['name']);
+        $block_instance->setConfigurationValue('weight', ++$weight);
+
+        $panels_display->updateBlock($block['uuid'], $block_instance->getConfiguration());
+      }
+    }
+
+    return $panels_display;
+  }
+
+}
diff --git a/tests/src/Unit/panels_ipe/RemoveBlockRequestHandlerTest.php b/tests/src/Unit/panels_ipe/RemoveBlockRequestHandlerTest.php
new file mode 100644
index 0000000..9eda8c7
--- /dev/null
+++ b/tests/src/Unit/panels_ipe/RemoveBlockRequestHandlerTest.php
@@ -0,0 +1,45 @@
+<?php
+
+namespace Drupal\Tests\panels\Unit\panels_ipe;
+
+use Drupal\panels_ipe\Helpers\RemoveBlockRequestHandler;
+use Symfony\Component\HttpFoundation\JsonResponse;
+
+/**
+ * Tests for Drupal\panels_ipe\Helpers\RemoveBlockRequestHandler.
+ *
+ * @group Panels IPE
+ */
+class RemoveBlockRequestHandlerTest extends RequestHandlerTestBase {
+
+  public function setUp() {
+    parent::setUp();
+    $this->sut = new RemoveBlockRequestHandler($this->moduleHandler, $this->panelsStore, $this->tempStore);
+  }
+
+  /**
+   * @test
+   */
+  public function removeBlockRequestRemovesTheBlock() {
+    $this->panelsDisplay->expects($this->once())->method('removeBlock');
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest('someblock'));
+    $this->assertEquals(new JsonResponse([]), $this->sut->getJsonResponse());
+  }
+
+  /**
+   * @test
+   */
+  public function panelsDisplayIsSavedAfterBlockRemoval() {
+    $this->panelsStore->expects($this->once())->method('save');
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest('someblock'));
+  }
+
+  /**
+   * @test
+   */
+  public function panelsDisplayIsSavedToTempstoreAfterBlockRemoval() {
+    $this->tempStore->expects($this->once())->method('set');
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest('someblock'), TRUE);
+  }
+
+}
diff --git a/tests/src/Unit/panels_ipe/RequestHandlerTestBase.php b/tests/src/Unit/panels_ipe/RequestHandlerTestBase.php
new file mode 100644
index 0000000..7923e45
--- /dev/null
+++ b/tests/src/Unit/panels_ipe/RequestHandlerTestBase.php
@@ -0,0 +1,60 @@
+<?php
+
+namespace Drupal\Tests\panels\Unit\panels_ipe;
+
+
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
+use Drupal\panels\Storage\PanelsStorageManagerInterface;
+use Drupal\user\SharedTempStore;
+use PHPUnit_Framework_MockObject_MockObject;
+use Symfony\Component\HttpFoundation\JsonResponse;
+use Symfony\Component\HttpFoundation\Request;
+
+/**
+ * Base tests for IPE request handler classes.
+ */
+abstract class RequestHandlerTestBase extends \PHPUnit_Framework_TestCase {
+
+  /** @var  \Drupal\panels_ipe\Helpers\RequestHandlerInterface */
+  protected $sut;
+
+  /** @var PHPUnit_Framework_MockObject_MockObject */
+  protected $moduleHandler;
+
+  /** @var PHPUnit_Framework_MockObject_MockObject */
+  protected $panelsStore;
+
+  /** @var PHPUnit_Framework_MockObject_MockObject */
+  protected $tempStore;
+
+  /** @var PHPUnit_Framework_MockObject_MockObject */
+  protected $panelsDisplay;
+
+  public function setUp() {
+    parent::setUp();
+    $this->moduleHandler = $this->getMockForAbstractClass(ModuleHandlerInterface::class);
+    $this->panelsStore = $this->getMockForAbstractClass(PanelsStorageManagerInterface::class);
+    $this->tempStore = $this->getMockBuilder(SharedTempstore::class)
+      ->disableOriginalConstructor()
+      ->getMock();
+
+    $this->panelsDisplay = $this->getMockBuilder(PanelsDisplayVariant::class)
+      ->disableOriginalConstructor()
+      ->getMock();
+  }
+
+  protected function createRequest($content = NULL) {
+    return new Request([], [], [], [], [], [], $content);
+  }
+
+  /**
+   * @test
+   */
+  public function emptyRequestResultsInFailedResponse() {
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest());
+
+    $expected = new JsonResponse(['success' => FALSE], 400);
+    $this->assertEquals($expected, $this->sut->getJsonResponse());
+  }
+}
diff --git a/tests/src/Unit/panels_ipe/UpdateLayoutRequestHandlerTest.php b/tests/src/Unit/panels_ipe/UpdateLayoutRequestHandlerTest.php
new file mode 100644
index 0000000..a068468
--- /dev/null
+++ b/tests/src/Unit/panels_ipe/UpdateLayoutRequestHandlerTest.php
@@ -0,0 +1,99 @@
+<?php
+
+namespace Drupal\Tests\panels\Unit\panels_ipe;
+
+use Drupal\Component\Serialization\Json;
+use Drupal\Core\Block\BlockBase;
+use Drupal\panels_ipe\Helpers\UpdateLayoutRequestHandler;
+use Symfony\Component\HttpFoundation\JsonResponse;
+
+/**
+ * Tests for \Drupal\panels_ipe\Helpers\UpdateLayoutRequestHandler.
+ *
+ * @group Panels IPE
+ */
+class UpdateLayoutRequestHandlerTest extends RequestHandlerTestBase {
+
+  public function setUp() {
+    parent::setUp();
+    $this->sut = new UpdateLayoutRequestHandler($this->moduleHandler, $this->panelsStore, $this->tempStore);
+  }
+
+  private function getLayoutModel() {
+    return [
+      'regionCollection' => [
+        [
+          'name' => 'some_region',
+          'blockCollection' => [
+            ['uuid' => 'someBlock'],
+            ['uuid' => 'someOtherBlock'],
+          ],
+        ],
+      ],
+    ];
+  }
+
+  private function setPanelsDisplayExpectations() {
+    $block = $this->getMockBuilder(BlockBase::class)
+      ->disableOriginalConstructor()
+      ->getMock();
+    $block->expects($this->exactly(4))->method('setConfigurationValue');
+    $block->expects($this->exactly(2))
+      ->method('getConfiguration')
+      ->willReturn([]);
+
+    $this->panelsDisplay->method('getBlock')
+      ->willReturn($block);
+  }
+
+  /**
+   * @test
+   */
+  public function successfulSaveOperationResultsInEmptyJsonResponse() {
+    $this->setPanelsDisplayExpectations();
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest(Json::encode($this->getLayoutModel())));
+    $this->assertEquals(new JsonResponse([]), $this->sut->getJsonResponse());
+  }
+
+  /**
+   * @test
+   */
+  public function successfulTempStoreSaveOperationResultsInEmptyJsonResponse() {
+    $this->setPanelsDisplayExpectations();
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest(Json::encode($this->getLayoutModel())), TRUE);
+    $this->assertEquals(new JsonResponse([]), $this->sut->getJsonResponse());
+  }
+
+  /**
+   * @test
+   */
+  public function updatedLayoutGetsSaved() {
+    $this->setPanelsDisplayExpectations();
+    $this->panelsStore->expects($this->once())->method('save');
+    $this->tempStore->expects($this->once())->method('delete');
+    $this->tempStore->expects($this->never())->method('set');
+
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest(Json::encode($this->getLayoutModel())));
+  }
+
+  /**
+   * @test
+   */
+  public function updatedLayoutGetsSavedToTempStore() {
+    $this->setPanelsDisplayExpectations();
+    $this->panelsStore->expects($this->never())->method('save');
+    $this->tempStore->expects($this->never())->method('delete');
+    $this->tempStore->expects($this->once())->method('set');
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest(Json::encode($this->getLayoutModel())), TRUE);
+  }
+
+  /**
+   * @test
+   */
+  public function hookPreSaveGetsCalledBeforeSave() {
+    $this->setPanelsDisplayExpectations();
+    $this->moduleHandler->expects($this->once())->method('invokeAll');
+    $this->sut->handleRequest($this->panelsDisplay, $this->createRequest(Json::encode($this->getLayoutModel())), TRUE);
+  }
+
+}

From 73bb3db05b476df0920ce9651446648a8d0da370 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Thu, 25 Feb 2016 13:47:18 -0800
Subject: [PATCH 10/24] Fixed minor visual bugs that allowed the CategoryView
 to overflow and the TabsView to appear poorly on small screen sizes.

---
 panels_ipe/css/panels_ipe.css       | 71 +++++++++++++++++++++++++++++--------
 panels_ipe/js/views/BlockPicker.js  | 34 +++++++++++-------
 panels_ipe/js/views/CategoryView.js | 32 +++++++++++------
 3 files changed, 100 insertions(+), 37 deletions(-)

diff --git a/panels_ipe/css/panels_ipe.css b/panels_ipe/css/panels_ipe.css
index d968b48..c26377d 100644
--- a/panels_ipe/css/panels_ipe.css
+++ b/panels_ipe/css/panels_ipe.css
@@ -132,10 +132,11 @@
 }
 
 .ipe-tab a {
+  font-size: 13px;
+  text-transform: capitalize;
   color: black;
-  padding: 10px 5px 12px 5px;
+  padding: 10px 15px 12px 5px;
   display: block;
-  text-transform: uppercase;
   vertical-align: top;
   border: none;
   cursor: pointer;
@@ -267,11 +268,18 @@ div.ipe-actions-block {
 }
 
 .ipe-action-list [data-action-id="move"] select {
+  font-size: 14px;
+  margin: 0;
   background: transparent;
   border: none;
   text-transform: uppercase;
 }
 
+.ipe-action-list [data-action-id="move"] option {
+  font-size: 14px;
+}
+
+
 
 /* Fix contextual links hovering over action links. */
 
@@ -335,6 +343,7 @@ div.ipe-actions-block {
 
 .ipe-category-picker-top {
   display: none;
+  overflow-y: scroll;
 }
 
 .ipe-category-picker-top.active {
@@ -353,9 +362,8 @@ div.ipe-actions-block {
   color: black;
   display: inline-block;
   padding: 10px;
-  text-transform: uppercase;
+  text-transform: capitalize;
   font-size: 15px;
-  font-weight: bold;
   border: 1px solid transparent;
   border-radius: 5px;
   transition: .2s;
@@ -418,20 +426,23 @@ div.ipe-actions-block {
 }
 
 .ipe-block-plugin {
-  text-transform: uppercase;
   display: inline-block;
-  margin: 5px 20px 0 0;
+  width: 170px;
+  vertical-align: top;
+  overflow: hidden;
+  margin: 5px;
   text-align: left;
   position: relative;
 }
 
 .ipe-block-plugin-info {
-  display: inline-block;
+  font-size: 12px;
 }
 
 .ipe-block-plugin h5 {
-  font-size: 14px;
+  font-size: 15px;
   font-weight: bold;
+  text-transform: capitalize;
   margin: 0;
 }
 
@@ -439,13 +450,10 @@ div.ipe-actions-block {
   font-size: 12px;
 }
 
-/* The "Add" button for Block Plugins. */
 .ipe-block-plugin a {
   display: inline-block;
-  vertical-align: top;
-  font-size: 12px;
-  padding: 0 5px 0 5px;
-  border: 1px solid darkgray;
+  padding: 5px;
+  border: 1px solid transparent;
   border-radius: 5px;
   transition: .2s;
   color: inherit;
@@ -510,7 +518,6 @@ div.ipe-actions-block {
 .ipe-form {
   max-width: 650px;
   padding: 5px;
-  overflow-y: scroll;
 }
 
 /* Vertical-tabs specific styling. */
@@ -565,3 +572,39 @@ div.ipe-actions-block {
   top: 0;
   right: 0;
 }
+
+/* Mobile specific styles. */
+@media screen and (max-width: 40em) {
+
+  /* Hide tab titles on mobile. */
+  .ipe-tab-title {
+    display: none;
+  }
+
+  /* Increase tab padding on mobile. */
+  .ipe-tab a {
+    padding: 10px 15px 12px 15px;
+  }
+
+  /* Show block plugins in one column. */
+  .ipe-block-plugin {
+    display: block;
+    width: inherit;
+  }
+
+  /* Increase font size on block plugins. */
+  .ipe-block-plugin h5 {
+    font-size: 16px;
+  }
+
+  /* Put the actions below the block title. */
+  div.ipe-actions {
+    display: block;
+  }
+
+  /* Put actions to the right of the bar. */
+  .ipe-actions ul.ipe-action-list {
+    text-align: right;
+  }
+
+}
diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index f2058dc..bcc3c2b 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -29,11 +29,12 @@
      */
     template_plugin: _.template(
       '<div class="ipe-block-plugin">' +
-      '  <div class="ipe-block-plugin-info">' +
-      '    <h5><%- label %></h5>' +
-      '    <p>' + Drupal.t('Provider: <strong><%- provider %></strong>') + '</p>' +
-      '  </div>' +
-      '  <a data-plugin-id="<%- plugin_id %>">' + Drupal.t('Add') + '</a>' +
+      '  <a data-plugin-id="<%- plugin_id %>">' +
+      '    <div class="ipe-block-plugin-info">' +
+      '      <h5 title="<%- label %>"><%- trimmed_label %></h5>' +
+      '      <p>' + Drupal.t('Provider: <strong><%- provider %></strong>') + '</p>' +
+      '    </div>' +
+      '  </a>' +
       '</div>'
     ),
 
@@ -42,11 +43,12 @@
      */
     template_existing: _.template(
       '<div class="ipe-block-plugin">' +
-      '  <div class="ipe-block-plugin-info">' +
-      '    <h5><%- label %></h5>' +
-      '    <p>' + Drupal.t('Provider: <strong><%- provider %></strong>') + '</p>' +
-      '  </div>' +
-      '  <a data-existing-region-name="<%- region %>" data-existing-block-id="<%- uuid %>">' + Drupal.t('Configure') + '</a>' +
+      '  <a data-existing-region-name="<%- region %>" data-existing-block-id="<%- uuid %>">' +
+      '    <div class="ipe-block-plugin-info">' +
+      '      <h5 title="<%- label %>"><%- trimmed_label %></h5>' +
+      '      <p>' + Drupal.t('Provider: <strong><%- provider %></strong>') + '</p>' +
+      '    </div>' +
+      '  </a>' +
       '</div>'
     ),
 
@@ -158,12 +160,20 @@
      *   The rendered block plugin.
      */
     template_item: function(block_plugin) {
+      var template_vars = block_plugin.toJSON();
+
+      // Reduce the length of the Block label if needed.
+      template_vars.trimmed_label = template_vars.label;
+      if (template_vars.trimmed_label.length > 30) {
+        template_vars.trimmed_label = template_vars.label.substring(0, 30) + '...';
+      }
+
       // This is an existing block.
       if (block_plugin.get('uuid')) {
-        return this.template_existing(block_plugin.toJSON());
+        return this.template_existing(template_vars);
       }
       else {
-        return this.template_plugin(block_plugin.toJSON());
+        return this.template_plugin(template_vars);
       }
     },
 
diff --git a/panels_ipe/js/views/CategoryView.js b/panels_ipe/js/views/CategoryView.js
index 12e13ca..24e4e1d 100644
--- a/panels_ipe/js/views/CategoryView.js
+++ b/panels_ipe/js/views/CategoryView.js
@@ -120,6 +120,8 @@
         }, this);
       }
 
+      this.setTopMaxHeight();
+
       return this;
     },
 
@@ -153,7 +155,9 @@
       if (animation === 'slideUp') {
         // Close the tab, then re-render.
         var self = this;
-        this.$('.ipe-category-picker-top')[animation]('fast', function () { self.render(); });
+        this.$('.ipe-category-picker-top')[animation]('fast', function () {
+          self.render();
+        });
       }
       else if (animation === 'slideDown') {
         // We need to render first as hypothetically nothing is open.
@@ -203,7 +207,7 @@
         ajax.options.complete = function () {
           self.$('.ipe-category-picker-top .ipe-icon-loading').remove();
 
-          self.setFormMaxHeight();
+          self.setTopMaxHeight();
 
           self.$('.ipe-category-picker-top *').hide().fadeIn();
         };
@@ -214,20 +218,26 @@
     },
 
     /**
-     * Calculates and sets maximum height of our form based on known floating
-     * and fixed elements.
+     * Calculates and sets maximum height of our top area based on known
+     * floating and fixed elements.
      */
-    setFormMaxHeight: function() {
+    setTopMaxHeight: function() {
       // Calculate the combined height of (known) floating elements.
-      var used_height = $('#toolbar-item-administration-tray:visible').outerHeight() +
-      $('#toolbar-bar').outerHeight() +
-      this.$('.ipe-category-picker-bottom').outerHeight();
+      var used_height = this.$('.ipe-category-picker-bottom').outerHeight() +
+      $('.ipe-tabs').outerHeight();
+
+      // Add optional toolbar support.
+      var toolbar = $('#toolbar-bar');
+      if (toolbar.length > 0) {
+        used_height += $('#toolbar-item-administration-tray:visible').outerHeight() +
+        toolbar.outerHeight();
+      }
 
-      // 175 (px) is an arbitrary offset, just to give padding on top.
-      var max_height = $(window).height() - used_height - 175;
+      // The .ipe-category-picker-top padding is 30 pixels, plus five for margin.
+      var max_height = $(window).height() - used_height - 35;
 
       // Set the form's max height.
-      this.$('.ipe-form').css('max-height', max_height);
+      this.$('.ipe-category-picker-top').css('max-height', max_height);
     }
 
   });

From ba0c77df894a9217cdf45551db105b9cc1c76315 Mon Sep 17 00:00:00 2001
From: "samuel.mortenson" <samuel.mortenson@2582268.no-reply.drupal.org>
Date: Thu, 25 Feb 2016 15:57:18 -0800
Subject: [PATCH 11/24] Issue #2672520 by legolasbo, samuel.mortenson: Moving
 blocks between regions using the dropdown is broken

---
 panels_ipe/js/models/RegionModel.js |  46 ++++++++++++
 panels_ipe/js/views/LayoutView.js   | 141 ++++++++++++++++++++++--------------
 2 files changed, 134 insertions(+), 53 deletions(-)

diff --git a/panels_ipe/js/models/RegionModel.js b/panels_ipe/js/models/RegionModel.js
index b5333a5..3523be8 100644
--- a/panels_ipe/js/models/RegionModel.js
+++ b/panels_ipe/js/models/RegionModel.js
@@ -39,6 +39,52 @@
        * @see Drupal.panels_ipe.BlockCollection
        */
       blockCollection: null
+    },
+
+    /**
+     * Checks if our BlockCollection contains a given Block UUID.
+     *
+     * @param {string} block_uuid
+     *   The universally unique identifier of the block.
+     *
+     * @returns {boolean}
+     */
+    hasBlock: function(block_uuid) {
+      return this.get('blockCollection').get(block_uuid) ? true : false;
+    },
+
+    /**
+     * Gets a Block from our BlockCollection based on its UUID.
+     *
+     * @param {string} block_uuid
+     *   The universally unique identifier of the block.
+     *
+     * @returns {Drupal.panels_ipe.BlockModel|undefined}
+     *   The block if it is inside this region.
+     */
+    getBlock: function(block_uuid) {
+      return this.get('blockCollection').get(block_uuid);
+    },
+
+    /**
+     * Removes a Block from our BlockCollection based on its UUID.
+     *
+     * @param {Drupal.panels_ipe.BlockModel|string} block
+     *   The block or it's universally unique identifier.
+     * @param {object} options
+     */
+    removeBlock: function(block, options) {
+      this.get('blockCollection').remove(block, options);
+    },
+
+    /**
+     * Adds a new BlockModel to our BlockCollection.
+     *
+     * @param {Drupal.panels_ipe.BlockModel} block
+     * @param {object} options
+     */
+    addBlock: function (block, options) {
+      this.get('blockCollection').add(block, options);
     }
 
   });
diff --git a/panels_ipe/js/views/LayoutView.js b/panels_ipe/js/views/LayoutView.js
index d2eba8e..b2d39f5 100644
--- a/panels_ipe/js/views/LayoutView.js
+++ b/panels_ipe/js/views/LayoutView.js
@@ -52,7 +52,7 @@
     events: {
       'mousedown [data-action-id="move"] > select': 'showBlockRegionList',
       'blur [data-action-id="move"] > select': 'hideBlockRegionList',
-      'change [data-action-id="move"] > select': 'selectBlockRegionList',
+      'change [data-action-id="move"] > select': 'newRegionSelected',
       'click [data-action-id="up"]': 'moveBlock',
       'click [data-action-id="down"]': 'moveBlock',
       'click [data-action-id="remove"]': 'removeBlock',
@@ -191,7 +191,7 @@
      */
     showBlockRegionList: function (e) {
       // Get the BlockModel id (uuid).
-      var id = $(e.currentTarget).closest('[data-block-action-id]').data('block-action-id');
+      var id = this.getEventBlockUuid(e);
 
       $(e.currentTarget).empty();
 
@@ -199,7 +199,7 @@
       this.model.get('regionCollection').each(function (region) {
         var option = $(this.template_region_option(region.toJSON()));
         // If this is the current region, place it first in the list.
-        if (region.get('blockCollection').get(id)) {
+        if (region.getBlock(id)) {
           option.attr('selected', 'selected');
           $(e.currentTarget).prepend(option);
         }
@@ -225,38 +225,81 @@
      * @param {Object} e
      *   The event object.
      */
-    selectBlockRegionList: function (e) {
-      // Get the BlockModel id (uuid).
-      var id = $(e.currentTarget).closest('[data-block-action-id]').data('block-action-id');
+    newRegionSelected: function (e) {
+      var block_uuid = this.getEventBlockUuid(e);
+      var new_region_name = $(e.currentTarget).children(':selected').data('region-option-name');
+
+      if (new_region_name) {
+        this.moveBlockToRegion(block_uuid, new_region_name);
+        this.hideBlockRegionList(e);
+        this.render();
+        this.highlightBlock(block_uuid);
+        this.saveToTempStore();
+      }
+    },
+
+    /**
+     * Get the block Uuid related to an event.
+     *
+     * @param {Object} e
+     *   The event object.
+     *
+     * @return {String}
+     *   The block Uuid
+     */
+    getEventBlockUuid: function (e) {
+      return $(e.currentTarget).closest('[data-block-action-id]').data('block-action-id');
+    },
 
-      // Grab the value of this region.
-      var region_name = $(e.currentTarget).children(':selected').data('region-option-name');
+    /**
+     * Moves an existing Block to a new region.
+     *
+     * @param block_uuid
+     *   The universally unique identifier of the block.
+     * @param target_region_id
+     *   The id of the target region.
+     */
+    moveBlockToRegion: function (block_uuid, target_region_id) {
+      var target_region = this.model.get('regionCollection').get(target_region_id);
+      var original_region = this.getRegionContainingBlock(block_uuid);
+      target_region.addBlock(original_region.getBlock(block_uuid));
+      original_region.removeBlock(block_uuid);
+    },
 
-      // First, remove the Block from the current region.
-      var block;
+    /**
+     * Determines what region a Block resides in.
+     *
+     * @param block_uuid
+     *   The universally unique identifier of the block.
+     *
+     * @returns {Drupal.panels_ipe.RegionModel|undefined}
+     *   The region containing the block if it was found.
+     */
+    getRegionContainingBlock: function (block_uuid) {
       var region_collection = this.model.get('regionCollection');
-      region_collection.each(function (region) {
-        var block_collection = region.get('blockCollection');
-        if (block_collection.get(id)) {
-          block = block_collection.get(id);
-          block_collection.remove(block);
+      for (var i = 0, l = region_collection.length; i < l; i++) {
+        var region = region_collection.at(i);
+        if (region.hasBlock(block_uuid)) {
+          return region;
         }
-      });
-
-      // Next, add the Block to the new region.
-      if (block) {
-        var region = this.model.get('regionCollection').get(region_name);
-        region.get('blockCollection').add(block);
       }
+    },
 
-      // Hide the select list.
-      this.hideBlockRegionList(e);
-
-      // Re-render.
-      this.render();
+    /**
+     * Highlights a block by adding a css class.
+     *
+     * @param block_uuid
+     *   The universally unique identifier of the block.
+     */
+    highlightBlock: function (block_uuid) {
+      this.$('[data-block-id="' + block_uuid + '"]').addClass('ipe-highlight');
+    },
 
-      // Highlight the block.
-      this.$('[data-block-id="' + id + '"]').addClass('ipe-highlight');
+    /**
+     * Marks the global AppModel as unsaved.
+     */
+    markUnsaved: function () {
+      Drupal.panels_ipe.app.set('unsaved', true);
     },
 
     /**
@@ -282,7 +325,7 @@
 
       Backbone.sync('update', model, options);
 
-      Drupal.panels_ipe.app.set('unsaved', true);
+      this.markUnsaved();
     },
 
     /**
@@ -300,7 +343,7 @@
         contentType: "application/json; charset=UTF-8"
       });
 
-      Drupal.panels_ipe.app.set('unsaved', true);
+      this.markUnsaved();
     },
 
     /**
@@ -311,7 +354,7 @@
      */
     moveBlock: function (e) {
       // Get the BlockModel id (uuid).
-      var id = $(e.currentTarget).closest('[data-block-action-id]').data('block-action-id');
+      var id = this.getEventBlockUuid(e);
 
       // Get the direction the block is moving.
       var dir = $(e.currentTarget).data('action-id');
@@ -319,16 +362,13 @@
       // Grab the model for this region.
       var region_name = $(e.currentTarget).closest('[data-region-name]').data('region-name');
       var region = this.model.get('regionCollection').get(region_name);
-      var block = region.get('blockCollection').get(id);
+      var block = region.getBlock(id);
 
       // Shift the Block.
       region.get('blockCollection').shift(block, dir);
 
-      // Re-render ourselves.
       this.render();
-
-      // Highlight the block.
-      this.$('[data-block-id="' + id + '"]').addClass('ipe-highlight');
+      this.highlightBlock(id);
 
       this.saveToTempStore();
     },
@@ -341,14 +381,14 @@
      */
     removeBlock: function (e) {
       // Get the BlockModel id (uuid).
-      var id = $(e.currentTarget).closest('[data-block-action-id]').data('block-action-id');
+      var id = this.getEventBlockUuid(e);
 
       // Grab the model for this region.
       var region_name = $(e.currentTarget).closest('[data-region-name]').data('region-name');
       var region = this.model.get('regionCollection').get(region_name);
 
       // Remove the block.
-      region.get('blockCollection').remove(id);
+      region.removeBlock(id);
 
       // Re-render ourselves.
       this.render();
@@ -364,14 +404,14 @@
      */
     configureBlock: function (e) {
       // Get the BlockModel id (uuid).
-      var id = $(e.currentTarget).closest('[data-block-action-id]').data('block-action-id');
+      var id = this.getEventBlockUuid(e);
 
       // Grab the model for this region.
       var region_name = $(e.currentTarget).closest('[data-region-name]').data('region-name');
       var region = this.model.get('regionCollection').get(region_name);
 
       // Send a App-level event so our BlockPicker View can respond and display a Form.
-      Drupal.panels_ipe.app.trigger('configureBlock', region.get('blockCollection').get(id));
+      Drupal.panels_ipe.app.trigger('configureBlock', region.getBlock(id));
     },
 
     /**
@@ -389,8 +429,8 @@
 
       // Get the BlockModel and remove it from its last position.
       var old_region = this.model.get('regionCollection').get(old_region_name);
-      var block = old_region.get('blockCollection').get(id);
-      old_region.get('blockCollection').remove(block, {silent: true});
+      var block = old_region.getBlock(id);
+      old_region.removeBlock(block, {silent: true});
 
       // Get the new region name and index from the droppable.
       var new_region_name = $(e.currentTarget).data('droppable-region-name');
@@ -398,7 +438,7 @@
 
       // Add the BlockModel to its new region/index.
       var new_region = this.model.get('regionCollection').get(new_region_name);
-      new_region.get('blockCollection').add(block, {at: index, silent: true});
+      new_region.addBlock(block, {at: index, silent: true});
 
       // Re-render after the current execution cycle, to account for DOM editing
       // that jQuery.ui is going to do on this run. Modules like Contextual do
@@ -406,9 +446,7 @@
       var self = this;
       window.setTimeout(function () {
         self.render();
-
-        // Highlight the block.
-        self.$('[data-block-id="' + id + '"]').addClass('ipe-highlight');
+        self.highlightBlock(id);
       });
 
       this.saveToTempStore();
@@ -426,9 +464,9 @@
       // First, check if the Block already exists and remove it if so.
       var index = null;
       this.model.get('regionCollection').each(function (region) {
-        if (region.get('blockCollection').get(block.get('uuid'))) {
+        if (region.getBlock(block.get('uuid'))) {
           index = region.get('blockCollection').indexOf(block.get('uuid'));
-          region.get('blockCollection').remove(block.get('uuid'));
+          region.removeBlock(block.get('uuid'));
         }
       });
 
@@ -440,13 +478,10 @@
         if (index) {
           options.at = index;
         }
-        region.get('blockCollection').add(block, options);
+        region.addBlock(block, options);
 
-        // Re-render ourselves.
         this.render();
-
-        // Highlight the block.
-        this.$('[data-block-id="' + block.get('uuid') + '"]').addClass('ipe-highlight');
+        this.highlightBlock(block.get('uuid'));
       }
     }
 

From 3502d3ac6431ef584ad948ca0e8093b3e060c082 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Wed, 2 Mar 2016 16:59:54 -0800
Subject: [PATCH 12/24] Fixed bug when attempting to trim a Block Plugin label
 with no length.

---
 panels_ipe/js/views/BlockPicker.js | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index bcc3c2b..7a7345f 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -162,6 +162,11 @@
     template_item: function(block_plugin) {
       var template_vars = block_plugin.toJSON();
 
+      // Not all blocks have labels, add a default if necessary.
+      if (!template_vars.label) {
+        template_vars.label = Drupal.t('No label');
+      }
+
       // Reduce the length of the Block label if needed.
       template_vars.trimmed_label = template_vars.label;
       if (template_vars.trimmed_label.length > 30) {

From 7e856962b893ecde853d4269e8e4baaaa1e68ac3 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Wed, 2 Mar 2016 17:21:07 -0800
Subject: [PATCH 13/24] Fixed minor bug in PanelsIPEBlockContentForm where AJAX
 callbacks from modules like Entity Browser would submit the form early.

---
 panels_ipe/src/Form/PanelsIPEBlockContentForm.php | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/panels_ipe/src/Form/PanelsIPEBlockContentForm.php b/panels_ipe/src/Form/PanelsIPEBlockContentForm.php
index 02fe3ab..9015a19 100644
--- a/panels_ipe/src/Form/PanelsIPEBlockContentForm.php
+++ b/panels_ipe/src/Form/PanelsIPEBlockContentForm.php
@@ -21,6 +21,7 @@ protected function actions(array $form, FormStateInterface $form_state) {
     $actions['submit'] = [
       '#type' => 'button',
       '#value' => $this->t('Create and Place'),
+      '#name' => 'panels_ipe_submit',
       '#ajax' => [
         'callback' => '::submitForm',
         'wrapper' => 'panels-ipe-block-type-form-wrapper',
@@ -52,8 +53,11 @@ public function form(array $form, FormStateInterface $form_state) {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    // Return early if there are any errors.
-    if ($form_state->hasAnyErrors()) {
+    $triggering_element = $form_state->getTriggeringElement();
+
+    // Return early if there are any errors or if a button we're not aware of
+    // submitted the form.
+    if ($form_state->hasAnyErrors() || $triggering_element['#name'] !== 'panels_ipe_submit') {
       return $form;
     }
 

From 58a581f4a9956851a1d5d6f82e10d795d7231b2e Mon Sep 17 00:00:00 2001
From: "samuel.mortenson" <samuel.mortenson@2582268.no-reply.drupal.org>
Date: Tue, 8 Mar 2016 14:53:07 -0800
Subject: [PATCH 14/24] Issue #2682993 by samuel.mortenson: IPE badly mangles
 complex block forms

---
 panels_ipe/js/views/CategoryView.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/panels_ipe/js/views/CategoryView.js b/panels_ipe/js/views/CategoryView.js
index 24e4e1d..24ef984 100644
--- a/panels_ipe/js/views/CategoryView.js
+++ b/panels_ipe/js/views/CategoryView.js
@@ -209,7 +209,7 @@
 
           self.setTopMaxHeight();
 
-          self.$('.ipe-category-picker-top *').hide().fadeIn();
+          self.$('.ipe-category-picker-top').hide().fadeIn();
         };
 
         // Make the Drupal AJAX request.

From 73db09735b4ba17813e4e951f1cb575e78df7f00 Mon Sep 17 00:00:00 2001
From: Jakob Perry <japerry@45640.no-reply.drupal.org>
Date: Wed, 9 Mar 2016 18:02:32 -0800
Subject: [PATCH 15/24] Issue #2674316 by japerry, legolasbo: Views row plugin
 is in 'layout_plugin_views' module

---
 plugins/views/panels.views.inc                   |  27 ----
 plugins/views/panels_views_plugin_row_fields.inc | 163 -----------------------
 2 files changed, 190 deletions(-)
 delete mode 100644 plugins/views/panels.views.inc
 delete mode 100644 plugins/views/panels_views_plugin_row_fields.inc

diff --git a/plugins/views/panels.views.inc b/plugins/views/panels.views.inc
deleted file mode 100644
index 2418da5..0000000
--- a/plugins/views/panels.views.inc
+++ /dev/null
@@ -1,27 +0,0 @@
-<?php
-
-/**
- * Implementation of hook_views_plugins
- */
-function panels_views_plugins() {
-  $plugins = array(
-    'row' => array(
-      'panels_fields' => array(
-        'title' => t('Panel fields'),
-        'help' => t('Displays the fields in a panel rather than using a template.'),
-        'handler' => 'panels_views_plugin_row_fields',
-        'path' => drupal_get_path('module', 'panels') . '/plugins/views',
-        'theme' => 'views_view_fields',
-        'theme path' => drupal_get_path('module', 'views') . '/theme',
-        'register theme' => FALSE,
-        'uses fields' => TRUE,
-        'uses options' => TRUE,
-        'type' => 'normal',
-        'help topic' => 'style-row-panels-fields',
-        'parent' => 'fields',
-      ),
-    ),
-  );
-
-  return $plugins;
-}
diff --git a/plugins/views/panels_views_plugin_row_fields.inc b/plugins/views/panels_views_plugin_row_fields.inc
deleted file mode 100644
index 4a404ab..0000000
--- a/plugins/views/panels_views_plugin_row_fields.inc
+++ /dev/null
@@ -1,163 +0,0 @@
-<?php
-/**
- * @file
- * Contains the base row style plugin.
- */
-
-/**
- * The basic 'fields' row plugin
- *
- * This displays fields one after another, giving options for inline
- * or not.
- *
- * @ingroup views_row_plugins
- */
-class panels_views_plugin_row_fields extends views_plugin_row_fields {
-  function option_definition() {
-    $options = parent::option_definition();
-
-    $options['layout'] = array('default' => 'twocol');
-    $options['regions'] = array('default' => array());
-
-    return $options;
-  }
-
-  /**
-   * Provide a form for setting options.
-   */
-  function options_form(&$form, &$form_state) {
-    parent::options_form($form, $form_state);
-
-    ctools_include('plugins', 'panels');
-    $layouts = panels_get_layouts();
-    $options = array();
-    foreach ($layouts as $name => $layout) {
-      if (empty($layout['builder'])) {
-        $options[$name] = $layout['title'];
-      }
-      if ($name == $this->options['layout']) {
-        $current_layout = $layout;
-      }
-    }
-
-    $form['layout'] = array(
-      '#prefix' => '<div class="container-inline">',
-      '#type' => 'select',
-      '#options' => $options,
-      '#title' => t('Panel layout'),
-      '#default_value' => $this->options['layout'],
-    );
-
-    $form['change'] = array(
-      '#type' => 'submit',
-      '#value' => t('Change'),
-      '#submit' => array('panels_change_layout_button'),
-      '#suffix' => '</div>',
-    );
-
-    if (!empty($current_layout)) {
-      $fields = $this->display->handler->get_field_labels();
-      $regions = panels_get_regions($current_layout, panels_new_display());
-      foreach ($fields as $id => $title) {
-        $form['regions'][$id] = array(
-          '#type' => 'select',
-          '#title' => $title,
-          '#options' => $regions,
-        );
-        if (!empty($this->options['regions'][$id]) && !empty($regions[$this->options['regions'][$id]])) {
-          $form['regions'][$id]['#default_value'] = $this->options['regions'][$id];
-        }
-      }
-    }
-  }
-
-  /**
-   * Perform any necessary changes to the form values prior to storage.
-   * There is no need for this function to actually store the data.
-   */
-  function options_submit(&$form, &$form_state) {
-    $form_state['values']['row_options']['inline'] = array_filter($form_state['values']['row_options']['inline']);
-  }
-
-  /**
-   * Render a row object. This usually passes through to a theme template
-   * of some form, but not always.
-   */
-  function render($row) {
-    ctools_include('plugins', 'panels');
-    $layout = panels_get_layout($this->options['layout']);
-    if (!$layout) {
-      // Fall back to normal behavior if the layout is somehow invalid. This
-      // can happen if the layout was removed, for example.
-      return theme($this->theme_functions(), array('view' => view, 'options' => $this->options, 'row' => $row, 'field_alias' => $this->field_alias));
-    }
-
-    // Store a backup copy of the array because we're going to be screwing
-    // with this a lot.
-    $fields = $this->view->field;
-    unset($this->view->field);
-
-    $meta = 'standard';
-    // This row style gets run many times; only run this code once.
-    if (empty($this->region_fields)) {
-      $this->region_fields = array();
-      $regions = panels_get_regions($layout, panels_new_display());
-
-      // Ensure each region has an empty array.
-      foreach ($regions as $region_id => $name) {
-        if (empty($default_region)) {
-          $default_region = $region_id;
-        }
-
-        $this->region_fields[$region_id] = array();
-      }
-
-
-      // Go through all our fields and place them in regions according to the
-      // settings.
-      foreach ($fields as $id => $field) {
-        $region_id = ''; // ensure we don't accidentlly use the last field's region.
-        if (!empty($this->options['regions'][$id]) && !empty($regions[$this->options['regions'][$id]])) {
-          $region_id = $this->options['regions'][$id];
-        }
-        else {
-          // Fallback to putting unknown fields into the first region.
-          $region_id = $default_region;
-        }
-
-        // Ensure this works in PHP4 by keeping the reference.
-        $this->region_fields[$region_id][$id] = &$fields[$id];
-      }
-
-      // We don't need to set 'inline' for every record, so we do it inside
-      // this loop. We do need to set inline if we are in the live preview
-      // so that the CSS will get transmitted via javascript:
-      $meta = !empty($this->view->live_preview) ? 'inline' : 'standard';
-    }
-
-    // Now that we have distributed our fields, go through the regions and
-    // render them into the content array.
-    foreach ($this->region_fields as $region_id => $fields_list) {
-      $this->view->field = $fields_list;
-      $content[$region_id] = theme($this->theme_functions(), array('view' => $this->view, 'options' => $this->options, 'row' => $row));
-    }
-
-    // Restore our $fields array.
-    $this->view->field = $fields;
-
-    // Now that we have a rendered content array, render it.
-    return panels_print_layout($layout, $content, $meta);
-  }
-}
-
-/**
- * Override handler for views_ui_edit_display_form
- */
-function panels_change_layout_button($form, &$form_state) {
-  $display = &$form_state['view']->display[$form_state['display_id']];
-  $display->handler->options_submit($form, $form_state);
-
-  views_ui_cache_set($form_state['view']);
-  $form_state['rerender'] = TRUE;
-  $form_state['rebuild'] = TRUE;
-}

From 53944af16a5c5bd8c20c830ec687be722e332e94 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Thu, 10 Mar 2016 13:59:55 -0800
Subject: [PATCH 16/24] Changed Drupal.panels_ipe.setFlipperHeight() to always
 resize the form card on flip.

---
 panels_ipe/js/panels_ipe.js | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/panels_ipe/js/panels_ipe.js b/panels_ipe/js/panels_ipe.js
index 56374dd..2c26187 100644
--- a/panels_ipe/js/panels_ipe.js
+++ b/panels_ipe/js/panels_ipe.js
@@ -192,10 +192,7 @@
       $current_side = $form.find('.flipper > .back');
     }
 
-    // If the new side is larger than the current side, change the height.
-    if ($new_side.outerHeight() > $current_side.outerHeight()) {
-      $current_side.animate({height: $new_side.outerHeight() + 10}, 600);
-    }
+    $current_side.animate({height: $new_side.outerHeight() + 10}, 600);
   };
 
   /**

From 4b2874b9800b8926d93765bd6e5f4f88dd620114 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Sun, 13 Mar 2016 21:12:37 -0700
Subject: [PATCH 17/24] Use a flex-based display for the "Place Content" tab in
 Panels IPE.

---
 panels_ipe/css/panels_ipe.css      | 16 ++++++++++------
 panels_ipe/js/views/BlockPicker.js |  3 +++
 2 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/panels_ipe/css/panels_ipe.css b/panels_ipe/css/panels_ipe.css
index c26377d..787188c 100644
--- a/panels_ipe/css/panels_ipe.css
+++ b/panels_ipe/css/panels_ipe.css
@@ -425,14 +425,18 @@ div.ipe-actions-block {
   overflow: hidden;
 }
 
+/* Display block picker elements in a flex grid. */
+.ipe-block-picker-list.active {
+  display: inline-flex;
+  flex-flow: row wrap;
+  justify-content: flex-start;
+}
+
 .ipe-block-plugin {
-  display: inline-block;
-  width: 170px;
-  vertical-align: top;
-  overflow: hidden;
-  margin: 5px;
+  flex-basis: 200px;
+  margin-left: 10px;
+  margin-top: 10px;
   text-align: left;
-  position: relative;
 }
 
 .ipe-block-plugin-info {
diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index 7a7345f..533476a 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -120,6 +120,9 @@
       // Render our categories.
       this.renderCategories();
 
+      // Add a unique class to our top region to scope CSS.
+      this.$('.ipe-category-picker-top').addClass('ipe-block-picker-list');
+
       // If we're viewing the current layout tab, show a custom item.
       var on_screen_count = 0;
       Drupal.panels_ipe.app.get('layout').get('regionCollection').each(function (region) {

From f2747109e9cd077194cf3f019b5492a41054e709 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Mon, 14 Mar 2016 15:59:14 -0700
Subject: [PATCH 18/24] Remove flex layout on the Block Picker form in Panels
 IPE.

---
 panels_ipe/js/views/BlockPicker.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index 533476a..495f7bf 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -195,6 +195,9 @@
      *   An object containing the properties "url" and "model".
      */
     getFormInfo: function(e) {
+      // Remove our unique top picker class.
+      this.$('.ipe-category-picker-top').removeClass('ipe-block-picker-list');
+
       // Get the current plugin_id.
       var plugin_id = $(e.currentTarget).data('plugin-id');
 

From bfee27a4cdbdab86cd2553217612f5d8f1f259b1 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Mon, 14 Mar 2016 16:19:00 -0700
Subject: [PATCH 19/24] Fixed regression from LayoutView refactor that caused
 updated blocks to lose their collection index.

---
 panels_ipe/js/views/LayoutView.js | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/panels_ipe/js/views/LayoutView.js b/panels_ipe/js/views/LayoutView.js
index b2d39f5..d89ce51 100644
--- a/panels_ipe/js/views/LayoutView.js
+++ b/panels_ipe/js/views/LayoutView.js
@@ -464,9 +464,10 @@
       // First, check if the Block already exists and remove it if so.
       var index = null;
       this.model.get('regionCollection').each(function (region) {
-        if (region.getBlock(block.get('uuid'))) {
-          index = region.get('blockCollection').indexOf(block.get('uuid'));
-          region.removeBlock(block.get('uuid'));
+        var old_block = region.getBlock(block.get('uuid'));
+        if (old_block) {
+          index = region.get('blockCollection').indexOf(old_block);
+          region.removeBlock(old_block);
         }
       });
 

From b3f8bde42f7eec54a7c9db158ef597ba33a17d28 Mon Sep 17 00:00:00 2001
From: "samuel.mortenson" <samuel.mortenson@2582268.no-reply.drupal.org>
Date: Mon, 14 Mar 2016 16:19:58 -0700
Subject: [PATCH 20/24] Issue #2681075 by samuel.mortenson: Panels IPE block
 view mode selection doesn't take effect on second change

---
 panels_ipe/src/Form/PanelsIPEBlockPluginForm.php | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php b/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
index 0a544f9..629ad12 100644
--- a/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
+++ b/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
@@ -263,17 +263,17 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
       return $form;
     }
 
-    $block_instance = $this->getBlockInstance($form_state);
-
-    // Submit the block configuration form.
-    $this->submitBlock($block_instance, $form, $form_state);
-
     // If a temporary configuration for this variant exists, use it.
     $temp_store_key = $this->panelsDisplay->id();
     if ($variant_config = $this->tempStore->get($temp_store_key)) {
       $this->panelsDisplay->setConfiguration($variant_config);
     }
 
+    $block_instance = $this->getBlockInstance($form_state);
+
+    // Submit the block configuration form.
+    $this->submitBlock($block_instance, $form, $form_state);
+
     // Set the block region appropriately.
     $block_config = $block_instance->getConfiguration();
     $block_config['region'] = $form_state->getValue(array('settings', 'region'));

From 66c995c83fc7579e5ecd0f840673545c5dfcbdfa Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Mon, 14 Mar 2016 16:30:11 -0700
Subject: [PATCH 21/24] Fixed jQuery UI bug that added outdated styles to Block
 Picker forms on load.

---
 panels_ipe/js/views/BlockPicker.js | 1 +
 1 file changed, 1 insertion(+)

diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index 495f7bf..7c29ae2 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -197,6 +197,7 @@
     getFormInfo: function(e) {
       // Remove our unique top picker class.
       this.$('.ipe-category-picker-top').removeClass('ipe-block-picker-list');
+      this.$('.ipe-category-picker-top').css('display', '');
 
       // Get the current plugin_id.
       var plugin_id = $(e.currentTarget).data('plugin-id');

From 9574ca956182e7ff6b730db04f241e5147861aeb Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Mon, 14 Mar 2016 16:35:32 -0700
Subject: [PATCH 22/24] Fixed Panels IPE bug where moving a Block to the lowest
 index and saving the form would lose position.

---
 panels_ipe/js/views/LayoutView.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/panels_ipe/js/views/LayoutView.js b/panels_ipe/js/views/LayoutView.js
index d89ce51..6eb5365 100644
--- a/panels_ipe/js/views/LayoutView.js
+++ b/panels_ipe/js/views/LayoutView.js
@@ -476,7 +476,7 @@
       if (region) {
         // Add the block, at its previous index if necessary.
         var options = {};
-        if (index) {
+        if (index !== null && index !== -1) {
           options.at = index;
         }
         region.addBlock(block, options);

From 7cb0e8377aa15c989a5a1527a3d24d8612106059 Mon Sep 17 00:00:00 2001
From: Samuel Mortenson <samuel.mortenson@acquia.com>
Date: Fri, 18 Mar 2016 12:47:47 -0700
Subject: [PATCH 23/24] Fix flicker when selecting a Block Plugin and changing
 display styles in IPE.

---
 panels_ipe/css/panels_ipe.css       | 4 ++++
 panels_ipe/js/views/BlockPicker.js  | 4 ----
 panels_ipe/js/views/CategoryView.js | 3 +++
 3 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/panels_ipe/css/panels_ipe.css b/panels_ipe/css/panels_ipe.css
index 787188c..5400f62 100644
--- a/panels_ipe/css/panels_ipe.css
+++ b/panels_ipe/css/panels_ipe.css
@@ -432,6 +432,10 @@ div.ipe-actions-block {
   justify-content: flex-start;
 }
 
+.ipe-category-picker-top.active.form-displayed {
+  display: block;
+}
+
 .ipe-block-plugin {
   flex-basis: 200px;
   margin-left: 10px;
diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index 7c29ae2..533476a 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -195,10 +195,6 @@
      *   An object containing the properties "url" and "model".
      */
     getFormInfo: function(e) {
-      // Remove our unique top picker class.
-      this.$('.ipe-category-picker-top').removeClass('ipe-block-picker-list');
-      this.$('.ipe-category-picker-top').css('display', '');
-
       // Get the current plugin_id.
       var plugin_id = $(e.currentTarget).data('plugin-id');
 
diff --git a/panels_ipe/js/views/CategoryView.js b/panels_ipe/js/views/CategoryView.js
index 24ef984..7cd62d8 100644
--- a/panels_ipe/js/views/CategoryView.js
+++ b/panels_ipe/js/views/CategoryView.js
@@ -209,6 +209,9 @@
 
           self.setTopMaxHeight();
 
+          // Remove the inline display style and add a unique class.
+          self.$('.ipe-category-picker-top').css('display', '').addClass('form-displayed');
+
           self.$('.ipe-category-picker-top').hide().fadeIn();
         };
 

From 8eba1a00e6c595b5294333d9d382764e4e1c5fdb Mon Sep 17 00:00:00 2001
From: "samuel.mortenson" <samuel.mortenson@2582268.no-reply.drupal.org>
Date: Mon, 21 Mar 2016 09:14:39 -0700
Subject: [PATCH 24/24] Issue #2688359 by swentel, samuel.mortenson, dsnopek:
 Allow editing of a block content

---
 panels_ipe/js/models/BlockModel.js                 | 16 ++++
 panels_ipe/js/panels_ipe.js                        |  7 ++
 panels_ipe/js/views/AppView.js                     | 63 +++++++++++++++
 panels_ipe/js/views/BlockContentPicker.js          |  2 +
 panels_ipe/js/views/BlockPicker.js                 |  3 +-
 panels_ipe/js/views/BlockView.js                   |  8 +-
 panels_ipe/js/views/CategoryView.js                | 21 ++++-
 panels_ipe/js/views/LayoutView.js                  | 45 ++++++++++-
 panels_ipe/panels_ipe.routing.yml                  | 45 ++++++++---
 .../src/Controller/PanelsIPEPageController.php     | 91 +++++++++++++++++++---
 panels_ipe/src/Form/PanelsIPEBlockContentForm.php  | 20 ++++-
 panels_ipe/src/Form/PanelsIPEBlockPluginForm.php   | 74 ++++--------------
 panels_ipe/src/PanelsIPEBlockRendererTrait.php     | 84 ++++++++++++++++++++
 .../DisplayBuilder/InPlaceEditorDisplayBuilder.php |  5 +-
 14 files changed, 390 insertions(+), 94 deletions(-)
 create mode 100644 panels_ipe/src/PanelsIPEBlockRendererTrait.php

diff --git a/panels_ipe/js/models/BlockModel.js b/panels_ipe/js/models/BlockModel.js
index ab6694f..0f8f258 100644
--- a/panels_ipe/js/models/BlockModel.js
+++ b/panels_ipe/js/models/BlockModel.js
@@ -50,6 +50,11 @@
       provider: null,
 
       /**
+       * The ID of the plugin for this block.
+       */
+      plugin_id: null,
+
+      /**
        * The HTML content of the block. This is stored in the model as the
        * IPE doesn't actually care what the block's content is, the functional
        * elements of the model are the metadata. The BlockView renders this
@@ -59,6 +64,17 @@
        */
       html: null
 
+    },
+
+    /**
+     * @type {function}
+     *
+     * @return {string}
+     *   A URL that can be used to refresh this Block model. Only fetch methods
+     *   are supported currently.
+     */
+    url: function () {
+      return Drupal.panels_ipe.urlRoot(drupalSettings) + '/block/' + this.get('uuid');
     }
 
   });
diff --git a/panels_ipe/js/panels_ipe.js b/panels_ipe/js/panels_ipe.js
index 2c26187..be0f8fe 100644
--- a/panels_ipe/js/panels_ipe.js
+++ b/panels_ipe/js/panels_ipe.js
@@ -75,6 +75,13 @@
         Drupal.panels_ipe.app.trigger('addContentBlock', settings['panels_ipe']['new_block_content']);
         delete settings['panels_ipe']['new_block_content'];
       }
+
+      // A Block Content entity has been edited.
+      if (settings['panels_ipe']['edit_block_content']) {
+        var uuid = settings['panels_ipe']['edit_block_content'];
+        Drupal.panels_ipe.app.trigger('editContentBlockDone', uuid);
+        delete settings['panels_ipe']['edit_block_content'];
+      }
     }
   };
 
diff --git a/panels_ipe/js/views/AppView.js b/panels_ipe/js/views/AppView.js
index 979ce5c..2d07d91 100644
--- a/panels_ipe/js/views/AppView.js
+++ b/panels_ipe/js/views/AppView.js
@@ -18,6 +18,14 @@
     template: _.template('<div class="ipe-tab-wrapper"></div>'),
 
     /**
+     * @type {function}
+     */
+    template_content_block_edit: _.template(
+      '<h4>' + Drupal.t('Edit existing "<strong><%- label %></strong>" content') + '</h4>' +
+      '<div class="ipe-block-type-form ipe-form"><div class="ipe-icon ipe-icon-loading"></div></div>'
+    ),
+
+    /**
      * @type {Drupal.panels_ipe.TabsView}
      */
     tabsView: null,
@@ -62,6 +70,8 @@
       this.listenTo(this.model, 'addBlockPlugin', this.addBlockPlugin);
       this.listenTo(this.model, 'configureBlock', this.configureBlock);
       this.listenTo(this.model, 'addContentBlock', this.addContentBlock);
+      this.listenTo(this.model, 'editContentBlock', this.editContentBlock);
+      this.listenTo(this.model, 'editContentBlockDone', this.editContentBlockDone);
 
       // Listen to tabs that don't have associated BackboneViews.
       this.listenTo(this.model.get('editTab'), 'change:active', this.clickEditTab);
@@ -295,6 +305,59 @@
     },
 
     /**
+     * Opens the Manage Content tray when editing an existing Content Block.
+     *
+     * @param {Drupal.panels_ipe.BlockModel} block
+     *   The Block that needs to have its form opened.
+     */
+    editContentBlock: function (block) {
+      var plugin_split = block.get('id').split(':');
+
+      // We're going to open the create content tab, which may take time to
+      // render. Load the Content Block edit form on render.
+      var create_content = this.tabsView.tabViews['create_content'];
+      create_content.on('render', function () {
+        var info = {
+          url: Drupal.panels_ipe.urlRoot(drupalSettings) + '/block_content/edit/block/' + plugin_split[1] + '/form',
+          model: block
+        };
+
+        create_content.loadForm(info, this.template_content_block_edit);
+
+        // We only need this event to trigger once.
+        create_content.off('render', null, this);
+      }, this);
+
+      this.tabsView.switchTab('create_content');
+    },
+
+    /**
+     * React after a content block has been edited.
+     *
+     * @param {string} block_content_uuid
+     *   The UUID of the Block Content entity that was edited.
+     */
+    editContentBlockDone: function(block_content_uuid) {
+      // Mark all tabs as inactive and close the view.
+      this.tabsView.collection.each(function (tab) {
+        tab.set('active', false);
+      });
+
+      // Find all on-screen Blocks that render this Content Block and refresh
+      // them from the server.
+      this.layoutView.model.get('regionCollection').each(function (region) {
+        var id = 'block_content:' + block_content_uuid;
+        var blocks = region.get('blockCollection').where({id: id});
+
+        for (var i in blocks) {
+          blocks[i].fetch();
+        }
+      });
+
+      this.tabsView.closeTabContent();
+    },
+
+    /**
      * Hides/shows certain elements if our unsaved state changes.
      */
     unsavedChange: function() {
diff --git a/panels_ipe/js/views/BlockContentPicker.js b/panels_ipe/js/views/BlockContentPicker.js
index fe5d9e6..12c8d55 100644
--- a/panels_ipe/js/views/BlockContentPicker.js
+++ b/panels_ipe/js/views/BlockContentPicker.js
@@ -112,6 +112,8 @@
         this.$('.ipe-category-picker-top').addClass('active');
       }
 
+      this.trigger('render');
+
       return this;
     },
 
diff --git a/panels_ipe/js/views/BlockPicker.js b/panels_ipe/js/views/BlockPicker.js
index 533476a..979ce65 100644
--- a/panels_ipe/js/views/BlockPicker.js
+++ b/panels_ipe/js/views/BlockPicker.js
@@ -199,8 +199,7 @@
       var plugin_id = $(e.currentTarget).data('plugin-id');
 
       // Generate a base URL for the form.
-      var layout_id = Drupal.panels_ipe.app.get('layout').get('id');
-      var url = Drupal.panels_ipe.urlRoot(drupalSettings) + '/layout/' + layout_id + '/block_plugins/';
+      var url = Drupal.panels_ipe.urlRoot(drupalSettings) + '/block_plugins/';
 
       var plugin;
 
diff --git a/panels_ipe/js/views/BlockView.js b/panels_ipe/js/views/BlockView.js
index c8a6cec..53ed153 100644
--- a/panels_ipe/js/views/BlockView.js
+++ b/panels_ipe/js/views/BlockView.js
@@ -15,7 +15,7 @@
      * @type {function}
      */
     template_actions: _.template(
-      '<div class="ipe-actions-block ipe-actions" data-block-action-id="<%- uuid %>">' +
+      '<div class="ipe-actions-block ipe-actions" data-block-action-id="<%- uuid %>" data-block-edit-id="<%- id %>">' +
       '  <h5>' + Drupal.t('Block: <%- label %>') + '</h5>' +
       '  <ul class="ipe-action-list">' +
       '    <li data-action-id="remove">' +
@@ -33,6 +33,11 @@
       '    <li data-action-id="configure">' +
       '      <a><span class="ipe-icon ipe-icon-configure"></span></a>' +
       '    </li>' +
+      '<% if (plugin_id == "block_content") { %>' +
+      '    <li data-action-id="edit-content-block">' +
+      '      <a><span class="ipe-icon ipe-icon-edit"></span></a>' +
+      '    </li>' +
+      '<% } %>' +
       '  </ul>' +
       '</div>'
     ),
@@ -62,6 +67,7 @@
         this.model.set({html: this.$el.prop('outerHTML')});
       }
       this.listenTo(this.model, 'reset', this.render);
+      this.listenTo(this.model, 'change', this.render);
     },
 
     /**
diff --git a/panels_ipe/js/views/CategoryView.js b/panels_ipe/js/views/CategoryView.js
index 7cd62d8..d802098 100644
--- a/panels_ipe/js/views/CategoryView.js
+++ b/panels_ipe/js/views/CategoryView.js
@@ -182,19 +182,32 @@
     getFormInfo: function(e) {},
 
     /**
-     * Displays a Configuration form in our top region.
+     * Determines form info from the current click event and displays a form.
      *
      * @param {Object} e
      *   The event object.
      */
     displayForm: function (e) {
-      var self = this;
-
       var info = this.getFormInfo(e);
 
       // Indicate an AJAX request.
+      this.loadForm(info);
+    },
+
+    /**
+     * Displays a configuration form in our top region.
+     *
+     * @param {Object} info
+     *   An object containing the form URL the model for our form template.
+     * @param {function} template
+     *   An optional callback function for the form template.
+     */
+    loadForm: function(info, template) {
+      template = template || this.template_form;
+      var self = this;
+
       this.$('.ipe-category-picker-top').fadeOut('fast', function () {
-        self.$('.ipe-category-picker-top').html(self.template_form(info.model.toJSON()));
+        self.$('.ipe-category-picker-top').html(template(info.model.toJSON()));
         self.$('.ipe-category-picker-top').fadeIn('fast');
 
         // Setup the Drupal.Ajax instance.
diff --git a/panels_ipe/js/views/LayoutView.js b/panels_ipe/js/views/LayoutView.js
index 6eb5365..e8c7f13 100644
--- a/panels_ipe/js/views/LayoutView.js
+++ b/panels_ipe/js/views/LayoutView.js
@@ -57,6 +57,7 @@
       'click [data-action-id="down"]': 'moveBlock',
       'click [data-action-id="remove"]': 'removeBlock',
       'click [data-action-id="configure"]': 'configureBlock',
+      'click [data-action-id="edit-content-block"]': 'editContentBlock',
       'drop .ipe-droppable': 'dropBlock'
     },
 
@@ -252,6 +253,19 @@
     },
 
     /**
+     * Get the block Uuid related to an event.
+     *
+     * @param {Object} e
+     *   The event object.
+     *
+     * @return {String}
+     *   The block Uuid
+     */
+    getEventBlockId: function (e) {
+      return $(e.currentTarget).closest('[data-block-edit-id]').data('block-edit-id');
+    },
+
+    /**
      * Moves an existing Block to a new region.
      *
      * @param block_uuid
@@ -335,9 +349,8 @@
      *   The UUID/ID of a BlockModel.
      */
     removeServerSideBlock: function (block_uuid) {
-      var urlRoot = Drupal.panels_ipe.urlRoot(drupalSettings);
       $.ajax({
-        url: urlRoot + '/layouts/' + this.model.get('id') + '/remove_block',
+        url: Drupal.panels_ipe.urlRoot(drupalSettings) + '/remove_block',
         method: 'DELETE',
         data: JSON.stringify(block_uuid),
         contentType: "application/json; charset=UTF-8"
@@ -410,11 +423,37 @@
       var region_name = $(e.currentTarget).closest('[data-region-name]').data('region-name');
       var region = this.model.get('regionCollection').get(region_name);
 
-      // Send a App-level event so our BlockPicker View can respond and display a Form.
+      // Send an App-level event so our BlockPicker View can display a Form.
       Drupal.panels_ipe.app.trigger('configureBlock', region.getBlock(id));
     },
 
     /**
+     * Edits an existing Content Block.
+     *
+     * @param {Object} e
+     *   The event object.
+     */
+    editContentBlock: function (e) {
+      // Get the BlockModel id (uuid).
+      var id = this.getEventBlockUuid(e);
+
+      // Get the blockModel content id.
+      var plugin_id = this.getEventBlockId(e);
+
+      // Split plugin id.
+      var plugin_split = plugin_id.split(':');
+
+      if (plugin_split[0] == 'block_content') {
+        // Grab the model for this region.
+        var region_name = $(e.currentTarget).closest('[data-region-name]').data('region-name');
+        var region = this.model.get('regionCollection').get(region_name);
+
+        // Send a App-level event so our BlockPicker View can respond and display a Form.
+        Drupal.panels_ipe.app.trigger('editContentBlock', region.getBlock(id));
+      }
+    },
+
+    /**
      * Reacts to a block being dropped on a droppable region.
      *
      * @param {Object} e
diff --git a/panels_ipe/panels_ipe.routing.yml b/panels_ipe/panels_ipe.routing.yml
index 2ec4183..464dc4b 100644
--- a/panels_ipe/panels_ipe.routing.yml
+++ b/panels_ipe/panels_ipe.routing.yml
@@ -16,7 +16,7 @@ panels_ipe.block_plugins:
     _method: 'GET'
 
 panels_ipe.block_plugin.form:
-  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layout/{layout_id}/block_plugins/{plugin_id}/form'
+  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/block_plugins/{plugin_id}/form'
   defaults:
     _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::getBlockPluginForm'
   requirements:
@@ -26,13 +26,22 @@ panels_ipe.block_plugin.form:
     _admin_route: FALSE
 
 panels_ipe.block_plugin_existing.form:
-  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layout/{layout_id}/block_plugins/{plugin_id}/block/{block_uuid}/form'
+  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/block_plugins/{plugin_id}/block/{block_uuid}/form'
   defaults:
     _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::getBlockPluginForm'
   requirements:
     _panels_storage_access: read
     _permission: 'access panels in-place editing'
 
+panels_ipe.remove_block:
+  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/remove_block'
+  defaults:
+    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::handleRemoveBlockRequest'
+  requirements:
+    _panels_storage_access: update
+    _permission: 'access panels in-place editing'
+    _method: 'DELETE'
+
 panels_ipe.block_content_types:
   path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/block_content/types'
   defaults:
@@ -48,7 +57,15 @@ panels_ipe.block_content.form:
     _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::getBlockContentForm'
   requirements:
     _panels_storage_access: read
-    _permission: 'access panels in-place editing'
+    _permission: 'access panels in-place editing+administer blocks'
+
+panels_ipe.block_content_existing.form:
+  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/block_content/{type}/block/{block_content_uuid}/form'
+  defaults:
+    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::getBlockContentForm'
+  requirements:
+    _panels_storage_access: read
+    _permission: 'access panels in-place editing+administer blocks'
 
 panels_ipe.layouts:
   path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layouts'
@@ -85,15 +102,6 @@ panels_ipe.layout.update_tempstore:
     _permission: 'access panels in-place editing'
     _method: 'PUT'
 
-panels_ipe.layout.remove_block:
-  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layouts/{layout_id}/remove_block'
-  defaults:
-    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::handleRemoveBlockRequest'
-  requirements:
-    _panels_storage_access: update
-    _permission: 'access panels in-place editing'
-    _method: 'DELETE'
-
 panels_ipe.layout.save:
   path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/layouts/{layout_id}'
   defaults:
@@ -102,3 +110,16 @@ panels_ipe.layout.save:
     _panels_storage_access: update
     _permission: 'access panels in-place editing'
     _method: 'POST'
+
+# @todo Add/consolidate routes for all Block CRUD operations.
+
+panels_ipe.block.read:
+  path: '/admin/panels_ipe/variant/{panels_storage_type}/{panels_storage_id}/block/{block_uuid}'
+  defaults:
+    _controller: '\Drupal\panels_ipe\Controller\PanelsIPEPageController::getBlock'
+  requirements:
+    _panels_storage_access: read
+    _permission: 'access panels in-place editing'
+    _method: 'GET'
+  options:
+    _admin_route: FALSE
diff --git a/panels_ipe/src/Controller/PanelsIPEPageController.php b/panels_ipe/src/Controller/PanelsIPEPageController.php
index b159686..467a912 100644
--- a/panels_ipe/src/Controller/PanelsIPEPageController.php
+++ b/panels_ipe/src/Controller/PanelsIPEPageController.php
@@ -11,15 +11,18 @@
 use Drupal\Core\Ajax\AppendCommand;
 use Drupal\Core\Block\BlockManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
+use Drupal\Core\Plugin\Context\ContextHandlerInterface;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\layout_plugin\Plugin\Layout\LayoutPluginManagerInterface;
 use Drupal\panels\Storage\PanelsStorageManagerInterface;
 use Drupal\panels_ipe\Helpers\RemoveBlockRequestHandler;
 use Drupal\panels_ipe\Helpers\UpdateLayoutRequestHandler;
+use Drupal\panels_ipe\PanelsIPEBlockRendererTrait;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Symfony\Component\HttpFoundation\JsonResponse;
 use Drupal\user\SharedTempStoreFactory;
@@ -29,6 +32,8 @@
  */
 class PanelsIPEPageController extends ControllerBase {
 
+  use PanelsIPEBlockRendererTrait;
+
   /**
    * @var \Drupal\Core\Block\BlockManagerInterface
    */
@@ -74,13 +79,15 @@ class PanelsIPEPageController extends ControllerBase {
    * @param \Drupal\layout_plugin\Plugin\Layout\LayoutPluginManagerInterface $layout_plugin_manager
    * @param \Drupal\panels\Storage\PanelsStorageManagerInterface $panels_storage_manager
    * @param \Drupal\user\SharedTempStoreFactory $temp_store_factory
+   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
    */
-  public function __construct(BlockManagerInterface $block_manager, RendererInterface $renderer, LayoutPluginManagerInterface $layout_plugin_manager, PanelsStorageManagerInterface $panels_storage_manager, SharedTempStoreFactory $temp_store_factory) {
+  public function __construct(BlockManagerInterface $block_manager, RendererInterface $renderer, LayoutPluginManagerInterface $layout_plugin_manager, PanelsStorageManagerInterface $panels_storage_manager, SharedTempStoreFactory $temp_store_factory, ContextHandlerInterface $context_handler) {
     $this->blockManager = $block_manager;
     $this->renderer = $renderer;
     $this->layoutPluginManager = $layout_plugin_manager;
     $this->panelsStorage = $panels_storage_manager;
     $this->tempStore = $temp_store_factory->get('panels_ipe');
+    $this->contextHandler = $context_handler;
     $this->updateLayoutRequestHandler = new UpdateLayoutRequestHandler($this->moduleHandler(), $this->panelsStorage, $this->tempStore);
     $this->removeBlockRequestHandler = new RemoveBlockRequestHandler($this->moduleHandler(), $this->panelsStorage, $this->tempStore);
   }
@@ -94,7 +101,8 @@ public static function create(ContainerInterface $container) {
       $container->get('renderer'),
       $container->get('plugin.manager.layout_plugin'),
       $container->get('panels.storage_manager'),
-      $container->get('user.shared_tempstore')
+      $container->get('user.shared_tempstore'),
+      $container->get('context.handler')
     );
   }
 
@@ -191,7 +199,7 @@ public function getLayouts($panels_storage_type, $panels_storage_id) {
    * @param string $layout_id
    *   The machine name of the requested layout.
    *
-   * @return AjaxResponse
+   * @return \Drupal\Core\Ajax\AjaxResponse
    */
   public function getLayoutForm($panels_storage_type, $panels_storage_id, $layout_id) {
     $panels_display = $this->loadPanelsDisplay($panels_storage_type, $panels_storage_id);
@@ -386,18 +394,35 @@ public function getBlockContentTypes($panels_storage_type, $panels_storage_id) {
    *   The id within the storage plugin for the requested Panels display.
    * @param string $type
    *   The requested Block Type.
-   *  @param string $type
-   *   The Block Content UUID, if an entity already exists.
+   * @param string $block_content_uuid
+   *   The Block Content Entity UUID, if this is an existing Block.
+   *
+   * @return \Drupal\Core\Ajax\AjaxResponse
    *
-   * @return NotFoundHttpException|Response
+   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
    */
-  public function getBlockContentForm($panels_storage_type, $panels_storage_id, $type) {
+  public function getBlockContentForm($panels_storage_type, $panels_storage_id, $type, $block_content_uuid = NULL) {
     $storage = $this->entityTypeManager()->getStorage('block_content');
 
-    // Create a new block of the given type.
-    $block = $storage->create([
-      'type' => $type
-    ]);
+    // Create or load a new block of the given type.
+    if ($block_content_uuid) {
+      $block_list = $storage->loadByProperties(['uuid' => $block_content_uuid]);
+      $block = array_shift($block_list);
+
+      $operation = 'update';
+    }
+    else {
+      $block = $storage->create([
+        'type' => $type
+      ]);
+
+      $operation = 'create';
+    }
+
+    // Check Block Content entity access for the current operation.
+    if (!$block->access($operation)) {
+      throw new AccessDeniedHttpException();
+    }
 
     // Grab our Block Content Entity form handler.
     $form = $this->entityFormBuilder()->getForm($block, 'panels_ipe');
@@ -409,4 +434,48 @@ public function getBlockContentForm($panels_storage_type, $panels_storage_id, $t
     return $response;
   }
 
+  /**
+   * Gets a single Block from the current Panels Display. Uses TempStore.
+   *
+   * @param string $panels_storage_type
+   *   The id of the storage plugin.
+   * @param string $panels_storage_id
+   *   The id within the storage plugin for the requested Panels display.
+   * @param string $block_uuid
+   *   The Block UUID.
+   *
+   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   */
+  public function getBlock($panels_storage_type, $panels_storage_id, $block_uuid) {
+    $panels_display = $this->loadPanelsDisplay($panels_storage_type, $panels_storage_id);
+
+    /** @var \Drupal\Core\Block\BlockBase $block_instance */
+    $block_instance = $panels_display->getBlock($block_uuid);
+    $block_config = $block_instance->getConfiguration();
+
+    // Assemble data required for our App.
+    $build = $this->buildBlockInstance($block_instance, $panels_display);
+
+    // Bubble Block attributes to fix bugs with the Quickedit and Contextual
+    // modules.
+    $this->bubbleBlockAttributes($build);
+
+    // Add our data attribute for the Backbone app.
+    $build['#attributes']['data-block-id'] = $block_uuid;
+
+    $plugin_definition = $block_instance->getPluginDefinition();
+
+    $block_model = [
+      'uuid' => $block_uuid,
+      'label' => $block_instance->label(),
+      'id' => $block_instance->getPluginId(),
+      'region' => $block_config['region'],
+      'provider' => $block_config['provider'],
+      'plugin_id' => $plugin_definition['id'],
+      'html' => $this->renderer->render($build),
+    ];
+
+    return new JsonResponse($block_model);
+  }
+
 }
diff --git a/panels_ipe/src/Form/PanelsIPEBlockContentForm.php b/panels_ipe/src/Form/PanelsIPEBlockContentForm.php
index 9015a19..b026c6e 100644
--- a/panels_ipe/src/Form/PanelsIPEBlockContentForm.php
+++ b/panels_ipe/src/Form/PanelsIPEBlockContentForm.php
@@ -16,11 +16,17 @@ class PanelsIPEBlockContentForm extends BlockContentForm {
    * {@inheritdoc}
    */
   protected function actions(array $form, FormStateInterface $form_state) {
+
+    $button_value = $this->t('Create and Place');
+    if (!$this->entity->isNew()) {
+      $button_value = $this->t('Update');
+    }
+
     // Override normal BlockContentForm actions as we need to be AJAX
     // compatible, and also need to communicate with our App.
     $actions['submit'] = [
       '#type' => 'button',
-      '#value' => $this->t('Create and Place'),
+      '#value' => $button_value,
       '#name' => 'panels_ipe_submit',
       '#ajax' => [
         'callback' => '::submitForm',
@@ -42,6 +48,11 @@ protected function actions(array $form, FormStateInterface $form_state) {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
+    $form['is_new'] = [
+      '#type' => 'value',
+      '#value' => $this->entity->isNew(),
+    ];
+
     // Wrap our form so that our submit callback can re-render the form.
     $form['#prefix'] = '<div id="panels-ipe-block-type-form-wrapper">';
     $form['#suffix'] = '</div>';
@@ -67,7 +78,12 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
     parent::save($form, $form_state);
 
     // Inform the App that we've created a new Block Content entity.
-    $form['#attached']['drupalSettings']['panels_ipe']['new_block_content'] = $this->entity->uuid();
+    if ($form_state->getValue('is_new')) {
+      $form['#attached']['drupalSettings']['panels_ipe']['new_block_content'] = $this->entity->uuid();
+    }
+    else {
+      $form['#attached']['drupalSettings']['panels_ipe']['edit_block_content'] = $this->entity->uuid();
+    }
 
     return $form;
   }
diff --git a/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php b/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
index 629ad12..cfa87d2 100644
--- a/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
+++ b/panels_ipe/src/Form/PanelsIPEBlockPluginForm.php
@@ -18,6 +18,7 @@
 use Drupal\Core\Render\Element;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;
+use Drupal\panels_ipe\PanelsIPEBlockRendererTrait;
 use Drupal\user\SharedTempStoreFactory;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
@@ -31,17 +32,14 @@ class PanelsIPEBlockPluginForm extends FormBase {
 
   use ContextAwarePluginAssignmentTrait;
 
+  use PanelsIPEBlockRendererTrait;
+
   /**
    * @var \Drupal\Component\Plugin\PluginManagerInterface $blockManager
    */
   protected $blockManager;
 
   /**
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface $contextHandler
-   */
-  protected $contextHandler;
-
-  /**
    * @var \Drupal\Core\Render\RendererInterface $renderer
    */
   protected $renderer;
@@ -290,28 +288,24 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
     $this->tempStore->set($this->panelsDisplay->id(), $this->panelsDisplay->getConfiguration());
 
     // Assemble data required for our App.
-    $build = $this->buildBlockInstance($block_instance);
-
-    // Bubble block attributes up if possible. This allows modules like
-    // Quickedit to function.
-    // See \Drupal\block\BlockViewBuilder::preRender() for reference.
-    if ($build['content'] !== NULL && !Element::isEmpty($build['content'])) {
-      foreach (['#attributes', '#contextual_links'] as $property) {
-        if (isset($build['content'][$property])) {
-          $build[$property] += $build['content'][$property];
-          unset($build['content'][$property]);
-        }
-      }
-    }
+    $build = $this->buildBlockInstance($block_instance, $this->panelsDisplay);
+
+    // Bubble Block attributes to fix bugs with the Quickedit and Contextual
+    // modules.
+    $this->bubbleBlockAttributes($build);
 
     // Add our data attribute for the Backbone app.
     $build['#attributes']['data-block-id'] = $uuid;
 
+    $plugin_definition = $block_instance->getPluginDefinition();
+
     $block_model = [
       'uuid' => $uuid,
       'label' => $block_instance->label(),
       'id' => $block_instance->getPluginId(),
       'region' => $block_config['region'],
+      'provider' => $block_config['provider'],
+      'plugin_id' => $plugin_definition['id'],
       'html' => $this->renderer->render($build),
     ];
 
@@ -347,7 +341,10 @@ public function submitPreview(array &$form, FormStateInterface $form_state) {
     $this->submitBlock($block_instance, $form, $form_state);
 
     // Gather a render array for the block.
-    $build = $this->buildBlockInstance($block_instance);
+    $build = $this->buildBlockInstance($block_instance, $this->panelsDisplay);
+
+    // Disable any nested forms from the render array.
+    $build['content'] = $this->removeFormWrapperRecursive($build['content']);
 
     // Add the preview to the backside of the card and inform JS that we need to
     // be flipped.
@@ -422,43 +419,4 @@ protected function removeFormWrapperRecursive(array $content) {
     return $content;
   }
 
-  /**
-   * Compiles a render array for the given Block instance based on the form.
-   *
-   * @param \Drupal\Core\Block\BlockBase $block_instance
-   *   The Block instance you want to render.
-   *
-   * @return array $build
-   *   The Block render array.
-   */
-  protected function buildBlockInstance($block_instance) {
-    // Get the new block configuration.
-    $configuration = $block_instance->getConfiguration();
-
-    // Add context to the block.
-    if ($block_instance instanceof ContextAwarePluginInterface) {
-      $this->contextHandler->applyContextMapping($block_instance, $this->panelsDisplay->getContexts());
-    }
-
-    // Build the block content.
-    $content = $block_instance->build();
-
-    // Disable any nested forms from the render array.
-    $content = $this->removeFormWrapperRecursive($content);
-
-    // Compile the render array.
-    $build = [
-      '#theme' => 'block',
-      '#attributes' => [],
-      '#contextual_links' => [],
-      '#configuration' => $configuration,
-      '#plugin_id' => $block_instance->getPluginId(),
-      '#base_plugin_id' => $block_instance->getBaseId(),
-      '#derivative_plugin_id' => $block_instance->getDerivativeId(),
-      'content' => $content,
-    ];
-
-    return $build;
-  }
-
 }
diff --git a/panels_ipe/src/PanelsIPEBlockRendererTrait.php b/panels_ipe/src/PanelsIPEBlockRendererTrait.php
new file mode 100644
index 0000000..51f499a
--- /dev/null
+++ b/panels_ipe/src/PanelsIPEBlockRendererTrait.php
@@ -0,0 +1,84 @@
+<?php
+
+/**
+ * @file
+ * Contains \Drupal\panels_ipe\PanelsIPEBlockRendererTrait.
+ */
+
+namespace Drupal\panels_ipe;
+
+use Drupal\Core\Plugin\ContextAwarePluginInterface;
+use Drupal\Core\Render\Element;
+
+/**
+ * Provides methods to render Blocks for display in Panels IPE.
+ */
+trait PanelsIPEBlockRendererTrait {
+
+  /**
+   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface $contextHandler
+   */
+  protected $contextHandler;
+
+  /**
+   * Compiles a render array for the given Block instance based on the form.
+   *
+   * @param \Drupal\Core\Block\BlockBase $block_instance
+   *   The Block instance you want to render.
+   * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
+   *   The Panels Display that contains the Block instance.
+   *
+   * @return array $build
+   *   The Block render array.
+   */
+  protected function buildBlockInstance($block_instance, $panels_display) {
+    // Get the new block configuration.
+    $configuration = $block_instance->getConfiguration();
+
+    // Add context to the block.
+    if ($this->contextHandler && $block_instance instanceof ContextAwarePluginInterface) {
+      $this->contextHandler->applyContextMapping($block_instance, $panels_display->getContexts());
+    }
+
+    // Build the block content.
+    $content = $block_instance->build();
+
+    // Compile the render array.
+    $build = [
+      '#theme' => 'block',
+      '#attributes' => [],
+      '#contextual_links' => [],
+      '#configuration' => $configuration,
+      '#plugin_id' => $block_instance->getPluginId(),
+      '#base_plugin_id' => $block_instance->getBaseId(),
+      '#derivative_plugin_id' => $block_instance->getDerivativeId(),
+      'content' => $content,
+    ];
+
+    return $build;
+  }
+
+  /**
+   * Bubble block attributes up if possible. This allows modules like
+   * Quickedit to function.
+   *
+   * @see \Drupal\block\BlockViewBuilder::preRender for reference.
+   *
+   * @param array $build
+   *   The Block render array.
+   */
+  protected function bubbleBlockAttributes(&$build) {
+    // Bubble block attributes up if possible. This allows modules like
+    // Quickedit to function.
+    // See \Drupal\block\BlockViewBuilder::preRender() for reference.
+    if ($build['content'] !== NULL && !Element::isEmpty($build['content'])) {
+      foreach (['#attributes', '#contextual_links'] as $property) {
+        if (isset($build['content'][$property])) {
+          $build[$property] += $build['content'][$property];
+          unset($build['content'][$property]);
+        }
+      }
+    }
+  }
+
+}
diff --git a/panels_ipe/src/Plugin/DisplayBuilder/InPlaceEditorDisplayBuilder.php b/panels_ipe/src/Plugin/DisplayBuilder/InPlaceEditorDisplayBuilder.php
index 64b6dd7..8d8bf39 100644
--- a/panels_ipe/src/Plugin/DisplayBuilder/InPlaceEditorDisplayBuilder.php
+++ b/panels_ipe/src/Plugin/DisplayBuilder/InPlaceEditorDisplayBuilder.php
@@ -114,12 +114,15 @@ protected function getDrupalSettings(array $regions, LayoutInterface $layout, Pa
       /** @var \Drupal\Core\Block\BlockPluginInterface[] $blocks */
       foreach ($blocks as $block_uuid => $block) {
         $configuration = $block->getConfiguration();
+        $plugin_definition = $block->getPluginDefinition();
         $setting = [
           'uuid' => $block_uuid,
           'label' => $block->label(),
           'id' => $block->getPluginId(),
+          'provider' => $configuration['provider'],
+          'plugin_id' => $plugin_definition['id'],
         ];
-        $settings['regions'][$region]['blocks'][$block_uuid] = NestedArray::mergeDeep($configuration, $setting);
+        $settings['regions'][$region]['blocks'][$block_uuid] = $setting;
       }
     }
 
